[{"id":"9958e70b-ca8b-4cef-be99-0c80aeeba639","orgId":"9896fbdd-a064-44d6-83e4-ca0a67577c9e","productId":"ca03785c-c37f-4a96-acfc-2805bccd408f","parentAppId":"f854e143-92b4-4078-8c2e-5424ad7cc422","name":"Scan-WebGoat_dev-2023/12/27 12:28:07 PM","status":"Finished","message":"Scan finished","languages":["Java*","JavaScript / Node.js"],"results":[{"engineId":8,"language":"JavaScript / Node.js","results":[{"type":{"id":5,"sarif":"js-cmd-inj","order":0,"name":"Command Injection","risk":"High","sarifLevel":"","severityRating":8.557,"description":"Command Injection vulnerability occurs when an application passes unsafe data supplied by the user (forms, cookies, HTTP headers etc.) to a system shell. In this attack operating system commands supplied by the attacker are usually executed with the privileges of the vulnerable application. Successful shell command execution attack can result in arbitrary command execution and a full system compromise","recommendation":["Blacklisting forbidden character sequences","Whitelisting allowed character sequences","Restricting permissions on operating system commands","Filtering out command directory names"],"references":["https://www.owasp.org/index.php/Command_Injection"],"cwe":{"id":"CWE-78","title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","url":"https://cwe.mitre.org/data/definitions/78.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"88","title":"CAPEC-88: OS Command Injection","url":"https://capec.mitre.org/data/definitions/88.html"},"sansTop25":{"rank":5,"title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":0,"sarif":"js-sqli","order":1,"name":"SQL Injection","risk":"High","sarifLevel":"","severityRating":8.415,"description":"SQL Injection vulnerability occurs when a user input is used in the construction of an SQL query without proper user input string neutralization (sanitization). A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown of the DBMS), recover the content of a given file present on the DBMS file system or in some cases issue commands to the operating system","recommendation":["Using prepared statements (with parameterized queries)","Correct filtering (escaping) of string literal escape characters in SQL statements, like single quote ('), double quote (\"), backslash (\\) and the NULL byte","Checking parameters for valid representation for the give type (integer, float or boolean)","Correct database permissions on logon, which restricts web application or user access to unnecessary data"],"references":["https://owasp.org/www-community/attacks/SQL_Injection","https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html"],"cwe":{"id":"CWE-89","title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","url":"https://cwe.mitre.org/data/definitions/89.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"66","title":"CAPEC-66: SQL Injection","url":"https://capec.mitre.org/data/definitions/66.html"},"sansTop25":{"rank":3,"title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":3,"sarif":"js-code-inj","order":2,"name":"Code Injection","risk":"High","sarifLevel":"","severityRating":8.2,"description":"The application constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment. When the application allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the application. Such an alteration could lead to arbitrary code execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Rejecting any input that does not strictly conform to specifications, or transforming it into something that does","When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules","To reduce the likelihood of code injection, stringent whitelists that limit which constructs are allowed should be used. If the code that invokes a function is dynamically constructed, then verifying that the input is alphanumeric might be insufficient"],"references":["https://owasp.org/www-community/attacks/Code_Injection"],"cwe":{"id":"CWE-94","title":"CWE-94: Improper Control of Generation of Code ('Code Injection')","url":"https://cwe.mitre.org/data/definitions/94.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"242","title":"CAPEC-242: Code Injection","url":"https://capec.mitre.org/data/definitions/242.html"},"sansTop25":{"rank":23,"title":"CWE-94: Improper Control of Generation of Code ('Code Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":4,"sarif":"js-path-traversal","order":3,"name":"Path/Directory Traversal","risk":"High","sarifLevel":"","severityRating":7.913,"description":"Path/Directory Traversal or file disclosure vulnerability occurs when an external input is used to construct a pathname that is intended to identify a file or a directory located underneath a restricted parent directory. The application does not properly neutralize (sanitize) special elements within the pathname, which can cause the pathname to resolve to a location that is outside of the restricted directory. Successful file disclosure attack can result in sensitive files disclosure, and can often lead to full system compromise","recommendation":["Using a whitelist of directories from which files are allowed for download and validating requests based on that list","Indexing files which are allowed for download and passing only their index numbers as the URL parameter values","Validating requested file types"],"references":["https://owasp.org/www-community/attacks/Path_Traversal"],"cwe":{"id":"CWE-22","title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","url":"https://cwe.mitre.org/data/definitions/22.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A5","title":"A5: Broken Access Control","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control"},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"126","title":"CAPEC-126: Path Traversal","url":"https://capec.mitre.org/data/definitions/126.html"},"sansTop25":{"rank":8,"title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":12,"sarif":"js-nosql-inj","order":4,"name":"NoSQL Injection","risk":"High","sarifLevel":"","severityRating":7.067,"description":"NoSQL injection vulnerabilities allow attackers to inject code into commands for databases that donâ€™t use SQL queries, such as MongoDB","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/943.html"],"cwe":{"id":"CWE-943","title":"CWE-943: Improper Neutralization of Special Elements in Data Query Logic","url":"https://cwe.mitre.org/data/definitions/943.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":1,"sarif":"js-dom-xss","order":5,"name":"DOM Based Cross-Site Scripting","risk":"High","sarifLevel":"","severityRating":7.048,"description":"Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser","recommendation":["Escape HTML before inserting untrusted data into element content","Escape attribute before inserting untrusted data into HTML common attributes","Escape JavaScript before inserting untrusted data into JavaScript data values","Escape CSS and strictly validate before inserting untrusted data into HTML style property values","Escape URL before inserting untrusted data into HTML URL parameter values","Use HTML policy engine to validate or clean user-driven HTML in an outbound way","Use HTTPOnly cookie flag"],"references":["https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"],"cwe":{"id":"CWE-79","title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","url":"https://cwe.mitre.org/data/definitions/79.html"},"pcidss":{"section":"6.5.7","title":"PCI DSS 6.5.7 - Cross-Site Scripting (XSS)"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A7","title":"A7: Cross-Site Scripting (XSS)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"63","title":"CAPEC-63: Cross-Site Scripting (XSS)","url":"https://capec.mitre.org/data/definitions/63.html"},"sansTop25":{"rank":2,"title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"a915713a-68a9-4eda-8155-8335d8213263","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"a293e1ab-d3ec-45a4-8425-4bc114a0fa6f","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":1,"name":"DOM Based Cross-Site Scripting","engineId":8,"language":"JavaScript / Node.js","sarif":"js-dom-xss","sarifLevel":""},"description":"Use of innerHtml property can result in DOM based Cross Site Scripting vulnerability.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":true,"suppressedBy":"am@armorcode.io","suppressionTime":"2024-01-23T14:04:53.507Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"innerHtml ","kind":"","file":"src/main/resources/webgoat/static/js/quiz.js","snippet":"document.getElementById(\"q_container\").innerHTML = html;","line":34,"startLine":30,"endLine":39,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"1e4df369-c797-4fe2-a87b-e9709a733ac2","file":"src/main/resources/webgoat/static/js/quiz.js","line":18,"stepsCount":8,"isNew":true,"rating":8.76923076923077},{"id":"8034e19d-6631-43f7-8c23-38b7065e8ed3","file":"src/main/resources/webgoat/static/js/quiz.js","line":18,"stepsCount":8,"isNew":true,"rating":8.76923076923077},{"id":"33036492-a084-48d6-bea3-39ec7198391e","file":"src/main/resources/webgoat/static/js/quiz.js","line":18,"stepsCount":8,"isNew":true,"rating":8.76923076923077}],"severityRating":7.048,"confidenceRating":10,"ageRating":0,"rating":0,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":2,"sarif":"js-xss","order":6,"name":"Cross-Site Scripting","risk":"High","sarifLevel":"","severityRating":7.048,"description":"Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser","recommendation":["Escape HTML before inserting untrusted data into element content","Escape attribute before inserting untrusted data into HTML common attributes","Escape JavaScript before inserting untrusted data into JavaScript data values","Escape CSS and strictly validate before inserting untrusted data into HTML style property values","Escape URL before inserting untrusted data into HTML URL parameter values","Use HTML policy engine to validate or clean user-driven HTML in an outbound way","Use HTTPOnly cookie flag"],"references":["https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"],"cwe":{"id":"CWE-79","title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","url":"https://cwe.mitre.org/data/definitions/79.html"},"pcidss":{"section":"6.5.7","title":"PCI DSS 6.5.7 - Cross-Site Scripting (XSS)"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A7","title":"A7: Cross-Site Scripting (XSS)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"63","title":"CAPEC-63: Cross-Site Scripting (XSS)","url":"https://capec.mitre.org/data/definitions/63.html"},"sansTop25":{"rank":2,"title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":16,"sarif":"js-hardcoded-creds","order":7,"name":"Hardcoded Password/Credentials","risk":"Medium","sarifLevel":"","severityRating":6.44,"description":"The application contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data","recommendation":["Store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key. If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible"],"references":["https://www.owasp.org/index.php/Use_of_hard-coded_password"],"cwe":{"id":"CWE-798","title":"CWE-798: Use of Hard-coded Credentials","url":"https://cwe.mitre.org/data/definitions/798.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-28","priority":"P1","title":"SC-28: Protection of Information at Rest","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-28"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A7","title":"A7 - Identification and Authentication Failures","url":"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":18,"title":"CWE-798: Use of Hard-coded Credentials"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":14,"sarif":"js-weak-rnd","order":8,"name":"Weak Pseudo-Random","risk":"Medium","sarifLevel":"","severityRating":5.536,"description":"When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography","recommendation":["Use functions or hardware which use a hardware-based random number generation for all crypto"],"references":["https://www.owasp.org/index.php/Insecure_Randomness"],"cwe":{"id":"CWE-338","title":"CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)","url":"https://cwe.mitre.org/data/definitions/338.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":2,"dataFlowsCount":2,"remediationCount":0,"countWithFP":2,"vulnerabilities":[],"Findings":[{"finding":{"id":"80d10d43-7219-4303-a4ce-5593e995d730","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"781d8080-3495-4a39-b11f-47bbdd2fed41","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":14,"name":"Weak Pseudo-Random","engineId":8,"language":"JavaScript / Node.js","sarif":"js-weak-rnd","sarifLevel":""},"description":"It is not advised to use weak random generator methods.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"Weak Random ","kind":"","file":"src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html","snippet":"document.getElementById(\"networkNum\").value = Math.random() * 100;","line":53,"startLine":49,"endLine":58,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"19f4535c-d9b7-4d55-8b7e-c71bcc8efe9b","file":"src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html","line":53,"stepsCount":1,"isNew":true,"rating":8.76923076923077}],"severityRating":5.536,"confidenceRating":10,"ageRating":0,"rating":4.4288,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"90980683-6c11-4bf6-84bf-a7d0c5d286cb","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"bc0d8540-9768-463a-8c93-58f22f52de26","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":14,"name":"Weak Pseudo-Random","engineId":8,"language":"JavaScript / Node.js","sarif":"js-weak-rnd","sarifLevel":""},"description":"It is not advised to use weak random generator methods.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"Weak Random ","kind":"","file":"src/main/resources/lessons/httpbasics/html/HttpBasics.html","snippet":"var x = Math.floor((Math.random() * 100) + 1);","line":59,"startLine":55,"endLine":64,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"ac980815-11c9-4cf4-ad6c-44b22c02124c","file":"src/main/resources/lessons/httpbasics/html/HttpBasics.html","line":59,"stepsCount":1,"isNew":true,"rating":8.76923076923077}],"severityRating":5.536,"confidenceRating":10,"ageRating":0,"rating":4.4288,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":15,"sarif":"js-misc","order":9,"name":"Miscellaneous Dangerous Functions","risk":"Medium","sarifLevel":"","severityRating":4.653,"description":"Miscellaneous dangerous functions are functions that could introduce a vulnerability of an unpredictable security impact if they are used incorrectly. Functions like LoadLibrary or printStackTrace could result in arbitrary code execution or information disclosure","recommendation":["Avoid use of potentially dangerous or depreciated functions"],"references":["https://cwe.mitre.org/data/definitions/676.html"],"cwe":{"id":"CWE-676","title":"CWE-676: Use of Potentially Dangerous Function","url":"https://cwe.mitre.org/data/definitions/676.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":11,"sarif":"js-regex-dos","order":10,"name":"Regex Denial of Service (ReDoS)","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time, affecting the availability of the application","recommendation":["Do not pass untrusted user input to functions that perform regular expression searches"],"references":["https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"492","title":"CAPEC-492: Regular Expression Exponential Blowup","url":"https://capec.mitre.org/data/definitions/492.html"},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":8,"sarif":"js-redirect","order":11,"name":"Unvalidated/Open Redirect","risk":"Low","sarifLevel":"","severityRating":3.107,"description":"Open Redirect vulnerability occurs when untrusted user input is passed to HTTP location redirect functions or properties. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts may have a more trustworthy appearance","recommendation":["Do not pass untrusted user input to location redirection functions or properties"],"references":["https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"],"cwe":{"id":"CWE-601","title":"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')","url":"https://cwe.mitre.org/data/definitions/601.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"194","title":"CAPEC-194: Fake the Source of Data","url":"https://capec.mitre.org/data/definitions/194.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":10,"sarif":"js-log-forge","order":12,"name":"Log Forging","risk":"Low","sarifLevel":"","severityRating":3.097,"description":"Log Forging vulnerability occurs when an application either does not neutralize (sanitize) or it incorrectly neutralizes output that is written to logs. This can allow an attacker to forge log entries or inject malicious content into log records","recommendation":["Validating and encoding all input that could be outputed in the log file"],"references":["https://www.owasp.org/index.php/Log_Injection"],"cwe":{"id":"CWE-117","title":"CWE-117: Improper Output Neutralization for Logs","url":"https://cwe.mitre.org/data/definitions/117.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A9","title":"A9 - Security Logging and Monitoring Failures","url":"https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"},"capec":{"id":"93","title":"CAPEC-93: Log Injection-Tampering-Forging","url":"https://capec.mitre.org/data/definitions/93.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":7,"sarif":"js-header-inj","order":13,"name":"HTTP Header Injection","risk":"Low","sarifLevel":"","severityRating":2.969,"description":"HTTP header injection is a general class of web application security vulnerability which occurs when HTTP headers are dynamically generated based on user input. Header injection in HTTP responses can allow for HTTP response splitting, Session fixation via the Set-Cookie header, cross-site scripting (XSS), and malicious redirect attacks via the location header","recommendation":["Do not pass untrusted user input to functions that affect response header content"],"references":["https://cwe.mitre.org/data/definitions/113.html"],"cwe":{"id":"CWE-113","title":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')","url":"https://cwe.mitre.org/data/definitions/113.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":6,"sarif":"js-resp-split","order":14,"name":"HTTP Response Splitting","risk":"Low","sarifLevel":"","severityRating":2.969,"description":"HTTP Response Splitting vulnerability occurs when a user input that contains CR (carriage return, also represented by %0d or \\r) and LF (line feed, also represented by %0a or \\n) characters is included in the web application HTTP response headers. The failure to remove CRs and LFs allows an attacker to set arbitrary headers, take control of the body, or break the response into two or more separate responses and allow for different types of attacks such as Cross Site Scripting, cross-user defacement, web cache poisoning and similar exploits","recommendation":["Remove CRs and LFs (and all other hazardous characters) before embedding data into any HTTP response header, particularly when setting cookies and redirecting","Use a whitelist of acceptable inputs that strictly conform to specifications","When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields"],"references":["https://www.owasp.org/index.php/HTTP_Response_Splitting"],"cwe":{"id":"CWE-113","title":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')","url":"https://cwe.mitre.org/data/definitions/113.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"34","title":"CAPEC-34: HTTP Response Splitting","url":"https://capec.mitre.org/data/definitions/34.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":13,"sarif":"js-dangerous-func","order":15,"name":"Use of Inherently Dangerous Function","risk":"Low","sarifLevel":"","severityRating":2.82,"description":"The application calls a function that can never be guaranteed to work safely. Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account","recommendation":["Ban the use of dangerous functions. Use their safe equivalent"],"references":["https://cwe.mitre.org/data/definitions/242.html"],"cwe":{"id":"CWE-242","title":"CWE-242: Use of Inherently Dangerous Function","url":"https://cwe.mitre.org/data/definitions/242.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":9,"sarif":"js-cookie-inj","order":16,"name":"Cookie Injection","risk":"Low","sarifLevel":"","severityRating":2.381,"description":"The application does not validate or incorrectly validates input that can affect the control flow or data flow of a program, or in this specific case application cookies. When the application does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/20.html"],"cwe":{"id":"CWE-20","title":"CWE-20: Improper Input Validation","url":"https://cwe.mitre.org/data/definitions/20.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":3,"title":"CWE-20: Improper Input Validation"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":17,"sarif":"js-xxe","order":17,"name":"XML External Entity (XXE) Injection","risk":"Medium","sarifLevel":"","severityRating":6.408,"description":"The application processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the application to embed incorrect documents into its output. XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing","recommendation":["Many XML parsers and validators can be configured to disable external entity expansion"],"references":["https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing"],"cwe":{"id":"CWE-611","title":"CWE-611: Improper Restriction of XML External Entity Reference","url":"https://cwe.mitre.org/data/definitions/611.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A4","title":"A4: XML External Entities (XXE)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A4-XML_External_Entities_(XXE)"},"owasp2021":{"index":"A5","title":"A5 - Security Misconfiguration","url":"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"},"capec":{"id":"201","title":"CAPEC-201: Serialized Data External Linking","url":"https://capec.mitre.org/data/definitions/201.html"},"sansTop25":{"rank":17,"title":"CWE-611: Improper Restriction of XML External Entity Reference"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":18,"sarif":"js-ssrf","order":18,"name":"Server Side Request Forgery","risk":"High","sarifLevel":"","severityRating":6.7,"description":"Server Side Request Forgery occures when the web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination. By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests","recommendation":["Use a whitelist of allowed domains and protocols from where the web server can fetch remote resources"],"references":["https://www.owasp.org/index.php/Server_Side_Request_Forgery"],"cwe":{"id":"CWE-918","title":"CWE-918: Server-Side Request Forgery (SSRF)","url":"https://cwe.mitre.org/data/definitions/918.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A10","title":"A10 - Server-Side Request Forgery (SSRF)","url":"https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":19,"title":"CWE-918: Server-Side Request Forgery (SSRF)"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":19,"sarif":"js-ldap-inj","order":19,"name":"LDAP Injection","risk":"Medium","sarifLevel":"","severityRating":5.458,"description":"LDAP injection vulnerability occurs when an application constructs all or a part of an LDAP query using a user input, but it either does not neutralize (sanitize) or it incorrectly neutralizes special elements that could modify the intended LDAP query. Successful LDAP injection attack can result in the execution of arbitrary commands such as granting permissions to unauthorized queries and content modification inside the LDAP tree","recommendation":["Type validation (example: int userinput = Convert.ToInt32(Request.Querystring(\"userinput\"))","Pattern validation (example: string email = Regex.IsMatch(Request.Querystring(\"email\"),\"^.+@[^\\.].*\\.[a-z]{2,}$\"))","Domain values validation (example: string country = Request.Querystring(???country???) in {???USA???, ???UK???})"],"references":["https://www.owasp.org/index.php/LDAP_injection"],"cwe":{"id":"CWE-90","title":"CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')","url":"https://cwe.mitre.org/data/definitions/90.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"136","title":"CAPEC-136: LDAP Injection","url":"https://capec.mitre.org/data/definitions/136.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]}]},{"engineId":101,"language":"Java*","results":[{"type":{"id":1,"sarif":"java-cmd-inj","order":0,"name":"Command Injection","risk":"High","sarifLevel":"","severityRating":8.557,"description":"Command Injection vulnerability occurs when an application passes unsafe data supplied by the user (forms, cookies, HTTP headers etc.) to a system shell. In this attack operating system commands supplied by the attacker are usually executed with the privileges of the vulnerable application. Successful shell command execution attack can result in arbitrary command execution and a full system compromise","recommendation":["Blacklisting forbidden character sequences","Whitelisting allowed character sequences","Restricting permissions on operating system commands","Filtering out command directory names"],"references":["https://www.owasp.org/index.php/Command_Injection"],"cwe":{"id":"CWE-78","title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","url":"https://cwe.mitre.org/data/definitions/78.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"88","title":"CAPEC-88: OS Command Injection","url":"https://capec.mitre.org/data/definitions/88.html"},"sansTop25":{"rank":5,"title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":2,"sarif":"java-sqli","order":1,"name":"SQL Injection","risk":"High","sarifLevel":"","severityRating":8.415,"description":"SQL Injection vulnerability occurs when a user input is used in the construction of an SQL query without proper user input string neutralization (sanitization). A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown of the DBMS), recover the content of a given file present on the DBMS file system or in some cases issue commands to the operating system","recommendation":["Using prepared statements (with parameterized queries)","Correct filtering (escaping) of string literal escape characters in SQL statements, like single quote ('), double quote (\"), backslash (\\) and the NULL byte","Checking parameters for valid representation for the give type (integer, float or boolean)","Correct database permissions on logon, which restricts web application or user access to unnecessary data"],"references":["https://owasp.org/www-community/attacks/SQL_Injection","https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html"],"cwe":{"id":"CWE-89","title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","url":"https://cwe.mitre.org/data/definitions/89.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"66","title":"CAPEC-66: SQL Injection","url":"https://capec.mitre.org/data/definitions/66.html"},"sansTop25":{"rank":3,"title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"}},"count":14,"dataFlowsCount":17,"remediationCount":0,"countWithFP":14,"vulnerabilities":[],"Findings":[{"finding":{"id":"2f8bf2be-688e-416b-8f0a-c9484743ff56","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"1dc07f72-59d8-4e7b-9b41-e16512404a70","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java","snippet":"ResultSet results = statement.executeQuery(query);","line":71,"startLine":67,"endLine":76,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"f7567a46-7e29-431d-b0d1-88556ef0d20e","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java","line":58,"stepsCount":5,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"6e248086-99bb-4dce-8ce5-fddaa4235054","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"de254080-60a7-49a8-a0e3-ebb529d4b81e","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'prepareStatement' method of 'java.lang.Object' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.Object.prepareStatement","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java","snippet":"connection.prepareStatement(","line":60,"startLine":56,"endLine":65,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"2400c329-c2af-4d11-a266-7410f927b8d7","file":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java","line":50,"stepsCount":3,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"26b13c61-29fe-400d-983a-52bf6cc78f5a","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"5f45400c-0c0d-4c48-89f7-8154667e6964","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java","snippet":"ResultSet results = statement.executeQuery(query);","line":76,"startLine":72,"endLine":81,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"e5debcb1-d45b-4260-8995-4db956dede59","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java","line":60,"stepsCount":8,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"bb29709a-20bd-4b0f-a2f4-2de80473a867","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"c103dd77-8e3e-45cd-9b83-c1da08d267ea","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java","snippet":"ResultSet results = statement.executeQuery(query);","line":65,"startLine":61,"endLine":70,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"7710a248-8537-429f-8e0f-9a675980230c","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java","line":58,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"bbfe86d8-47bc-4408-8261-fb1a2796140d","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"77db0e69-e52a-4f6d-86b1-fa814e285e02","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java","snippet":"ResultSet resultSet = statement.executeQuery(checkUserQuery);","line":69,"startLine":65,"endLine":74,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"febdc879-5039-4d5e-a8d5-96548ee8f392","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java","line":56,"stepsCount":3,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"7a11742e-0872-4d3d-a4cb-865f64e18e55","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"28920e98-e8ad-4314-8073-2790fa77463b","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeUpdate' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeUpdate","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java","snippet":"statement.executeUpdate(query);","line":62,"startLine":58,"endLine":67,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"0abe9bef-e837-49a0-85cd-d53c11f1730e","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java","line":54,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"9321b863-4151-41b6-8106-ae5c82b9d6c7","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"15b5e046-f516-4844-80f2-236cea49668a","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'prepareStatement' method of 'java.sql.Connection' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Connection.prepareStatement","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java","snippet":"connection.prepareStatement(","line":72,"startLine":68,"endLine":77,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"dac93f06-833c-4630-a635-0668a31d8426","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java","line":67,"stepsCount":3,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"00b92f75-473a-4076-a25d-92b8640c302e","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"f1bb34a4-8901-45af-b52c-44ea6900860c","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java","snippet":"ResultSet results = statement.executeQuery(query);","line":78,"startLine":74,"endLine":83,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"14f26a68-f230-497a-9cd3-f30baf3aa3a6","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java","line":59,"stepsCount":8,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"c01d4597-5961-4a5e-9fe1-bc004d3be96f","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"d3d82c82-ee3a-4473-b9e8-4cea093b8ea7","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.PreparedStatement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.PreparedStatement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java","snippet":"ResultSet results = query.executeQuery();","line":86,"startLine":82,"endLine":91,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"039666c6-1fb0-4348-bb5a-0d2c2d78214c","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java","line":55,"stepsCount":7,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"b399fe58-f31c-4356-bf05-35ae98f0d31f","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"2ded0306-f030-45a0-af07-5d45e11027c0","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeUpdate' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeUpdate","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java","snippet":"statement.executeUpdate(query);","line":63,"startLine":59,"endLine":68,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"f045219b-e899-42d3-9b3b-dbca0dd95250","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java","line":53,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"622ae018-6ee0-4fbb-a276-a5b8358c201a","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"f5f157a3-dc1d-4ead-8bc4-0ec72533a58c","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java","snippet":"ResultSet results = statement.executeQuery(query);","line":74,"startLine":70,"endLine":79,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"3fcd37a0-71f4-4699-b4df-1e75f6cea4f6","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java","line":51,"stepsCount":11,"isNew":true,"rating":7.923076923076923},{"id":"5cbe948b-aa0a-4eee-ad31-bf6678695d2a","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java","line":47,"stepsCount":5,"isNew":true,"rating":8.76923076923077},{"id":"f9587c89-afed-43f1-b1a7-a7239940f43c","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java","line":56,"stepsCount":5,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"2efa8430-0e27-447a-a2ab-29f7ad8fc556","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"17848080-c11d-429d-86dc-f78a1b1dc1d3","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java","snippet":"ResultSet results = statement.executeQuery(query);","line":67,"startLine":63,"endLine":72,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"d3794292-3d6a-42ac-b941-db01c0f51ffb","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java","line":54,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"6fe2951c-2779-4a1d-b828-caf9a1fdeb83","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"e0a48213-2542-4412-bbf8-602e57bac568","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeQuery' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeQuery","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java","snippet":"statement.executeQuery(query);","line":80,"startLine":76,"endLine":85,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"4e67a8b5-e53f-40d3-933e-e87fa7974f9d","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java","line":70,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":8.415,"confidenceRating":10,"ageRating":0,"rating":6.731999999999999,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"13700d8d-ec27-43f1-a9ec-9a52f13693c1","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"76aee5d4-443d-42b3-9c7e-1486d18984e5","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":2,"name":"SQL Injection","engineId":101,"language":"Java*","sarif":"java-sqli","sarifLevel":""},"description":"'executeUpdate' method of 'java.sql.Statement' object could be abused to perform a SQL Injection attack.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.Statement.executeUpdate","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java","snippet":"statement.executeUpdate(logQuery);","line":158,"startLine":154,"endLine":163,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"744d7167-7592-4463-a93c-51539ddc136d","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java","line":60,"stepsCount":11,"isNew":true,"rating":7.923076923076923},{"id":"33346f4d-4777-4dc8-8285-5865cce29215","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java","line":59,"stepsCount":11,"isNew":true,"rating":7.923076923076923}],"severityRating":8.415,"confidenceRating":9,"ageRating":0,"rating":6.0588,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":6,"sarif":"java-path-traversal","order":2,"name":"Path/Directory Traversal","risk":"High","sarifLevel":"","severityRating":7.913,"description":"Path/Directory Traversal or file disclosure vulnerability occurs when an external input is used to construct a pathname that is intended to identify a file or a directory located underneath a restricted parent directory. The application does not properly neutralize (sanitize) special elements within the pathname, which can cause the pathname to resolve to a location that is outside of the restricted directory. Successful file disclosure attack can result in sensitive files disclosure, and can often lead to full system compromise","recommendation":["Using a whitelist of directories from which files are allowed for download and validating requests based on that list","Indexing files which are allowed for download and passing only their index numbers as the URL parameter values","Validating requested file types"],"references":["https://owasp.org/www-community/attacks/Path_Traversal"],"cwe":{"id":"CWE-22","title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","url":"https://cwe.mitre.org/data/definitions/22.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A5","title":"A5: Broken Access Control","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control"},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"126","title":"CAPEC-126: Path Traversal","url":"https://capec.mitre.org/data/definitions/126.html"},"sansTop25":{"rank":8,"title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"}},"count":6,"dataFlowsCount":10,"remediationCount":0,"countWithFP":6,"vulnerabilities":[],"Findings":[{"finding":{"id":"78afb595-6eea-43a3-81cd-7f5d46b49a13","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"eb0edc53-d798-41d6-81a2-1142944e8d44","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":6,"name":"Path/Directory Traversal","engineId":101,"language":"Java*","sarif":"java-path-traversal","sarifLevel":""},"description":"'exists' method of 'java.io.File' object could be abused to disclose or manipulate sensitive files.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.io.File.exists","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java","snippet":"if (catPicture.exists()) {","line":99,"startLine":95,"endLine":104,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"efd903db-9948-48ea-b15f-4798b44d710b","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java","line":90,"stepsCount":5,"isNew":true,"rating":8.76923076923077}],"severityRating":7.913,"confidenceRating":10,"ageRating":0,"rating":6.330400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"ab110ef5-9b4e-4487-898e-1ec7ce56c053","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"f335f471-c789-4e75-aa59-54908a3b429f","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":6,"name":"Path/Directory Traversal","engineId":101,"language":"Java*","sarif":"java-path-traversal","sarifLevel":""},"description":"'copy' method of 'org.springframework.util.FileCopyUtils' object could be abused to disclose or manipulate sensitive files.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.springframework.util.FileCopyUtils.copy","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java","snippet":"FileCopyUtils.copy(file.getBytes(), uploadedFile);","line":44,"startLine":40,"endLine":49,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"ff2c6a8e-6814-4d49-8355-9d078af65b54","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java","line":34,"stepsCount":6,"isNew":true,"rating":8.76923076923077},{"id":"10b458f0-b7ff-400c-8309-fd0d6716c7b9","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java","line":36,"stepsCount":6,"isNew":true,"rating":8.76923076923077},{"id":"28539a0f-a76a-4cab-8568-b0da5f645e2b","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java","line":36,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":7.913,"confidenceRating":10,"ageRating":0,"rating":6.330400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"5f3437fc-353d-4cef-b3f1-1c2b162a0866","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"08b74fae-d1cf-49a0-8e16-b36cf8b83608","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":6,"name":"Path/Directory Traversal","engineId":101,"language":"Java*","sarif":"java-path-traversal","sarifLevel":""},"description":"'createNewFile' method of 'java.io.File' object could be abused to disclose or manipulate sensitive files.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.io.File.createNewFile","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java","snippet":"uploadedFile.createNewFile();","line":43,"startLine":39,"endLine":48,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"0c9134cd-f13d-49dd-be27-5cc11699cf0e","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java","line":34,"stepsCount":8,"isNew":true,"rating":8.76923076923077},{"id":"2b9d4edc-96e0-4f23-8e61-a9f0d9826c31","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java","line":36,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":7.913,"confidenceRating":10,"ageRating":0,"rating":6.330400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"23d2e6db-ed52-4c1e-b203-400bd8099a1a","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"b710f29b-ff24-4b17-9a42-2d38cf277b5f","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":6,"name":"Path/Directory Traversal","engineId":101,"language":"Java*","sarif":"java-path-traversal","sarifLevel":""},"description":"'transferTo' method of 'org.springframework.web.multipart.MultipartFile' object could be abused to disclose or manipulate sensitive files.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.springframework.web.multipart.MultipartFile.transferTo","kind":"","file":"src/main/java/org/owasp/webgoat/webwolf/FileServer.java","snippet":"myFile.transferTo(new File(destinationDir, myFile.getOriginalFilename()));","line":78,"startLine":74,"endLine":83,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"bd498e78-e769-4215-ab3f-5e67607448e5","file":"src/main/java/org/owasp/webgoat/webwolf/FileServer.java","line":74,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":7.913,"confidenceRating":10,"ageRating":0,"rating":6.330400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"489bbd2f-f8cb-4724-b6d4-feb2181ab819","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"06e96853-007d-43de-becc-c4deb1241387","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":6,"name":"Path/Directory Traversal","engineId":101,"language":"Java*","sarif":"java-path-traversal","sarifLevel":""},"description":"'copy' method of 'org.springframework.util.FileCopyUtils' object could be abused to disclose or manipulate sensitive files.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.springframework.util.FileCopyUtils.copy","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java","snippet":"FileCopyUtils.copy(file.getBytes(), uploadedZipFile.toFile());","line":67,"startLine":63,"endLine":72,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"a1887d46-f06d-46ef-887a-e36e56afdbee","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java","line":51,"stepsCount":10,"isNew":true,"rating":7.923076923076923},{"id":"e3248c03-1fdf-4d8b-919d-3f4928fc458a","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java","line":51,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":7.913,"confidenceRating":10,"ageRating":0,"rating":6.330400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"51c37d05-96df-4d6d-a096-6b9e302c8f3e","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"0e22abe5-58ed-4893-92d1-6e14f1ec5b2a","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":6,"name":"Path/Directory Traversal","engineId":101,"language":"Java*","sarif":"java-path-traversal","sarifLevel":""},"description":"'copyToByteArray' method of 'org.springframework.util.FileCopyUtils' object could be abused to disclose or manipulate sensitive files.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.springframework.util.FileCopyUtils.copyToByteArray","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java","snippet":".body(FileCopyUtils.copyToByteArray(catPicture));","line":97,"startLine":93,"endLine":102,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"3fcf8eb5-24bf-4e28-b6b4-dde30f425eb9","file":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java","line":90,"stepsCount":5,"isNew":true,"rating":8.76923076923077}],"severityRating":7.913,"confidenceRating":10,"ageRating":0,"rating":6.330400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":46,"sarif":"java-code-inj","order":3,"name":"Code Injection","risk":"High","sarifLevel":"","severityRating":8.2,"description":"The application constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment. When the application allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the application. Such an alteration could lead to arbitrary code execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Rejecting any input that does not strictly conform to specifications, or transforming it into something that does","When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules","To reduce the likelihood of code injection, stringent whitelists that limit which constructs are allowed should be used. If the code that invokes a function is dynamically constructed, then verifying that the input is alphanumeric might be insufficient"],"references":["https://owasp.org/www-community/attacks/Code_Injection"],"cwe":{"id":"CWE-94","title":"CWE-94: Improper Control of Generation of Code ('Code Injection')","url":"https://cwe.mitre.org/data/definitions/94.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"242","title":"CAPEC-242: Code Injection","url":"https://capec.mitre.org/data/definitions/242.html"},"sansTop25":{"rank":23,"title":"CWE-94: Improper Control of Generation of Code ('Code Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":51,"sarif":"java-jndi-inj","order":4,"name":"JNDI Injection","risk":"High","sarifLevel":"","severityRating":8.639,"description":"JNDI Injection vulnerability occurs when an application uses external input name in the JNDI API to discover and look up data and resource stored in different naming or directory services. An attacker can then manipulate the JNDI context and trick the application into using a malicious/unintended resource or perform remote code execution","recommendation":["Avoid using input name directly in JNDI lookups","Check if input name is either a non-URL or a trusted URL"],"references":["https://cwe.mitre.org/data/definitions/74.html"],"cwe":{"id":"CWE-74","title":"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","url":"https://cwe.mitre.org/data/definitions/74.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":52,"sarif":"java-xslt-inj","order":5,"name":"XSLT Injection","risk":"High","sarifLevel":"","severityRating":8.639,"description":"XSLT Injection vulnerability occurs when an application uses external input to construct an XSLT stylesheet. An attacker can then control the XSLT transformation process and trick the application into using a malicious/unintended resource or perform remote code execution","recommendation":["Avoid using user input directly in XSLT stylesheets","Do not process untrusted XSLT stylesheets","Enable secure processing mode"],"references":["https://cwe.mitre.org/data/definitions/74.html"],"cwe":{"id":"CWE-74","title":"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","url":"https://cwe.mitre.org/data/definitions/74.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":47,"sarif":"java-xpath-inj","order":6,"name":"XPath Injection","risk":"High","sarifLevel":"","severityRating":8.293,"description":"XPath Injection vulnerability occurs when an application uses external input to construct dynamically an XPath expression used to retrieve data from an XML database, but it either does not neutralize (sanitize) or it incorrectly neutralizes that input. This allows an attacker to control the structure of the query. By sending intentionally malformed information to the web site, an attacker can find out how the XML data is structured, or access data that he may not normally have access to","recommendation":["Escape single and double quotes characters","Use precompiled XPath"],"references":["https://www.owasp.org/index.php/XPATH_Injection"],"cwe":{"id":"CWE-643","title":"CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection')","url":"https://cwe.mitre.org/data/definitions/643.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"83","title":"CAPEC-83: XPath Injection","url":"https://capec.mitre.org/data/definitions/83.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":53,"sarif":"java-el-inj","order":7,"name":"Expression Language Injection","risk":"High","sarifLevel":"","severityRating":7.968,"description":"The application constructs an Expression Language using user controllable data with insufficient validation/encode that could modify the EL before it is dynamically evaluated by an EL interpreter. This vulnerability could lead to arbitrary code execution, unauthorized access to data, account hijacking, and other unexpected behaviors","recommendation":["Avoid incorporating user-supplied data into an Expression Language interpreter","Validate and/or encode the user input to ensure it wonâ€™t be evaluated as an EL","A whitelist of specific accepted values can be used","Avoid using applications with known security flaws, always use the most recent version of all underlying software, as well as a properly configured WAF"],"references":["https://www.owasp.org/index.php/Expression_Language_Injection"],"cwe":{"id":"CWE-917","title":"CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')","url":"https://cwe.mitre.org/data/definitions/917.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":8,"sarif":"java-xss","order":8,"name":"Cross-Site Scripting","risk":"High","sarifLevel":"","severityRating":7.048,"description":"Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser","recommendation":["Escape HTML before inserting untrusted data into element content","Escape attribute before inserting untrusted data into HTML common attributes","Escape JavaScript before inserting untrusted data into JavaScript data values","Escape CSS and strictly validate before inserting untrusted data into HTML style property values","Escape URL before inserting untrusted data into HTML URL parameter values","Use HTML policy engine to validate or clean user-driven HTML in an outbound way","Use HTTPOnly cookie flag"],"references":["https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"],"cwe":{"id":"CWE-79","title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","url":"https://cwe.mitre.org/data/definitions/79.html"},"pcidss":{"section":"6.5.7","title":"PCI DSS 6.5.7 - Cross-Site Scripting (XSS)"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A7","title":"A7: Cross-Site Scripting (XSS)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"63","title":"CAPEC-63: Cross-Site Scripting (XSS)","url":"https://capec.mitre.org/data/definitions/63.html"},"sansTop25":{"rank":2,"title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":9,"sarif":"java-insecure-ds","order":9,"name":"Deserialization of Untrusted Data","risk":"High","sarifLevel":"","severityRating":6.703,"description":"The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid. When developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like code execution","recommendation":["If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified","When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe","Explicitly define a final object() to prevent deserialization","Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Whitelist acceptable classes. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation"],"references":["https://www.owasp.org/index.php/Deserialization_of_untrusted_data"],"cwe":{"id":"CWE-502","title":"CWE-502: Deserialization of Untrusted Data","url":"https://cwe.mitre.org/data/definitions/502.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A8","title":"A8: Insecure Deserialization","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization"},"owasp2021":{"index":"A8","title":"A8 - Software and Data Integrity Failures","url":"https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"},"capec":{"id":"586","title":"CAPEC-586: Object Injection","url":"https://capec.mitre.org/data/definitions/586.html"},"sansTop25":{"rank":15,"title":"CWE-502: Deserialization of Untrusted Data"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"796ce49c-ebc8-4cf4-8c9a-f606a4b3b540","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"998cf920-8ef6-498d-ad7e-7de22d94bd60","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":9,"name":"Deserialization of Untrusted Data","engineId":101,"language":"Java*","sarif":"java-insecure-ds","sarifLevel":""},"description":"'fromXML' method of 'com.thoughtworks.xstream.XStream' object with unvalidated input could result in deserialization vulnerabilities that could lead to arbitrary code execution or denial of service.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":true,"suppressedBy":"am@armorcode.io","suppressionTime":"2024-01-23T14:05:05.626Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"com.thoughtworks.xstream.XStream.fromXML","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java","snippet":"contact = (Contact) xstream.fromXML(payload);","line":57,"startLine":53,"endLine":62,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"c6c99417-c97e-48eb-99cb-481bf8b649a3","file":"src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java","line":40,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":6.703,"confidenceRating":10,"ageRating":0,"rating":0,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":10,"sarif":"java-ssrf","order":10,"name":"Server Side Request Forgery","risk":"High","sarifLevel":"","severityRating":6.7,"description":"Server Side Request Forgery occures when the web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination. By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests","recommendation":["Use a whitelist of allowed domains and protocols from where the web server can fetch remote resources"],"references":["https://www.owasp.org/index.php/Server_Side_Request_Forgery"],"cwe":{"id":"CWE-918","title":"CWE-918: Server-Side Request Forgery (SSRF)","url":"https://cwe.mitre.org/data/definitions/918.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A10","title":"A10 - Server-Side Request Forgery (SSRF)","url":"https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":19,"title":"CWE-918: Server-Side Request Forgery (SSRF)"}},"count":2,"dataFlowsCount":2,"remediationCount":0,"countWithFP":2,"vulnerabilities":[],"Findings":[{"finding":{"id":"b6eac694-cb75-4e49-94eb-9f72c4458b6a","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"4e81bc95-3320-497d-8e8e-450c069a03e1","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":10,"name":"Server Side Request Forgery","engineId":101,"language":"Java*","sarif":"java-ssrf","sarifLevel":""},"description":"'openStream' method of 'java.net.URL' object could result in Server Side Request Forgery attacks.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.net.URL.openStream","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java","snippet":"try (InputStream in = new URL(url).openStream()) {","line":51,"startLine":47,"endLine":56,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"d12cf8a7-b8d9-4da7-a4c5-2fe4500eb41a","file":"src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java","line":44,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":6.7,"confidenceRating":10,"ageRating":0,"rating":5.36,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"cfcb8330-74a3-4f39-8ead-f50d43e7d38e","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"92b48216-3cc2-4468-ac4b-36040bbf1342","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":10,"name":"Server Side Request Forgery","engineId":101,"language":"Java*","sarif":"java-ssrf","sarifLevel":""},"description":"'exchange' method of 'org.springframework.web.client.RestTemplate' object could result in Server Side Request Forgery attacks.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.springframework.web.client.RestTemplate.exchange","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java","snippet":".exchange(","line":105,"startLine":101,"endLine":110,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"639cba48-8cf0-4dba-87cb-57d97be526e1","file":"src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java","line":70,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":6.7,"confidenceRating":10,"ageRating":0,"rating":5.36,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":59,"sarif":"java-unsafe-format","order":11,"name":"Unsafe Format String","risk":"High","sarifLevel":"","severityRating":7.223,"description":"This vulnerability occurs when an attacker can externally control a format string that is being used as an argument in a function. It can access memory spaces and makes the attacker able to modify the memory, and perform Denial of Service","recommendation":["Validate that the format string canâ€™t be user-controllable and the right number of arguments are being sent to the function"],"references":["https://cwe.mitre.org/data/definitions/134.html"],"cwe":{"id":"CWE-134","title":"CWE-134: Use of Externally-Controlled Format String","url":"https://cwe.mitre.org/data/definitions/134.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"135","title":"CAPEC-135: Format String Injection","url":"https://capec.mitre.org/data/definitions/135.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":54,"sarif":"java-store-sensitiveinformation","order":12,"name":"Store Sensitive Information","risk":"Medium","sarifLevel":"","severityRating":4.312,"description":"Store Sensitive Information vulnerability occurs when an application stores sensitive information such as password in unencrypted form. This allows an attacker to exploit such information","recommendation":["Encrypt sensitive information before storing","Perform hashing before storing"],"references":["https://cwe.mitre.org/data/definitions/312.html"],"cwe":{"id":"CWE-312","title":"CWE-312: Cleartext Storage of Sensitive Information","url":"https://cwe.mitre.org/data/definitions/312.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-28","priority":"P1","title":"SC-28: Protection of Information at Rest","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-28"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"37","title":"CAPEC-37: Retrieve Embedded Sensitive Data","url":"https://capec.mitre.org/data/definitions/37.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":49,"sarif":"java-loop-dos","order":13,"name":"Loop Denial of Service","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Loop Denial of Service is a Denial of Service attack, that exploits code flows where the application uses user-controlled input in conditions (such as in loops). An attacker can then cause a program to hang for a very long time and affect the availability","recommendation":["Do not use untrusted user input in loop conditions"],"references":["https://cwe.mitre.org/data/definitions/400.html"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":50,"sarif":"java-readLine-dos","order":14,"name":"Readline Denial of Service","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Readline Denial of Service is a Denial of Service attack, that exploits code flows where the application passes user-controlled input to readLine executions. An attacker can then cause a program to hang for a very long time and affect the availability if such an input contains no newlines and is huge","recommendation":["Do not pass untrusted user input to functions that perform readline execution"],"references":["https://cwe.mitre.org/data/definitions/400.html"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":11,"sarif":"java-hardcoded-creds","order":15,"name":"Hardcoded Password/Credentials","risk":"Medium","sarifLevel":"","severityRating":6.44,"description":"The application contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data","recommendation":["Store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key. If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible"],"references":["https://www.owasp.org/index.php/Use_of_hard-coded_password"],"cwe":{"id":"CWE-798","title":"CWE-798: Use of Hard-coded Credentials","url":"https://cwe.mitre.org/data/definitions/798.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-28","priority":"P1","title":"SC-28: Protection of Information at Rest","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-28"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A7","title":"A7 - Identification and Authentication Failures","url":"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":18,"title":"CWE-798: Use of Hard-coded Credentials"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":12,"sarif":"java-xxe","order":16,"name":"XML External Entity (XXE) Injection","risk":"Medium","sarifLevel":"","severityRating":6.408,"description":"The application processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the application to embed incorrect documents into its output. XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing","recommendation":["Many XML parsers and validators can be configured to disable external entity expansion"],"references":["https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing"],"cwe":{"id":"CWE-611","title":"CWE-611: Improper Restriction of XML External Entity Reference","url":"https://cwe.mitre.org/data/definitions/611.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A4","title":"A4: XML External Entities (XXE)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A4-XML_External_Entities_(XXE)"},"owasp2021":{"index":"A5","title":"A5 - Security Misconfiguration","url":"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"},"capec":{"id":"201","title":"CAPEC-201: Serialized Data External Linking","url":"https://capec.mitre.org/data/definitions/201.html"},"sansTop25":{"rank":17,"title":"CWE-611: Improper Restriction of XML External Entity Reference"}},"count":1,"dataFlowsCount":3,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"9365c59e-7ae6-4f3d-ae86-b610f59bd6bb","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"ddc00d1f-999f-4975-abde-f9ee6b72bb7c","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":12,"name":"XML External Entity (XXE) Injection","engineId":101,"language":"Java*","sarif":"java-xxe","sarifLevel":""},"description":"'createXMLStreamReader' method of 'javax.xml.stream.XMLInputFactory' object could be vulnerable to External Entity Injection (XXE). Parsing external XML input with XXE-vulnerable XML factory.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"javax.xml.stream.XMLInputFactory.createXMLStreamReader","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java","snippet":"var xsr = xif.createXMLStreamReader(new StringReader(xml));","line":105,"startLine":101,"endLine":110,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"1731ffca-30b4-4960-9e76-6b40d61a1671","file":"src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java","line":73,"stepsCount":6,"isNew":true,"rating":8.76923076923077},{"id":"e07db282-afff-4f2c-a14b-7c49a8f4a11c","file":"src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java","line":60,"stepsCount":6,"isNew":true,"rating":8.76923076923077},{"id":"e0a4e07b-6340-4210-b469-34ced9be4ab6","file":"src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java","line":87,"stepsCount":6,"isNew":true,"rating":8.76923076923077}],"severityRating":6.408,"confidenceRating":10,"ageRating":0,"rating":5.1264,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":13,"sarif":"java-weak-rnd","order":17,"name":"Weak Pseudo-Random","risk":"Medium","sarifLevel":"","severityRating":5.536,"description":"When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography","recommendation":["Use functions or hardware which use a hardware-based random number generation for all crypto"],"references":["https://www.owasp.org/index.php/Insecure_Randomness"],"cwe":{"id":"CWE-338","title":"CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)","url":"https://cwe.mitre.org/data/definitions/338.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":14,"sarif":"java-ldap-inj","order":18,"name":"LDAP Injection","risk":"Medium","sarifLevel":"","severityRating":5.458,"description":"LDAP injection vulnerability occurs when an application constructs all or a part of an LDAP query using a user input, but it either does not neutralize (sanitize) or it incorrectly neutralizes special elements that could modify the intended LDAP query. Successful LDAP injection attack can result in the execution of arbitrary commands such as granting permissions to unauthorized queries and content modification inside the LDAP tree","recommendation":["Type validation (example: int userinput = Convert.ToInt32(Request.Querystring(\"userinput\"))","Pattern validation (example: string email = Regex.IsMatch(Request.Querystring(\"email\"),\"^.+@[^\\.].*\\.[a-z]{2,}$\"))","Domain values validation (example: string country = Request.Querystring(???country???) in {???USA???, ???UK???})"],"references":["https://www.owasp.org/index.php/LDAP_injection"],"cwe":{"id":"CWE-90","title":"CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')","url":"https://cwe.mitre.org/data/definitions/90.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"136","title":"CAPEC-136: LDAP Injection","url":"https://capec.mitre.org/data/definitions/136.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":20,"sarif":"java-err-msg","order":19,"name":"Error Messages Information Exposure","risk":"Medium","sarifLevel":"","severityRating":4.205,"description":"The application generates an error message that includes sensitive information about its environment, users, or associated data. The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query","recommendation":["Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success","If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not"],"references":["https://www.owasp.org/index.php/Improper_Error_Handling"],"cwe":{"id":"CWE-209","title":"CWE-209: Information Exposure Through an Error Message","url":"https://cwe.mitre.org/data/definitions/209.html"},"pcidss":{"section":"6.5.5","title":"PCI DSS 6.5.5 - Improper Error Handling"},"nist":{"control":"SI-11","priority":"P2","title":"SI-11: Error Handling","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-11"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"215","title":"CAPEC-215: Fuzzing and observing application log data/errors for application mapping","url":"https://capec.mitre.org/data/definitions/215.html"},"sansTop25":{"rank":0,"title":""}},"count":4,"dataFlowsCount":4,"remediationCount":0,"countWithFP":4,"vulnerabilities":[],"Findings":[{"finding":{"id":"201c2ba3-fcb3-4c5e-8e31-066edd91368a","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"e6b85d36-9ab3-45fe-a7e6-0970327f9b51","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'printStackTrace' method of 'java.lang.Exception' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.Exception.printStackTrace","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java","snippet":"e.printStackTrace();","line":62,"startLine":58,"endLine":66,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"f64eb24e-0f9f-4895-ba7c-5b3e7cd73a43","file":"src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java","line":62,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"d470ec2c-f1d0-4b70-8d42-2347f1c3de79","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"a4e5a3f5-f1c6-49b6-ab3c-c3540b0ff0c6","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'printStackTrace' method of 'java.lang.Exception' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.Exception.printStackTrace","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java","snippet":"exception.printStackTrace();","line":130,"startLine":126,"endLine":135,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"62bee4ea-e417-44fb-bddc-c2b415568dae","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java","line":130,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"84032a4b-a7d7-4005-9e37-a0d63065c7b8","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"ec2439c9-cfda-452b-b8af-48f3f997070a","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'printStackTrace' method of 'java.lang.Exception' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.Exception.printStackTrace","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java","snippet":"e.printStackTrace();","line":75,"startLine":71,"endLine":80,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"17ceda69-051a-40c7-9129-7186fb43ced8","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java","line":75,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"5234f809-2fc2-4632-8a8b-c2ea2225d3a1","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"1a346964-af95-4632-9344-ea1f53b397ca","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'printStackTrace' method of 'java.sql.SQLException' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.sql.SQLException.printStackTrace","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java","snippet":"sqle.printStackTrace();","line":71,"startLine":67,"endLine":76,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"8f4082f7-0e20-46b5-b396-8b8dcaadf560","file":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java","line":71,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":22,"sarif":"java-hidden-html","order":20,"name":"Hidden HTML Input","risk":"Medium","sarifLevel":"","severityRating":3.587,"description":"Hidden form inputs are often written into an HTML page by the web server when it serves that page to the client, and are not visible on the rendered web page. Because HTTP is essentially stateless, like cookies, hidden form inputs are one way that web applications can use to remember session data from one page request to the next. Because of poor coding practices, hidden fields often contain confidential information (such as product prices on an e-commerce site) that should be stored only in a back-end database","recommendation":["Sensitive information that may affect the application logic should be stored only in a back-end database"],"references":["https://www.owasp.org/index.php/Web_Parameter_Tampering"],"cwe":{"id":"CWE-472","title":"CWE-472: External Control of Assumed-Immutable Web Parameter","url":"https://cwe.mitre.org/data/definitions/472.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":27,"sarif":"java-insecure-transport","order":21,"name":"Insufficient Transport Layer Protection","risk":"Medium","sarifLevel":"","severityRating":5.433,"description":"Insufficient Transport Layer Protection occurs when sensitive data is transmitted over the plain-text networking protocol","recommendation":["Send sensitive information over the encrypted network protocols"],"references":["https://cwe.mitre.org/data/definitions/319.html"],"cwe":{"id":"CWE-319","title":"CWE-319: Cleartext Transmission of Sensitive Information","url":"https://cwe.mitre.org/data/definitions/319.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"164.312 (e)(2)(ii)","title":"164.312 (e)(2)(ii): Transmission Security: Encryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A6","title":"A6: Security Misconfiguration","url":"https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"337","title":"CAPEC-337: Insufficient Transport Layer Protection","url":"https://capec.mitre.org/data/definitions/337.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":31,"sarif":"java-regex-dos","order":22,"name":"Regex Denial of Service (ReDoS)","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time, affecting the availability of the application","recommendation":["Do not pass untrusted user input to functions that perform regular expression searches"],"references":["https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection (P1)","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"492","title":"CAPEC-492: Regular Expression Exponential Blowup","url":"https://capec.mitre.org/data/definitions/492.html"},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":32,"sarif":"java-sleep-dos","order":23,"name":"Sleep Denial of Service","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Sleep Denial of Service is a Denial of Service attack, that exploits code flows where the application passes user-controlled input to Sleep functions (such as in loops). An attacker can then cause a program to hang for a very long time and affect the availability","recommendation":["Do not pass untrusted user input to functions that perform sleep or thread pauses"],"references":["https://cwe.mitre.org/data/definitions/400.html"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":33,"sarif":"java-trust-boundary","order":24,"name":"Trust Boundary Violation","risk":"Medium","sarifLevel":"","severityRating":4.871,"description":"The application mixes trusted and untrusted data in the same data structure or structured message. A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust boundary - to move from untrusted to trusted. A trust boundary violation occurs when a program blurs the line between what is trusted and what is untrusted. By combining trusted and untrusted data in the same data structure, it becomes easier for programmers to mistakenly trust unvalidated data","recommendation":["Proper input validation and output encoding should be used on data before moving it into trusted boundaries"],"references":["https://cwe.mitre.org/data/definitions/501.html"],"cwe":{"id":"CWE-501","title":"CWE-501: Trust Boundary Violation","url":"https://cwe.mitre.org/data/definitions/501.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":34,"sarif":"java-unsafe-reflection","order":25,"name":"Unsafe Reflection","risk":"Medium","sarifLevel":"","severityRating":4.871,"description":"The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code","recommendation":["Refactor your code to avoid using reflection","Do not use user-controlled inputs to select and load classes or code","Apply strict input validation by using allowlists or indirect selection to ensure that the user is only selecting allowable classes or code"],"references":["https://cwe.mitre.org/data/definitions/470.html"],"cwe":{"id":"CWE-470","title":"CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')","url":"https://cwe.mitre.org/data/definitions/470.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":44,"sarif":"java-sig-verify","order":26,"name":"Improper Verification of JWT Signature","risk":"Medium","sarifLevel":"","severityRating":4.356,"description":"The product does not verify, or incorrectly verifies, the cryptographic signature for data","recommendation":["Ensure that the signature of the JWT is properly verified for all supported algorithms"],"references":["https://cwe.mitre.org/data/definitions/347.html","https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_for_Java_Cheat_Sheet.html"],"cwe":{"id":"CWE-347","title":"CWE-347: Improper Verification of Cryptographic Signature","url":"https://cwe.mitre.org/data/definitions/347.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A2","title":"A2: Broken Authentication","url":"https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":56,"sarif":"java-weak-crypto","order":27,"name":"Insecure Cryptographic Algorithm","risk":"Medium","sarifLevel":"","severityRating":4.653,"description":"The application uses a broken or risky cryptographic algorithm to protect sensitive information. Such insecure cryptography may result in the exposure of sensitive information. The use of broken or risky cryptographic algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has been protected. Well-known techniques may exist to break the algorithm","recommendation":["Use strong and up-to-date algorithm for a cryptographic process. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations","Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong"],"references":["https://cwe.mitre.org/data/definitions/327.html"],"cwe":{"id":"CWE-327","title":"CWE-327: Use of a Broken or Risky Cryptographic Algorithm","url":"https://cwe.mitre.org/data/definitions/327.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":58,"sarif":"java-weak-rsa","order":28,"name":"Weak RSA Encryption","risk":"Medium","sarifLevel":"","severityRating":4.871,"description":"This vulnerability occurs when the Optimal Asymmetric Encryption Padding (OAEP), which formats the plaintext before encryption to make it less predictable, is not incorporated with the RSA algorithm, making the encryption weak and compromising the integrity and confidentiality","recommendation":["Add the OAEP scheme with the RSA encryption algorithm"],"references":["https://cwe.mitre.org/data/definitions/780.html"],"cwe":{"id":"CWE-780","title":"CWE-780: Use of RSA Algorithm without OAEP","url":"https://cwe.mitre.org/data/definitions/780.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":61,"sarif":"java-predictable-seed","order":29,"name":"Predictable Seed","risk":"Medium","sarifLevel":"","severityRating":6.309,"description":"A Pseudo-Random Number Generator (PRNG) cannot create entropy, the output is determined by the seed provided as input, and if used incorrectly, it can bypass the protection mechanism. The correct management of seeds is critical to the secure operation of the PRNG, since it relies on cryptographically secure and unique seeds for entropy","recommendation":["Do not reuse PRNG seeds","Use a unique and cryptographically secure seed","The seed must be kept secret and not easily guessed"],"references":["https://cwe.mitre.org/data/definitions/335.html"],"cwe":{"id":"CWE-335","title":"CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)","url":"https://cwe.mitre.org/data/definitions/335.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":26,"sarif":"java-weak-enc","order":30,"name":"Weak Encryption Strength","risk":"Low","sarifLevel":"","severityRating":3.268,"description":"A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources. The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information. The use of a non-standard algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has been protected. Well-known techniques may exist to break the algorithm","recommendation":["When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations","Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong"],"references":["https://www.owasp.org/index.php/Testing_for_Weak_Encryption_(OTG-CRYPST-004)"],"cwe":{"id":"CWE-326","title":"CWE-326: Inadequate Encryption Strength","url":"https://cwe.mitre.org/data/definitions/326.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":28,"sarif":"java-redirect","order":31,"name":"Unvalidated/Open Redirect","risk":"Low","sarifLevel":"","severityRating":3.107,"description":"Open Redirect vulnerability occurs when untrusted user input is passed to HTTP location redirect functions or properties. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts may have a more trustworthy appearance","recommendation":["Do not pass untrusted user input to location redirection functions or properties"],"references":["https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"],"cwe":{"id":"CWE-601","title":"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')","url":"https://cwe.mitre.org/data/definitions/601.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"194","title":"CAPEC-194: Fake the Source of Data","url":"https://capec.mitre.org/data/definitions/194.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":29,"sarif":"java-log-forge","order":32,"name":"Log Forging","risk":"Low","sarifLevel":"","severityRating":3.097,"description":"Log Forging vulnerability occurs when an application either does not neutralize (sanitize) or it incorrectly neutralizes output that is written to logs. This can allow an attacker to forge log entries or inject malicious content into log records","recommendation":["Validating and encoding all input that could be outputed in the log file"],"references":["https://www.owasp.org/index.php/Log_Injection"],"cwe":{"id":"CWE-117","title":"CWE-117: Improper Output Neutralization for Logs","url":"https://cwe.mitre.org/data/definitions/117.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A9","title":"A9 - Security Logging and Monitoring Failures","url":"https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"},"capec":{"id":"93","title":"CAPEC-93: Log Injection-Tampering-Forging","url":"https://capec.mitre.org/data/definitions/93.html"},"sansTop25":{"rank":0,"title":""}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"88c5c342-568e-44fb-81df-23dd2e699fd6","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"05fb2689-6f70-4bd6-9f10-15442f8be269","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'warn' method could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"log.warn","kind":"","file":"src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java","snippet":"log.warn(\"modulus {} incorrect\", modulus);","line":81,"startLine":77,"endLine":86,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"19bb19fb-9000-40cc-af47-f267d5d87174","file":"src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java","line":69,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":48,"sarif":"java-log-sensitiveinformation","order":33,"name":"Log Sensitive Information","risk":"Low","sarifLevel":"","severityRating":2.984,"description":"Log Sensitive Information vulnerability occurs when an application writes sensitive information such as password into logs. This allows an attacker to exploit such information from these logs","recommendation":["Avoid writing sensitive information into logs","Enforce proper logging level control"],"references":["https://cwe.mitre.org/data/definitions/532.html"],"cwe":{"id":"CWE-532","title":"CWE-532: Insertion of Sensitive Information into Log File","url":"https://cwe.mitre.org/data/definitions/532.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"A10","title":"A10: Insufficient Logging & Monitoring","url":"https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring"},"owasp2021":{"index":"A9","title":"A9 - Security Logging and Monitoring Failures","url":"https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"},"capec":{"id":"215","title":"CAPEC-215: Fuzzing and observing application log data/errors for application mapping","url":"https://capec.mitre.org/data/definitions/215.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":30,"sarif":"java-weak-hash","order":34,"name":"Weak Hash Strength","risk":"Low","sarifLevel":"","severityRating":2.987,"description":"The application generates a hash but it uses a scheme that does not provide a sufficient level of computational effort that would make cracking attacks infeasible or expensive","recommendation":["Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (\"stretching\") or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5"],"references":["https://cwe.mitre.org/data/definitions/328.html"],"cwe":{"id":"CWE-328","title":"CWE-328: Use of Weak Hash","url":"https://cwe.mitre.org/data/definitions/328.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"57b80266-198a-4071-952b-b334b22366b6","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"b86c8487-fa2b-4961-bf05-8dd46d9ac300","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":30,"name":"Weak Hash Strength","engineId":101,"language":"Java*","sarif":"java-weak-hash","sarifLevel":""},"description":"'getInstance' method of 'java.security.MessageDigest' uses a non-recommended hash algorithm.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"Weak Hash Strength","kind":"vulnerability_type","file":"src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java","snippet":"MessageDigest md = MessageDigest.getInstance(\"MD5\");","line":55,"startLine":51,"endLine":60,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"6f4a5432-80e5-4984-8f6d-d3e96d432ea5","file":"src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java","line":55,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":2.987,"confidenceRating":10,"ageRating":0,"rating":2.3896,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":55,"sarif":"java-crypto-missing-step","order":35,"name":"Missing Cryptographic Step","risk":"Low","sarifLevel":"","severityRating":2.143,"description":"The application does not implement or incorrectly implements a necessary step in a cryptographic process. Such omission or error can lead to security vulnerabilities and weaken the overall effectiveness of the cryptographic process","recommendation":["Check if all the necessary steps for a cryptographic process have been implemented"],"references":["https://cwe.mitre.org/data/definitions/325.html"],"cwe":{"id":"CWE-325","title":"CWE-325: Missing Cryptographic Step","url":"https://cwe.mitre.org/data/definitions/325.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":38,"sarif":"java-http-only","order":36,"name":"Cookie Without 'HttpOnly' Flag","risk":"Low","sarifLevel":"","severityRating":0.262,"description":"The application uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag. The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS","recommendation":["Leverage the HttpOnly flag when setting a sensitive cookie in a response"],"references":["https://owasp.org/www-community/HttpOnly"],"cwe":{"id":"CWE-1004","title":"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag","url":"https://cwe.mitre.org/data/definitions/1004.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A5","title":"A5 - Security Misconfiguration","url":"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":39,"sarif":"java-header-inj","order":37,"name":"HTTP Header Injection","risk":"Low","sarifLevel":"","severityRating":2.969,"description":"HTTP header injection is a general class of web application security vulnerability which occurs when HTTP headers are dynamically generated based on user input. Header injection in HTTP responses can allow for HTTP response splitting, Session fixation via the Set-Cookie header, cross-site scripting (XSS), and malicious redirect attacks via the location header","recommendation":["Do not pass untrusted user input to functions that affect response header content"],"references":["https://cwe.mitre.org/data/definitions/113.html"],"cwe":{"id":"CWE-113","title":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')","url":"https://cwe.mitre.org/data/definitions/113.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":40,"sarif":"java-system-properties","order":38,"name":"System Properties Change","risk":"Low","sarifLevel":"","severityRating":2.381,"description":"Intentional or unintentional change of configuration from an actor that is not explicitly authorized to have access to that configuration","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/20.html"],"cwe":{"id":"CWE-15","title":"CWE-15: External Control of System or Configuration Setting","url":"https://cwe.mitre.org/data/definitions/15.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":3,"title":"CWE-20: Improper Input Validation"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":41,"sarif":"java-system-properties-disc","order":39,"name":"System Properties Disclosure","risk":"Low","sarifLevel":"","severityRating":2.318,"description":"An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information. An information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. An attacker can also cause errors to occur by submitting unusual requests to the web application. The response to these errors can reveal detailed system information, deny service, cause security mechanisms to fail, and crash the server. An attacker can use error messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. An application may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism","recommendation":["Production applications should never use methods that generate internal details such as stack traces and error messages unless that information is directly committed to a log that is not viewable by the end user"],"references":["https://cwe.mitre.org/data/definitions/200.html","https://cwe.mitre.org/data/definitions/497.html"],"cwe":{"id":"CWE-497","title":"CWE-497: Exposure of System Data to an Unauthorized Control Sphere","url":"https://cwe.mitre.org/data/definitions/497.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"1e274eb9-5802-42e0-8cae-7084507ea752","scanId":"9958e70b-ca8b-4cef-be99-0c80aeeba639","snapshotId":"ac770e53-a9b6-4d30-8cba-886e75e642c5","projectId":"f854e143-92b4-4078-8c2e-5424ad7cc422","appId":"ca03785c-c37f-4a96-acfc-2805bccd408f","type":{"id":41,"name":"System Properties Disclosure","engineId":101,"language":"Java*","sarif":"java-system-properties-disc","sarifLevel":""},"description":"'new' method of 'org.springframework.http.ResponseEntity' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:29:25.516Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.springframework.http.ResponseEntity.new","kind":"","file":"src/main/java/org/owasp/webgoat/container/service/LabelService.java","snippet":"return new ResponseEntity<>(allProperties, HttpStatus.OK);","line":65,"startLine":61,"endLine":67,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"7381c820-9bd1-4a84-a46c-9383721b0938","file":"src/main/java/org/owasp/webgoat/container/i18n/PluginMessages.java","line":75,"stepsCount":5,"isNew":true,"rating":8.76923076923077}],"severityRating":2.318,"confidenceRating":10,"ageRating":0,"rating":1.8544,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":42,"sarif":"java-arb-server-conn","order":40,"name":"Arbitrary Server Connection","risk":"Low","sarifLevel":"","severityRating":0,"description":"Improper use of some service or database access functions could result in arbitrary server / database connection. Arbitrary server / database connection could further result in arbitrary file download, sensitive file disclosure, and in some cases even command execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/941.html"],"cwe":{"id":"CWE-941","title":"CWE-941: Incorrectly Specified Destination in a Communication Channel","url":"https://cwe.mitre.org/data/definitions/941.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":45,"sarif":"java-mail-relay","order":41,"name":"Mail Relay","risk":"Low","sarifLevel":"","severityRating":2.381,"description":"Mail relay vulnerability occurs when unfiltered user input is used as an argument to mail message objects. Successful mail relay attack can result in sending arbitrary e-mail messages to recipients who will think that mail is originated from trusted source","recommendation":["Escape CR and LF character sequences"],"references":["https://www.owasp.org/index.php/Testing_for_IMAP/SMTP_Injection_(OTG-INPVAL-011)"],"cwe":{"id":"CWE-20","title":"CWE-20: Improper Input Validation","url":"https://cwe.mitre.org/data/definitions/20.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"134","title":"CAPEC-134: Email Injection","url":"https://capec.mitre.org/data/definitions/134.html"},"sansTop25":{"rank":3,"title":"CWE-20: Improper Input Validation"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":57,"sarif":"java-improper-cert-valid","order":42,"name":"Improper Certificate Validation","risk":"Low","sarifLevel":"","severityRating":2.538,"description":"This vulnerability occurs when the hostname is not properly checked in the certificate to ensure that it is associated with the originally requested website in SSL/TLS connections. It may allow an attacker to impersonate a trusted host, performing spoofing, redirection and Man-in-the-middle attacks","recommendation":["Check the hostname in the certificate to ensure it comes from the desired host","Validate the hostname along with all the properties before the certificate is pinned"],"references":["https://cwe.mitre.org/data/definitions/297.html"],"cwe":{"id":"CWE-297","title":"CWE-297: Improper Validation of Certificate with Host Mismatch","url":"https://cwe.mitre.org/data/definitions/297.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A7","title":"A7 - Identification and Authentication Failures","url":"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"},"capec":{"id":"475","title":"CAPEC-475: Signature Spoofing by Improper Validation","url":"https://capec.mitre.org/data/definitions/475.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":60,"sarif":"java-weak-iv","order":43,"name":"Weak Initialization Vector","risk":"Low","sarifLevel":"","severityRating":2.25,"description":"The application uses an Initialization Vector (IV) in a cryptographic operation but does not generate an unpredictable unique IV. A predictable Initialization Vector can compromise the encryption operation and leak information about the data","recommendation":["Use a securely-random IV generated by SecureRandom"],"references":["https://cwe.mitre.org/data/definitions/1204.html"],"cwe":{"id":"CWE-1204","title":"CWE-1204: Generation of Weak Initialization Vector (IV)","url":"https://cwe.mitre.org/data/definitions/1204.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":43,"sarif":"java-misc","order":44,"name":"Miscellaneous Dangerous Functions","risk":"Medium","sarifLevel":"","severityRating":4.653,"description":"Miscellaneous dangerous functions are functions that could introduce a vulnerability of an unpredictable security impact if they are used incorrectly. Functions like LoadLibrary or printStackTrace could result in arbitrary code execution or information disclosure","recommendation":["Avoid use of potentially dangerous or depreciated functions"],"references":["https://cwe.mitre.org/data/definitions/676.html"],"cwe":{"id":"CWE-676","title":"CWE-676: Use of Potentially Dangerous Function","url":"https://cwe.mitre.org/data/definitions/676.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]}]}],"parameters":{"target":{"type":"remote","source":"9958e70b-ca8b-4cef-be99-0c80aeeba639","path":"/targets/local/9896fbdd-a064-44d6-83e4-ca0a67577c9e/9958e70b-ca8b-4cef-be99-0c80aeeba639/"},"incremental":false,"ignoreStoredFP":true,"almTrigger":"","emailTrigger":"","slackTrigger":"","exclusions":["/bin/","/build/","/dist/","/vendor/","/out/","/release/","/target/","/test(s?)/","/__test(s?)__/","/__spec(s?)__/","\\.test\\.(js|jsx|xsjx)","\\.spec\\.(js|jsx|xsjx)","/e2e/","/cypress/","/node_modules/","/locales/","/\\.vscode/","/\\.idea/","/\\.git/","/\\.github/","/lib/","package-info\\.java","module-info\\.java","/\\.mvn/"],"engines":[8,101],"engineParams":[{"engineId":8,"trackedInputs":["document.location","document.cookie","document.referrer","document.URL","document.documentURI","document.URI","navigator.userAgent","location.search","document.forms","window.location","get_value()","get_valueWithLiterals()","get_valueWithPromptAndLiterals()","prompt()","getValue()","getUriParameters()","$CurrentPage.parameters","$Request","responseText","header.linkname"],"excludedVulnTypes":[],"depth":{"maxFunctionDepth":8,"maxVariableTrack":15},"customFilters":[],"customRules":[],"severityLevels":[{"vulnTypeId":5,"severity":"High"},{"vulnTypeId":0,"severity":"High"},{"vulnTypeId":3,"severity":"High"},{"vulnTypeId":4,"severity":"High"},{"vulnTypeId":12,"severity":"High"},{"vulnTypeId":1,"severity":"High"},{"vulnTypeId":2,"severity":"High"},{"vulnTypeId":16,"severity":"Medium"},{"vulnTypeId":14,"severity":"Medium"},{"vulnTypeId":15,"severity":"Medium"},{"vulnTypeId":11,"severity":"Medium"},{"vulnTypeId":8,"severity":"Low"},{"vulnTypeId":10,"severity":"Low"},{"vulnTypeId":7,"severity":"Low"},{"vulnTypeId":6,"severity":"Low"},{"vulnTypeId":13,"severity":"Low"},{"vulnTypeId":9,"severity":"Low"},{"vulnTypeId":17,"severity":"Medium"},{"vulnTypeId":18,"severity":"High"},{"vulnTypeId":19,"severity":"Medium"}]},{"engineId":101,"trackedInputs":[],"excludedVulnTypes":[],"depth":{"maxFunctionDepth":12,"maxVariableTrack":20},"customFilters":[],"customRules":[],"severityLevels":[{"vulnTypeId":1,"severity":"High"},{"vulnTypeId":2,"severity":"High"},{"vulnTypeId":6,"severity":"High"},{"vulnTypeId":46,"severity":"High"},{"vulnTypeId":51,"severity":"High"},{"vulnTypeId":52,"severity":"High"},{"vulnTypeId":47,"severity":"High"},{"vulnTypeId":53,"severity":"High"},{"vulnTypeId":8,"severity":"High"},{"vulnTypeId":9,"severity":"High"},{"vulnTypeId":10,"severity":"High"},{"vulnTypeId":59,"severity":"High"},{"vulnTypeId":54,"severity":"Medium"},{"vulnTypeId":49,"severity":"Medium"},{"vulnTypeId":50,"severity":"Medium"},{"vulnTypeId":11,"severity":"Medium"},{"vulnTypeId":12,"severity":"Medium"},{"vulnTypeId":13,"severity":"Medium"},{"vulnTypeId":14,"severity":"Medium"},{"vulnTypeId":20,"severity":"Medium"},{"vulnTypeId":22,"severity":"Medium"},{"vulnTypeId":27,"severity":"Medium"},{"vulnTypeId":31,"severity":"Medium"},{"vulnTypeId":32,"severity":"Medium"},{"vulnTypeId":33,"severity":"Medium"},{"vulnTypeId":34,"severity":"Medium"},{"vulnTypeId":44,"severity":"Medium"},{"vulnTypeId":56,"severity":"Medium"},{"vulnTypeId":58,"severity":"Medium"},{"vulnTypeId":61,"severity":"Medium"},{"vulnTypeId":26,"severity":"Low"},{"vulnTypeId":28,"severity":"Low"},{"vulnTypeId":29,"severity":"Low"},{"vulnTypeId":48,"severity":"Low"},{"vulnTypeId":30,"severity":"Low"},{"vulnTypeId":55,"severity":"Low"},{"vulnTypeId":38,"severity":"Low"},{"vulnTypeId":39,"severity":"Low"},{"vulnTypeId":40,"severity":"Low"},{"vulnTypeId":41,"severity":"Low"},{"vulnTypeId":42,"severity":"Low"},{"vulnTypeId":45,"severity":"Low"},{"vulnTypeId":57,"severity":"Low"},{"vulnTypeId":60,"severity":"Low"},{"vulnTypeId":43,"severity":"Medium"}]}]},"stats":{"duration":"00:01:07","totalVulnerabilities":32,"totalFiles":423,"testedFiles":423,"totalLines":19846,"testedLines":19846,"critical":0,"high":22,"medium":7,"low":3,"engines":[{"id":0,"language":"JavaScript / Node.js","status":"Finished","statusMessage":"","duration":"00:01:13","totalFiles":148,"testedFiles":148,"totalLines":13800,"testedLines":13800,"timeoutFiles":null},{"id":1,"language":"Java*","status":"Finished","statusMessage":"","duration":"00:01:13","totalFiles":275,"testedFiles":275,"totalLines":0,"testedLines":0,"timeoutFiles":null}],"resources":{"memory":4,"cpu":2,"os":"linux"}},"metadata":{"projectName":"WebGoat_dev_develop","applicationName":"TheRedHatter"},"markedForDeletion":false,"createdTime":"2023-12-27T12:28:10.202Z","startTime":"2023-12-27T12:28:10.202Z","expiration":"2033-12-24T12:28:10.202Z","lastUpdateTime":"2023-12-27T12:29:25.516Z","createdBy":"am@armorcode.io","groupVisibility":null,"logCtx":"d5eb3e3e3f23f92bd8f98a29488f5e01f7e3ce45b294eb","versionFlag":"23.11.2.3 (Java), 23.11.2.219 (Java), 23.11.2.3 (JavaScript)","activeCliFeatures":null,"scm":{"commit":{"Id":"581f2c43dbed745d35814b86897888379891bf6a","Time":"2023-09-11T13:26:07Z"},"branch":{"name":"develop","upstream":{"remoteName":"origin","branch":"develop","isPushed":true},"type":"base"},"remotes":[{"name":"origin","type":"github","url":{"scheme":"https","host":"github.com","port":0,"path":"/TheRedHatter/WebGoat_dev"},"hasCommit":true,"defaultBranch":""}]}},{"id":"628d3e68-f403-4eb9-9b83-4714528d14f7","orgId":"9896fbdd-a064-44d6-83e4-ca0a67577c9e","productId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","parentAppId":"613eb12c-9b8f-4966-9254-991cdba4c076","name":"Scan-struts-2023/12/27 12:52:22 PM","status":"Finished","message":"Scan finished","languages":["Java*","JavaScript / Node.js"],"results":[{"engineId":8,"language":"JavaScript / Node.js","results":[{"type":{"id":5,"sarif":"js-cmd-inj","order":0,"name":"Command Injection","risk":"High","sarifLevel":"","severityRating":8.557,"description":"Command Injection vulnerability occurs when an application passes unsafe data supplied by the user (forms, cookies, HTTP headers etc.) to a system shell. In this attack operating system commands supplied by the attacker are usually executed with the privileges of the vulnerable application. Successful shell command execution attack can result in arbitrary command execution and a full system compromise","recommendation":["Blacklisting forbidden character sequences","Whitelisting allowed character sequences","Restricting permissions on operating system commands","Filtering out command directory names"],"references":["https://www.owasp.org/index.php/Command_Injection"],"cwe":{"id":"CWE-78","title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","url":"https://cwe.mitre.org/data/definitions/78.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"88","title":"CAPEC-88: OS Command Injection","url":"https://capec.mitre.org/data/definitions/88.html"},"sansTop25":{"rank":5,"title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":0,"sarif":"js-sqli","order":1,"name":"SQL Injection","risk":"High","sarifLevel":"","severityRating":8.415,"description":"SQL Injection vulnerability occurs when a user input is used in the construction of an SQL query without proper user input string neutralization (sanitization). A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown of the DBMS), recover the content of a given file present on the DBMS file system or in some cases issue commands to the operating system","recommendation":["Using prepared statements (with parameterized queries)","Correct filtering (escaping) of string literal escape characters in SQL statements, like single quote ('), double quote (\"), backslash (\\) and the NULL byte","Checking parameters for valid representation for the give type (integer, float or boolean)","Correct database permissions on logon, which restricts web application or user access to unnecessary data"],"references":["https://owasp.org/www-community/attacks/SQL_Injection","https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html"],"cwe":{"id":"CWE-89","title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","url":"https://cwe.mitre.org/data/definitions/89.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"66","title":"CAPEC-66: SQL Injection","url":"https://capec.mitre.org/data/definitions/66.html"},"sansTop25":{"rank":3,"title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":3,"sarif":"js-code-inj","order":2,"name":"Code Injection","risk":"High","sarifLevel":"","severityRating":8.2,"description":"The application constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment. When the application allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the application. Such an alteration could lead to arbitrary code execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Rejecting any input that does not strictly conform to specifications, or transforming it into something that does","When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules","To reduce the likelihood of code injection, stringent whitelists that limit which constructs are allowed should be used. If the code that invokes a function is dynamically constructed, then verifying that the input is alphanumeric might be insufficient"],"references":["https://owasp.org/www-community/attacks/Code_Injection"],"cwe":{"id":"CWE-94","title":"CWE-94: Improper Control of Generation of Code ('Code Injection')","url":"https://cwe.mitre.org/data/definitions/94.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"242","title":"CAPEC-242: Code Injection","url":"https://capec.mitre.org/data/definitions/242.html"},"sansTop25":{"rank":23,"title":"CWE-94: Improper Control of Generation of Code ('Code Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":4,"sarif":"js-path-traversal","order":3,"name":"Path/Directory Traversal","risk":"High","sarifLevel":"","severityRating":7.913,"description":"Path/Directory Traversal or file disclosure vulnerability occurs when an external input is used to construct a pathname that is intended to identify a file or a directory located underneath a restricted parent directory. The application does not properly neutralize (sanitize) special elements within the pathname, which can cause the pathname to resolve to a location that is outside of the restricted directory. Successful file disclosure attack can result in sensitive files disclosure, and can often lead to full system compromise","recommendation":["Using a whitelist of directories from which files are allowed for download and validating requests based on that list","Indexing files which are allowed for download and passing only their index numbers as the URL parameter values","Validating requested file types"],"references":["https://owasp.org/www-community/attacks/Path_Traversal"],"cwe":{"id":"CWE-22","title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","url":"https://cwe.mitre.org/data/definitions/22.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A5","title":"A5: Broken Access Control","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control"},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"126","title":"CAPEC-126: Path Traversal","url":"https://capec.mitre.org/data/definitions/126.html"},"sansTop25":{"rank":8,"title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":12,"sarif":"js-nosql-inj","order":4,"name":"NoSQL Injection","risk":"High","sarifLevel":"","severityRating":7.067,"description":"NoSQL injection vulnerabilities allow attackers to inject code into commands for databases that donâ€™t use SQL queries, such as MongoDB","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/943.html"],"cwe":{"id":"CWE-943","title":"CWE-943: Improper Neutralization of Special Elements in Data Query Logic","url":"https://cwe.mitre.org/data/definitions/943.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":1,"sarif":"js-dom-xss","order":5,"name":"DOM Based Cross-Site Scripting","risk":"High","sarifLevel":"","severityRating":7.048,"description":"Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser","recommendation":["Escape HTML before inserting untrusted data into element content","Escape attribute before inserting untrusted data into HTML common attributes","Escape JavaScript before inserting untrusted data into JavaScript data values","Escape CSS and strictly validate before inserting untrusted data into HTML style property values","Escape URL before inserting untrusted data into HTML URL parameter values","Use HTML policy engine to validate or clean user-driven HTML in an outbound way","Use HTTPOnly cookie flag"],"references":["https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"],"cwe":{"id":"CWE-79","title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","url":"https://cwe.mitre.org/data/definitions/79.html"},"pcidss":{"section":"6.5.7","title":"PCI DSS 6.5.7 - Cross-Site Scripting (XSS)"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A7","title":"A7: Cross-Site Scripting (XSS)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"63","title":"CAPEC-63: Cross-Site Scripting (XSS)","url":"https://capec.mitre.org/data/definitions/63.html"},"sansTop25":{"rank":2,"title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":2,"sarif":"js-xss","order":6,"name":"Cross-Site Scripting","risk":"High","sarifLevel":"","severityRating":7.048,"description":"Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser","recommendation":["Escape HTML before inserting untrusted data into element content","Escape attribute before inserting untrusted data into HTML common attributes","Escape JavaScript before inserting untrusted data into JavaScript data values","Escape CSS and strictly validate before inserting untrusted data into HTML style property values","Escape URL before inserting untrusted data into HTML URL parameter values","Use HTML policy engine to validate or clean user-driven HTML in an outbound way","Use HTTPOnly cookie flag"],"references":["https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"],"cwe":{"id":"CWE-79","title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","url":"https://cwe.mitre.org/data/definitions/79.html"},"pcidss":{"section":"6.5.7","title":"PCI DSS 6.5.7 - Cross-Site Scripting (XSS)"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A7","title":"A7: Cross-Site Scripting (XSS)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"63","title":"CAPEC-63: Cross-Site Scripting (XSS)","url":"https://capec.mitre.org/data/definitions/63.html"},"sansTop25":{"rank":2,"title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":16,"sarif":"js-hardcoded-creds","order":7,"name":"Hardcoded Password/Credentials","risk":"Medium","sarifLevel":"","severityRating":6.44,"description":"The application contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data","recommendation":["Store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key. If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible"],"references":["https://www.owasp.org/index.php/Use_of_hard-coded_password"],"cwe":{"id":"CWE-798","title":"CWE-798: Use of Hard-coded Credentials","url":"https://cwe.mitre.org/data/definitions/798.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-28","priority":"P1","title":"SC-28: Protection of Information at Rest","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-28"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A7","title":"A7 - Identification and Authentication Failures","url":"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":18,"title":"CWE-798: Use of Hard-coded Credentials"}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"89a37bc0-a13d-4cb5-ab01-1b007816e4fd","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"29140323-acb8-494a-acf9-8c3d80f4deaf","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":16,"name":"Hardcoded Password/Credentials","engineId":8,"language":"JavaScript / Node.js","sarif":"js-hardcoded-creds","sarifLevel":""},"description":"Some variables and data in code can contain sensitive information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"Hardcoded Credentials ","kind":"","file":"apps/showcase/src/main/webapp/WEB-INF/empmanager/editEmployee.jsp","snippet":"<s:password label=\"Password\" name=\"currentEmployee.password\"/>","line":64,"startLine":60,"endLine":69,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"104dc1bc-e786-48d9-abbd-21be01088c83","file":"apps/showcase/src/main/webapp/WEB-INF/empmanager/editEmployee.jsp","line":64,"stepsCount":1,"isNew":true,"rating":3.6923076923076925}],"severityRating":6.44,"confidenceRating":4,"ageRating":0,"rating":2.0608000000000004,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":14,"sarif":"js-weak-rnd","order":8,"name":"Weak Pseudo-Random","risk":"Medium","sarifLevel":"","severityRating":5.536,"description":"When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography","recommendation":["Use functions or hardware which use a hardware-based random number generation for all crypto"],"references":["https://www.owasp.org/index.php/Insecure_Randomness"],"cwe":{"id":"CWE-338","title":"CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)","url":"https://cwe.mitre.org/data/definitions/338.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":15,"sarif":"js-misc","order":9,"name":"Miscellaneous Dangerous Functions","risk":"Medium","sarifLevel":"","severityRating":4.653,"description":"Miscellaneous dangerous functions are functions that could introduce a vulnerability of an unpredictable security impact if they are used incorrectly. Functions like LoadLibrary or printStackTrace could result in arbitrary code execution or information disclosure","recommendation":["Avoid use of potentially dangerous or depreciated functions"],"references":["https://cwe.mitre.org/data/definitions/676.html"],"cwe":{"id":"CWE-676","title":"CWE-676: Use of Potentially Dangerous Function","url":"https://cwe.mitre.org/data/definitions/676.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":11,"sarif":"js-regex-dos","order":10,"name":"Regex Denial of Service (ReDoS)","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time, affecting the availability of the application","recommendation":["Do not pass untrusted user input to functions that perform regular expression searches"],"references":["https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"492","title":"CAPEC-492: Regular Expression Exponential Blowup","url":"https://capec.mitre.org/data/definitions/492.html"},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":8,"sarif":"js-redirect","order":11,"name":"Unvalidated/Open Redirect","risk":"Low","sarifLevel":"","severityRating":3.107,"description":"Open Redirect vulnerability occurs when untrusted user input is passed to HTTP location redirect functions or properties. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts may have a more trustworthy appearance","recommendation":["Do not pass untrusted user input to location redirection functions or properties"],"references":["https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"],"cwe":{"id":"CWE-601","title":"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')","url":"https://cwe.mitre.org/data/definitions/601.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"194","title":"CAPEC-194: Fake the Source of Data","url":"https://capec.mitre.org/data/definitions/194.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":10,"sarif":"js-log-forge","order":12,"name":"Log Forging","risk":"Low","sarifLevel":"","severityRating":3.097,"description":"Log Forging vulnerability occurs when an application either does not neutralize (sanitize) or it incorrectly neutralizes output that is written to logs. This can allow an attacker to forge log entries or inject malicious content into log records","recommendation":["Validating and encoding all input that could be outputed in the log file"],"references":["https://www.owasp.org/index.php/Log_Injection"],"cwe":{"id":"CWE-117","title":"CWE-117: Improper Output Neutralization for Logs","url":"https://cwe.mitre.org/data/definitions/117.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A9","title":"A9 - Security Logging and Monitoring Failures","url":"https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"},"capec":{"id":"93","title":"CAPEC-93: Log Injection-Tampering-Forging","url":"https://capec.mitre.org/data/definitions/93.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":7,"sarif":"js-header-inj","order":13,"name":"HTTP Header Injection","risk":"Low","sarifLevel":"","severityRating":2.969,"description":"HTTP header injection is a general class of web application security vulnerability which occurs when HTTP headers are dynamically generated based on user input. Header injection in HTTP responses can allow for HTTP response splitting, Session fixation via the Set-Cookie header, cross-site scripting (XSS), and malicious redirect attacks via the location header","recommendation":["Do not pass untrusted user input to functions that affect response header content"],"references":["https://cwe.mitre.org/data/definitions/113.html"],"cwe":{"id":"CWE-113","title":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')","url":"https://cwe.mitre.org/data/definitions/113.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":6,"sarif":"js-resp-split","order":14,"name":"HTTP Response Splitting","risk":"Low","sarifLevel":"","severityRating":2.969,"description":"HTTP Response Splitting vulnerability occurs when a user input that contains CR (carriage return, also represented by %0d or \\r) and LF (line feed, also represented by %0a or \\n) characters is included in the web application HTTP response headers. The failure to remove CRs and LFs allows an attacker to set arbitrary headers, take control of the body, or break the response into two or more separate responses and allow for different types of attacks such as Cross Site Scripting, cross-user defacement, web cache poisoning and similar exploits","recommendation":["Remove CRs and LFs (and all other hazardous characters) before embedding data into any HTTP response header, particularly when setting cookies and redirecting","Use a whitelist of acceptable inputs that strictly conform to specifications","When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields"],"references":["https://www.owasp.org/index.php/HTTP_Response_Splitting"],"cwe":{"id":"CWE-113","title":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')","url":"https://cwe.mitre.org/data/definitions/113.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"34","title":"CAPEC-34: HTTP Response Splitting","url":"https://capec.mitre.org/data/definitions/34.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":13,"sarif":"js-dangerous-func","order":15,"name":"Use of Inherently Dangerous Function","risk":"Low","sarifLevel":"","severityRating":2.82,"description":"The application calls a function that can never be guaranteed to work safely. Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account","recommendation":["Ban the use of dangerous functions. Use their safe equivalent"],"references":["https://cwe.mitre.org/data/definitions/242.html"],"cwe":{"id":"CWE-242","title":"CWE-242: Use of Inherently Dangerous Function","url":"https://cwe.mitre.org/data/definitions/242.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":9,"sarif":"js-cookie-inj","order":16,"name":"Cookie Injection","risk":"Low","sarifLevel":"","severityRating":2.381,"description":"The application does not validate or incorrectly validates input that can affect the control flow or data flow of a program, or in this specific case application cookies. When the application does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/20.html"],"cwe":{"id":"CWE-20","title":"CWE-20: Improper Input Validation","url":"https://cwe.mitre.org/data/definitions/20.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":3,"title":"CWE-20: Improper Input Validation"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":17,"sarif":"js-xxe","order":17,"name":"XML External Entity (XXE) Injection","risk":"Medium","sarifLevel":"","severityRating":6.408,"description":"The application processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the application to embed incorrect documents into its output. XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing","recommendation":["Many XML parsers and validators can be configured to disable external entity expansion"],"references":["https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing"],"cwe":{"id":"CWE-611","title":"CWE-611: Improper Restriction of XML External Entity Reference","url":"https://cwe.mitre.org/data/definitions/611.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A4","title":"A4: XML External Entities (XXE)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A4-XML_External_Entities_(XXE)"},"owasp2021":{"index":"A5","title":"A5 - Security Misconfiguration","url":"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"},"capec":{"id":"201","title":"CAPEC-201: Serialized Data External Linking","url":"https://capec.mitre.org/data/definitions/201.html"},"sansTop25":{"rank":17,"title":"CWE-611: Improper Restriction of XML External Entity Reference"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":18,"sarif":"js-ssrf","order":18,"name":"Server Side Request Forgery","risk":"High","sarifLevel":"","severityRating":6.7,"description":"Server Side Request Forgery occures when the web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination. By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests","recommendation":["Use a whitelist of allowed domains and protocols from where the web server can fetch remote resources"],"references":["https://www.owasp.org/index.php/Server_Side_Request_Forgery"],"cwe":{"id":"CWE-918","title":"CWE-918: Server-Side Request Forgery (SSRF)","url":"https://cwe.mitre.org/data/definitions/918.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A10","title":"A10 - Server-Side Request Forgery (SSRF)","url":"https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":19,"title":"CWE-918: Server-Side Request Forgery (SSRF)"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":19,"sarif":"js-ldap-inj","order":19,"name":"LDAP Injection","risk":"Medium","sarifLevel":"","severityRating":5.458,"description":"LDAP injection vulnerability occurs when an application constructs all or a part of an LDAP query using a user input, but it either does not neutralize (sanitize) or it incorrectly neutralizes special elements that could modify the intended LDAP query. Successful LDAP injection attack can result in the execution of arbitrary commands such as granting permissions to unauthorized queries and content modification inside the LDAP tree","recommendation":["Type validation (example: int userinput = Convert.ToInt32(Request.Querystring(\"userinput\"))","Pattern validation (example: string email = Regex.IsMatch(Request.Querystring(\"email\"),\"^.+@[^\\.].*\\.[a-z]{2,}$\"))","Domain values validation (example: string country = Request.Querystring(???country???) in {???USA???, ???UK???})"],"references":["https://www.owasp.org/index.php/LDAP_injection"],"cwe":{"id":"CWE-90","title":"CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')","url":"https://cwe.mitre.org/data/definitions/90.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"136","title":"CAPEC-136: LDAP Injection","url":"https://capec.mitre.org/data/definitions/136.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]}]},{"engineId":101,"language":"Java*","results":[{"type":{"id":1,"sarif":"java-cmd-inj","order":0,"name":"Command Injection","risk":"High","sarifLevel":"","severityRating":8.557,"description":"Command Injection vulnerability occurs when an application passes unsafe data supplied by the user (forms, cookies, HTTP headers etc.) to a system shell. In this attack operating system commands supplied by the attacker are usually executed with the privileges of the vulnerable application. Successful shell command execution attack can result in arbitrary command execution and a full system compromise","recommendation":["Blacklisting forbidden character sequences","Whitelisting allowed character sequences","Restricting permissions on operating system commands","Filtering out command directory names"],"references":["https://www.owasp.org/index.php/Command_Injection"],"cwe":{"id":"CWE-78","title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","url":"https://cwe.mitre.org/data/definitions/78.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"88","title":"CAPEC-88: OS Command Injection","url":"https://capec.mitre.org/data/definitions/88.html"},"sansTop25":{"rank":5,"title":"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":2,"sarif":"java-sqli","order":1,"name":"SQL Injection","risk":"High","sarifLevel":"","severityRating":8.415,"description":"SQL Injection vulnerability occurs when a user input is used in the construction of an SQL query without proper user input string neutralization (sanitization). A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown of the DBMS), recover the content of a given file present on the DBMS file system or in some cases issue commands to the operating system","recommendation":["Using prepared statements (with parameterized queries)","Correct filtering (escaping) of string literal escape characters in SQL statements, like single quote ('), double quote (\"), backslash (\\) and the NULL byte","Checking parameters for valid representation for the give type (integer, float or boolean)","Correct database permissions on logon, which restricts web application or user access to unnecessary data"],"references":["https://owasp.org/www-community/attacks/SQL_Injection","https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html"],"cwe":{"id":"CWE-89","title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","url":"https://cwe.mitre.org/data/definitions/89.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"66","title":"CAPEC-66: SQL Injection","url":"https://capec.mitre.org/data/definitions/66.html"},"sansTop25":{"rank":3,"title":"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":6,"sarif":"java-path-traversal","order":2,"name":"Path/Directory Traversal","risk":"High","sarifLevel":"","severityRating":7.913,"description":"Path/Directory Traversal or file disclosure vulnerability occurs when an external input is used to construct a pathname that is intended to identify a file or a directory located underneath a restricted parent directory. The application does not properly neutralize (sanitize) special elements within the pathname, which can cause the pathname to resolve to a location that is outside of the restricted directory. Successful file disclosure attack can result in sensitive files disclosure, and can often lead to full system compromise","recommendation":["Using a whitelist of directories from which files are allowed for download and validating requests based on that list","Indexing files which are allowed for download and passing only their index numbers as the URL parameter values","Validating requested file types"],"references":["https://owasp.org/www-community/attacks/Path_Traversal"],"cwe":{"id":"CWE-22","title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","url":"https://cwe.mitre.org/data/definitions/22.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A5","title":"A5: Broken Access Control","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control"},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"126","title":"CAPEC-126: Path Traversal","url":"https://capec.mitre.org/data/definitions/126.html"},"sansTop25":{"rank":8,"title":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":46,"sarif":"java-code-inj","order":3,"name":"Code Injection","risk":"High","sarifLevel":"","severityRating":8.2,"description":"The application constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment. When the application allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the application. Such an alteration could lead to arbitrary code execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Rejecting any input that does not strictly conform to specifications, or transforming it into something that does","When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules","To reduce the likelihood of code injection, stringent whitelists that limit which constructs are allowed should be used. If the code that invokes a function is dynamically constructed, then verifying that the input is alphanumeric might be insufficient"],"references":["https://owasp.org/www-community/attacks/Code_Injection"],"cwe":{"id":"CWE-94","title":"CWE-94: Improper Control of Generation of Code ('Code Injection')","url":"https://cwe.mitre.org/data/definitions/94.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"242","title":"CAPEC-242: Code Injection","url":"https://capec.mitre.org/data/definitions/242.html"},"sansTop25":{"rank":23,"title":"CWE-94: Improper Control of Generation of Code ('Code Injection')"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":51,"sarif":"java-jndi-inj","order":4,"name":"JNDI Injection","risk":"High","sarifLevel":"","severityRating":8.639,"description":"JNDI Injection vulnerability occurs when an application uses external input name in the JNDI API to discover and look up data and resource stored in different naming or directory services. An attacker can then manipulate the JNDI context and trick the application into using a malicious/unintended resource or perform remote code execution","recommendation":["Avoid using input name directly in JNDI lookups","Check if input name is either a non-URL or a trusted URL"],"references":["https://cwe.mitre.org/data/definitions/74.html"],"cwe":{"id":"CWE-74","title":"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","url":"https://cwe.mitre.org/data/definitions/74.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":52,"sarif":"java-xslt-inj","order":5,"name":"XSLT Injection","risk":"High","sarifLevel":"","severityRating":8.639,"description":"XSLT Injection vulnerability occurs when an application uses external input to construct an XSLT stylesheet. An attacker can then control the XSLT transformation process and trick the application into using a malicious/unintended resource or perform remote code execution","recommendation":["Avoid using user input directly in XSLT stylesheets","Do not process untrusted XSLT stylesheets","Enable secure processing mode"],"references":["https://cwe.mitre.org/data/definitions/74.html"],"cwe":{"id":"CWE-74","title":"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","url":"https://cwe.mitre.org/data/definitions/74.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":47,"sarif":"java-xpath-inj","order":6,"name":"XPath Injection","risk":"High","sarifLevel":"","severityRating":8.293,"description":"XPath Injection vulnerability occurs when an application uses external input to construct dynamically an XPath expression used to retrieve data from an XML database, but it either does not neutralize (sanitize) or it incorrectly neutralizes that input. This allows an attacker to control the structure of the query. By sending intentionally malformed information to the web site, an attacker can find out how the XML data is structured, or access data that he may not normally have access to","recommendation":["Escape single and double quotes characters","Use precompiled XPath"],"references":["https://www.owasp.org/index.php/XPATH_Injection"],"cwe":{"id":"CWE-643","title":"CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection')","url":"https://cwe.mitre.org/data/definitions/643.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"83","title":"CAPEC-83: XPath Injection","url":"https://capec.mitre.org/data/definitions/83.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":53,"sarif":"java-el-inj","order":7,"name":"Expression Language Injection","risk":"High","sarifLevel":"","severityRating":7.968,"description":"The application constructs an Expression Language using user controllable data with insufficient validation/encode that could modify the EL before it is dynamically evaluated by an EL interpreter. This vulnerability could lead to arbitrary code execution, unauthorized access to data, account hijacking, and other unexpected behaviors","recommendation":["Avoid incorporating user-supplied data into an Expression Language interpreter","Validate and/or encode the user input to ensure it wonâ€™t be evaluated as an EL","A whitelist of specific accepted values can be used","Avoid using applications with known security flaws, always use the most recent version of all underlying software, as well as a properly configured WAF"],"references":["https://www.owasp.org/index.php/Expression_Language_Injection"],"cwe":{"id":"CWE-917","title":"CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')","url":"https://cwe.mitre.org/data/definitions/917.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":8,"sarif":"java-xss","order":8,"name":"Cross-Site Scripting","risk":"High","sarifLevel":"","severityRating":7.048,"description":"Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser","recommendation":["Escape HTML before inserting untrusted data into element content","Escape attribute before inserting untrusted data into HTML common attributes","Escape JavaScript before inserting untrusted data into JavaScript data values","Escape CSS and strictly validate before inserting untrusted data into HTML style property values","Escape URL before inserting untrusted data into HTML URL parameter values","Use HTML policy engine to validate or clean user-driven HTML in an outbound way","Use HTTPOnly cookie flag"],"references":["https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"],"cwe":{"id":"CWE-79","title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","url":"https://cwe.mitre.org/data/definitions/79.html"},"pcidss":{"section":"6.5.7","title":"PCI DSS 6.5.7 - Cross-Site Scripting (XSS)"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A7","title":"A7: Cross-Site Scripting (XSS)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"63","title":"CAPEC-63: Cross-Site Scripting (XSS)","url":"https://capec.mitre.org/data/definitions/63.html"},"sansTop25":{"rank":2,"title":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"2edf16e4-58cb-46a0-ad1f-9fc2affd14ac","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"14c30f3a-fcb9-4ddd-a3f4-ccb018c46a72","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":8,"name":"Cross-Site Scripting","engineId":101,"language":"Java*","sarif":"java-xss","sarifLevel":""},"description":"'print' method of 'javax.servlet.jsp.JspWriter' object could be abused to perform a Cross Site Scripting attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"javax.servlet.jsp.JspWriter.print","kind":"","file":"apps/showcase/src/main/webapp/WEB-INF/decorators/main.jsp","snippet":"<a href=\"<%=sourceUrl %>\" class=\"btn btn-info\">View Sources</a>","line":298,"startLine":294,"endLine":303,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"8515d286-a25e-43a1-9172-a98ce8698851","file":"plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java","line":253,"stepsCount":7,"isNew":true,"rating":8.76923076923077}],"severityRating":7.048,"confidenceRating":10,"ageRating":0,"rating":5.638400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":9,"sarif":"java-insecure-ds","order":9,"name":"Deserialization of Untrusted Data","risk":"High","sarifLevel":"","severityRating":6.703,"description":"The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid. When developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like code execution","recommendation":["If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified","When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe","Explicitly define a final object() to prevent deserialization","Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Whitelist acceptable classes. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation"],"references":["https://www.owasp.org/index.php/Deserialization_of_untrusted_data"],"cwe":{"id":"CWE-502","title":"CWE-502: Deserialization of Untrusted Data","url":"https://cwe.mitre.org/data/definitions/502.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A8","title":"A8: Insecure Deserialization","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization"},"owasp2021":{"index":"A8","title":"A8 - Software and Data Integrity Failures","url":"https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"},"capec":{"id":"586","title":"CAPEC-586: Object Injection","url":"https://capec.mitre.org/data/definitions/586.html"},"sansTop25":{"rank":15,"title":"CWE-502: Deserialization of Untrusted Data"}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"04a7198f-5385-4d40-8417-5f376d725862","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"095845f8-69bf-4d43-b048-602fd54cfdc8","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":9,"name":"Deserialization of Untrusted Data","engineId":101,"language":"Java*","sarif":"java-insecure-ds","sarifLevel":""},"description":"'loadClass' method with unvalidated input could result in deserialization vulnerabilities that could lead to arbitrary code execution or denial of service.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"High","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"getClassLoader.loadClass","kind":"","file":"core/src/main/java/com/opensymphony/xwork2/util/ClassLoaderUtil.java","snippet":"return ClassLoaderUtil.class.getClassLoader().loadClass(className);","line":177,"startLine":173,"endLine":182,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"1e735205-a35b-4780-afbf-08d377e31f33","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":8,"isNew":true,"rating":8.76923076923077}],"severityRating":6.703,"confidenceRating":10,"ageRating":0,"rating":5.362400000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":10,"sarif":"java-ssrf","order":10,"name":"Server Side Request Forgery","risk":"High","sarifLevel":"","severityRating":6.7,"description":"Server Side Request Forgery occures when the web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination. By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests","recommendation":["Use a whitelist of allowed domains and protocols from where the web server can fetch remote resources"],"references":["https://www.owasp.org/index.php/Server_Side_Request_Forgery"],"cwe":{"id":"CWE-918","title":"CWE-918: Server-Side Request Forgery (SSRF)","url":"https://cwe.mitre.org/data/definitions/918.html"},"pcidss":{"section":"6.5.8","title":"PCI DSS 6.5.8 - Improper Access Control"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A10","title":"A10 - Server-Side Request Forgery (SSRF)","url":"https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":19,"title":"CWE-918: Server-Side Request Forgery (SSRF)"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":59,"sarif":"java-unsafe-format","order":11,"name":"Unsafe Format String","risk":"High","sarifLevel":"","severityRating":7.223,"description":"This vulnerability occurs when an attacker can externally control a format string that is being used as an argument in a function. It can access memory spaces and makes the attacker able to modify the memory, and perform Denial of Service","recommendation":["Validate that the format string canâ€™t be user-controllable and the right number of arguments are being sent to the function"],"references":["https://cwe.mitre.org/data/definitions/134.html"],"cwe":{"id":"CWE-134","title":"CWE-134: Use of Externally-Controlled Format String","url":"https://cwe.mitre.org/data/definitions/134.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"135","title":"CAPEC-135: Format String Injection","url":"https://capec.mitre.org/data/definitions/135.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":54,"sarif":"java-store-sensitiveinformation","order":12,"name":"Store Sensitive Information","risk":"Medium","sarifLevel":"","severityRating":4.312,"description":"Store Sensitive Information vulnerability occurs when an application stores sensitive information such as password in unencrypted form. This allows an attacker to exploit such information","recommendation":["Encrypt sensitive information before storing","Perform hashing before storing"],"references":["https://cwe.mitre.org/data/definitions/312.html"],"cwe":{"id":"CWE-312","title":"CWE-312: Cleartext Storage of Sensitive Information","url":"https://cwe.mitre.org/data/definitions/312.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-28","priority":"P1","title":"SC-28: Protection of Information at Rest","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-28"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"37","title":"CAPEC-37: Retrieve Embedded Sensitive Data","url":"https://capec.mitre.org/data/definitions/37.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":49,"sarif":"java-loop-dos","order":13,"name":"Loop Denial of Service","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Loop Denial of Service is a Denial of Service attack, that exploits code flows where the application uses user-controlled input in conditions (such as in loops). An attacker can then cause a program to hang for a very long time and affect the availability","recommendation":["Do not use untrusted user input in loop conditions"],"references":["https://cwe.mitre.org/data/definitions/400.html"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":3,"dataFlowsCount":3,"remediationCount":0,"countWithFP":3,"vulnerabilities":[],"Findings":[{"finding":{"id":"d3168f18-1946-4094-bbcc-4b663ebe7aff","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"59b1bd19-aba8-4b40-8d17-11f393013719","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":49,"name":"Loop Denial of Service","engineId":101,"language":"Java*","sarif":"java-loop-dos","sarifLevel":""},"description":"'infix:lt' method could be abused to perform a Loop Denial of Service attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"j < len","kind":"","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","snippet":"for (int j = start; j < len; j++) {","line":110,"startLine":106,"endLine":115,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"b2cdc2cc-8e03-4bfe-b909-4d0567e0e906","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","line":65,"stepsCount":3,"isNew":true,"rating":8.76923076923077}],"severityRating":3.3,"confidenceRating":10,"ageRating":0,"rating":2.64,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"966d7ae0-0cd9-4b5e-8070-e1ef1b9caa6c","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"7ffd3619-ef02-4f2b-becf-89f09d639848","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":49,"name":"Loop Denial of Service","engineId":101,"language":"Java*","sarif":"java-loop-dos","sarifLevel":""},"description":"'infix:lt' method could be abused to perform a Loop Denial of Service attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"i < start","kind":"","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","snippet":"for (int i = 0; (i < start) && iterator.hasNext(); i++) {","line":81,"startLine":77,"endLine":86,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"05b56e93-5fef-4750-a2a6-1ec5467bb0f0","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","line":65,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":3.3,"confidenceRating":10,"ageRating":0,"rating":2.64,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"64769365-bb71-4197-8be0-b0d8f9a891bf","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"5e604300-6067-4585-9e0c-a2e68242e692","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":49,"name":"Loop Denial of Service","engineId":101,"language":"Java*","sarif":"java-loop-dos","sarifLevel":""},"description":"'infix:lte' method could be abused to perform a Loop Denial of Service attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"lineno <= endLine","kind":"","file":"apps/showcase/src/main/java/org/apache/struts2/showcase/source/ViewSourceAction.java","snippet":"if (lineno >= startLine && lineno <= endLine) {","line":214,"startLine":210,"endLine":219,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"86e0bb7d-6955-4fc0-9977-e473e712fa20","file":"apps/showcase/src/main/java/org/apache/struts2/showcase/source/ViewSourceAction.java","line":55,"stepsCount":9,"isNew":true,"rating":7.923076923076923}],"severityRating":3.3,"confidenceRating":9,"ageRating":0,"rating":2.3760000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":50,"sarif":"java-readLine-dos","order":14,"name":"Readline Denial of Service","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Readline Denial of Service is a Denial of Service attack, that exploits code flows where the application passes user-controlled input to readLine executions. An attacker can then cause a program to hang for a very long time and affect the availability if such an input contains no newlines and is huge","recommendation":["Do not pass untrusted user input to functions that perform readline execution"],"references":["https://cwe.mitre.org/data/definitions/400.html"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":11,"sarif":"java-hardcoded-creds","order":15,"name":"Hardcoded Password/Credentials","risk":"Medium","sarifLevel":"","severityRating":6.44,"description":"The application contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data","recommendation":["Store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key. If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible"],"references":["https://www.owasp.org/index.php/Use_of_hard-coded_password"],"cwe":{"id":"CWE-798","title":"CWE-798: Use of Hard-coded Credentials","url":"https://cwe.mitre.org/data/definitions/798.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-28","priority":"P1","title":"SC-28: Protection of Information at Rest","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-28"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A7","title":"A7 - Identification and Authentication Failures","url":"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":18,"title":"CWE-798: Use of Hard-coded Credentials"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":12,"sarif":"java-xxe","order":16,"name":"XML External Entity (XXE) Injection","risk":"Medium","sarifLevel":"","severityRating":6.408,"description":"The application processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the application to embed incorrect documents into its output. XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing","recommendation":["Many XML parsers and validators can be configured to disable external entity expansion"],"references":["https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing"],"cwe":{"id":"CWE-611","title":"CWE-611: Improper Restriction of XML External Entity Reference","url":"https://cwe.mitre.org/data/definitions/611.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A4","title":"A4: XML External Entities (XXE)","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A4-XML_External_Entities_(XXE)"},"owasp2021":{"index":"A5","title":"A5 - Security Misconfiguration","url":"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"},"capec":{"id":"201","title":"CAPEC-201: Serialized Data External Linking","url":"https://capec.mitre.org/data/definitions/201.html"},"sansTop25":{"rank":17,"title":"CWE-611: Improper Restriction of XML External Entity Reference"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":13,"sarif":"java-weak-rnd","order":17,"name":"Weak Pseudo-Random","risk":"Medium","sarifLevel":"","severityRating":5.536,"description":"When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography","recommendation":["Use functions or hardware which use a hardware-based random number generation for all crypto"],"references":["https://www.owasp.org/index.php/Insecure_Randomness"],"cwe":{"id":"CWE-338","title":"CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)","url":"https://cwe.mitre.org/data/definitions/338.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":14,"sarif":"java-ldap-inj","order":18,"name":"LDAP Injection","risk":"Medium","sarifLevel":"","severityRating":5.458,"description":"LDAP injection vulnerability occurs when an application constructs all or a part of an LDAP query using a user input, but it either does not neutralize (sanitize) or it incorrectly neutralizes special elements that could modify the intended LDAP query. Successful LDAP injection attack can result in the execution of arbitrary commands such as granting permissions to unauthorized queries and content modification inside the LDAP tree","recommendation":["Type validation (example: int userinput = Convert.ToInt32(Request.Querystring(\"userinput\"))","Pattern validation (example: string email = Regex.IsMatch(Request.Querystring(\"email\"),\"^.+@[^\\.].*\\.[a-z]{2,}$\"))","Domain values validation (example: string country = Request.Querystring(???country???) in {???USA???, ???UK???})"],"references":["https://www.owasp.org/index.php/LDAP_injection"],"cwe":{"id":"CWE-90","title":"CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')","url":"https://cwe.mitre.org/data/definitions/90.html"},"pcidss":{"section":"6.5.1","title":"PCI DSS 6.5.1 - Injection Flaws"},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"164.312 (a)(1)","title":"164.312 (a)(1): Standard: Access control"},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"A1","title":"A1: Injection","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"136","title":"CAPEC-136: LDAP Injection","url":"https://capec.mitre.org/data/definitions/136.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":20,"sarif":"java-err-msg","order":19,"name":"Error Messages Information Exposure","risk":"Medium","sarifLevel":"","severityRating":4.205,"description":"The application generates an error message that includes sensitive information about its environment, users, or associated data. The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query","recommendation":["Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success","If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not"],"references":["https://www.owasp.org/index.php/Improper_Error_Handling"],"cwe":{"id":"CWE-209","title":"CWE-209: Information Exposure Through an Error Message","url":"https://cwe.mitre.org/data/definitions/209.html"},"pcidss":{"section":"6.5.5","title":"PCI DSS 6.5.5 - Improper Error Handling"},"nist":{"control":"SI-11","priority":"P2","title":"SI-11: Error Handling","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-11"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"215","title":"CAPEC-215: Fuzzing and observing application log data/errors for application mapping","url":"https://capec.mitre.org/data/definitions/215.html"},"sansTop25":{"rank":0,"title":""}},"count":6,"dataFlowsCount":6,"remediationCount":0,"countWithFP":6,"vulnerabilities":[],"Findings":[{"finding":{"id":"e17f801b-76e1-4cb2-abf5-3326854a3ce7","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"f1df720a-9ed1-45d5-8bf5-9d253a07465b","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'ChatException' method could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"ChatException.printStackTrace","kind":"","file":"apps/showcase/src/main/java/org/apache/struts2/showcase/chat/ChatLoginAction.java","snippet":"e.printStackTrace();","line":55,"startLine":51,"endLine":60,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"38f47211-9e2c-4cde-855e-0ea633d9d955","file":"apps/showcase/src/main/java/org/apache/struts2/showcase/chat/ChatLoginAction.java","line":55,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"e255a81d-bd42-47bb-a41e-b43b0da3492e","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"3392463e-3363-46ba-a80a-daec86104f69","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'PortletServletResponse' method could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"PortletServletResponse.sendError","kind":"","file":"plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/servlet/JspServletWrapper.java","snippet":"response.sendError","line":393,"startLine":389,"endLine":398,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"faee32c5-9956-43f1-94db-a1bade4dbb57","file":"plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/servlet/JspServletWrapper.java","line":395,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"cdb030ed-bddb-4063-8c27-3aebe5db2319","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"ad257a9a-d2cb-4f78-8086-28fb036faad0","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'printStackTrace' method could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"se.printStackTrace","kind":"","file":"plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/servlet/JasperLoader.java","snippet":"se.printStackTrace();","line":120,"startLine":116,"endLine":125,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"c96e0a9f-c111-432c-8198-d992308e63f5","file":"plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/servlet/JasperLoader.java","line":120,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"a20a654b-cc40-4faa-ab06-cba31bdf749c","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"f12fb028-d37e-412d-97a9-766f2e2db082","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'PortletServletResponse' method could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"PortletServletResponse.sendError","kind":"","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandler.java","snippet":"response.sendError(code, e.getMessage());","line":97,"startLine":93,"endLine":102,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"267d4aeb-e6ac-4475-94c2-e34d883e54c3","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandler.java","line":97,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"71a0b63b-fcd1-41ab-9c6b-ca7589fb7ada","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"b2f2315b-24df-4f2b-9098-3fa8cf44fe0f","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'sendError' method of 'javax.servlet.ServletResponse' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"javax.servlet.ServletResponse.sendError","kind":"","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandler.java","snippet":"response.sendError(code, e.getMessage());","line":97,"startLine":93,"endLine":102,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"e7b7e705-e32c-4716-966e-2ecc9ed5897c","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandler.java","line":97,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"d1014731-6f81-4b1b-b662-a14151c68fd8","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"33142317-0943-491a-a7b2-6b05869e147b","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":20,"name":"Error Messages Information Exposure","engineId":101,"language":"Java*","sarif":"java-err-msg","sarifLevel":""},"description":"'sendError' method of 'javax.servlet.http.HttpServletResponse' object could be abused to reveal sensitive internal information.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"javax.servlet.http.HttpServletResponse.sendError","kind":"","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandler.java","snippet":"response.sendError(code, e.getMessage());","line":97,"startLine":93,"endLine":102,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"d1e09e13-20d6-42bc-a71a-ab5eba9d1316","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandler.java","line":97,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":4.205,"confidenceRating":10,"ageRating":0,"rating":3.3640000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":22,"sarif":"java-hidden-html","order":20,"name":"Hidden HTML Input","risk":"Medium","sarifLevel":"","severityRating":3.587,"description":"Hidden form inputs are often written into an HTML page by the web server when it serves that page to the client, and are not visible on the rendered web page. Because HTTP is essentially stateless, like cookies, hidden form inputs are one way that web applications can use to remember session data from one page request to the next. Because of poor coding practices, hidden fields often contain confidential information (such as product prices on an e-commerce site) that should be stored only in a back-end database","recommendation":["Sensitive information that may affect the application logic should be stored only in a back-end database"],"references":["https://www.owasp.org/index.php/Web_Parameter_Tampering"],"cwe":{"id":"CWE-472","title":"CWE-472: External Control of Assumed-Immutable Web Parameter","url":"https://cwe.mitre.org/data/definitions/472.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":27,"sarif":"java-insecure-transport","order":21,"name":"Insufficient Transport Layer Protection","risk":"Medium","sarifLevel":"","severityRating":5.433,"description":"Insufficient Transport Layer Protection occurs when sensitive data is transmitted over the plain-text networking protocol","recommendation":["Send sensitive information over the encrypted network protocols"],"references":["https://cwe.mitre.org/data/definitions/319.html"],"cwe":{"id":"CWE-319","title":"CWE-319: Cleartext Transmission of Sensitive Information","url":"https://cwe.mitre.org/data/definitions/319.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"164.312 (e)(2)(ii)","title":"164.312 (e)(2)(ii): Transmission Security: Encryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A6","title":"A6: Security Misconfiguration","url":"https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"337","title":"CAPEC-337: Insufficient Transport Layer Protection","url":"https://capec.mitre.org/data/definitions/337.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":31,"sarif":"java-regex-dos","order":22,"name":"Regex Denial of Service (ReDoS)","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time, affecting the availability of the application","recommendation":["Do not pass untrusted user input to functions that perform regular expression searches"],"references":["https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection (P1)","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"492","title":"CAPEC-492: Regular Expression Exponential Blowup","url":"https://capec.mitre.org/data/definitions/492.html"},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":32,"sarif":"java-sleep-dos","order":23,"name":"Sleep Denial of Service","risk":"Medium","sarifLevel":"","severityRating":3.3,"description":"Sleep Denial of Service is a Denial of Service attack, that exploits code flows where the application passes user-controlled input to Sleep functions (such as in loops). An attacker can then cause a program to hang for a very long time and affect the availability","recommendation":["Do not pass untrusted user input to functions that perform sleep or thread pauses"],"references":["https://cwe.mitre.org/data/definitions/400.html"],"cwe":{"id":"CWE-400","title":"CWE-400: Uncontrolled Resource Consumption","url":"https://cwe.mitre.org/data/definitions/400.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-5","priority":"P1","title":"SC-5: Denial of Service Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-5"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":20,"title":"CWE-400: Uncontrolled Resource Consumption"}},"count":1,"dataFlowsCount":1,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"f49a9524-c7ff-4abc-b2f1-d0e814cd47a2","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"9bef8f1d-8652-45e4-8d62-c5be4422c304","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":32,"name":"Sleep Denial of Service","engineId":101,"language":"Java*","sarif":"java-sleep-dos","sarifLevel":""},"description":"'sleep' method of 'java.lang.Thread' object could be abused to perform a Sleep Denial of Service attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.Thread.sleep","kind":"","file":"apps/showcase/src/main/java/org/apache/struts2/showcase/wait/LongProcessAction.java","snippet":"Thread.sleep(time);","line":35,"startLine":31,"endLine":40,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"b1826faf-ae76-4173-b438-590c9b2fce5e","file":"apps/showcase/src/main/java/org/apache/struts2/showcase/wait/LongProcessAction.java","line":34,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":3.3,"confidenceRating":10,"ageRating":0,"rating":2.64,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":33,"sarif":"java-trust-boundary","order":24,"name":"Trust Boundary Violation","risk":"Medium","sarifLevel":"","severityRating":4.871,"description":"The application mixes trusted and untrusted data in the same data structure or structured message. A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust boundary - to move from untrusted to trusted. A trust boundary violation occurs when a program blurs the line between what is trusted and what is untrusted. By combining trusted and untrusted data in the same data structure, it becomes easier for programmers to mistakenly trust unvalidated data","recommendation":["Proper input validation and output encoding should be used on data before moving it into trusted boundaries"],"references":["https://cwe.mitre.org/data/definitions/501.html"],"cwe":{"id":"CWE-501","title":"CWE-501: Trust Boundary Violation","url":"https://cwe.mitre.org/data/definitions/501.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":34,"sarif":"java-unsafe-reflection","order":25,"name":"Unsafe Reflection","risk":"Medium","sarifLevel":"","severityRating":4.871,"description":"The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code","recommendation":["Refactor your code to avoid using reflection","Do not use user-controlled inputs to select and load classes or code","Apply strict input validation by using allowlists or indirect selection to ensure that the user is only selecting allowable classes or code"],"references":["https://cwe.mitre.org/data/definitions/470.html"],"cwe":{"id":"CWE-470","title":"CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')","url":"https://cwe.mitre.org/data/definitions/470.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A4","title":"A4 - Insecure Design","url":"https://owasp.org/Top10/A04_2021-Insecure_Design/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":4,"dataFlowsCount":4,"remediationCount":0,"countWithFP":4,"vulnerabilities":[],"Findings":[{"finding":{"id":"91f86e15-73f0-4842-902d-4415feb3d4f2","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"d7de7a8b-6ae6-4219-aaee-83fe7519d994","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":34,"name":"Unsafe Reflection","engineId":101,"language":"Java*","sarif":"java-unsafe-reflection","sarifLevel":""},"description":"'loadClass' method of 'java.lang.ClassLoader' object could be abused to execute arbitrary code.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.ClassLoader.loadClass","kind":"","file":"core/src/main/java/com/opensymphony/xwork2/util/ClassLoaderUtil.java","snippet":"return Thread.currentThread().getContextClassLoader().loadClass(className);","line":171,"startLine":167,"endLine":176,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"b98520e5-8725-46c3-9234-6dda23a4dc33","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":8,"isNew":true,"rating":8.76923076923077}],"severityRating":4.871,"confidenceRating":10,"ageRating":0,"rating":3.8968000000000007,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"a73fdaa6-8aa7-42af-86e7-b2e628b85fb2","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"de2494b6-32d4-4334-9fd1-62607ea95e22","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":34,"name":"Unsafe Reflection","engineId":101,"language":"Java*","sarif":"java-unsafe-reflection","sarifLevel":""},"description":"'loadClass' method could be abused to execute arbitrary code.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"getClassLoader.loadClass","kind":"","file":"core/src/main/java/com/opensymphony/xwork2/util/ClassLoaderUtil.java","snippet":"return ClassLoaderUtil.class.getClassLoader().loadClass(className);","line":177,"startLine":173,"endLine":182,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"db404e91-f7d8-41af-a085-99e5d2d58dc9","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":8,"isNew":true,"rating":8.76923076923077}],"severityRating":4.871,"confidenceRating":10,"ageRating":0,"rating":3.8968000000000007,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"bfa2d633-3ae6-47e1-9655-f046c5fa269f","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"bc0b037d-2ece-4c99-8d43-df12c98ca29a","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":34,"name":"Unsafe Reflection","engineId":101,"language":"Java*","sarif":"java-unsafe-reflection","sarifLevel":""},"description":"'loadClass' method of 'java.lang.ClassLoader' object could be abused to execute arbitrary code.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.ClassLoader.loadClass","kind":"","file":"core/src/main/java/com/opensymphony/xwork2/util/ClassLoaderUtil.java","snippet":"return callingClass.getClassLoader().loadClass(className);","line":179,"startLine":175,"endLine":184,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"191e6fbd-4c16-44bb-9ca5-00640175a7bb","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":10,"isNew":true,"rating":7.923076923076923}],"severityRating":4.871,"confidenceRating":9,"ageRating":0,"rating":3.507120000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"48120f1b-77b9-49e3-81b0-c55850c6984a","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"bc2b0e9c-1087-417b-ba94-a56aacba300f","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":34,"name":"Unsafe Reflection","engineId":101,"language":"Java*","sarif":"java-unsafe-reflection","sarifLevel":""},"description":"'forName' method of 'java.lang.Class' object could be abused to execute arbitrary code.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Medium","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"java.lang.Class.forName","kind":"","file":"core/src/main/java/com/opensymphony/xwork2/util/ClassLoaderUtil.java","snippet":"return Class.forName(className);","line":174,"startLine":170,"endLine":179,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"95f146f2-2d8e-4fbc-88e1-55f8898ad615","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":10,"isNew":true,"rating":7.923076923076923}],"severityRating":4.871,"confidenceRating":9,"ageRating":0,"rating":3.507120000000001,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":44,"sarif":"java-sig-verify","order":26,"name":"Improper Verification of JWT Signature","risk":"Medium","sarifLevel":"","severityRating":4.356,"description":"The product does not verify, or incorrectly verifies, the cryptographic signature for data","recommendation":["Ensure that the signature of the JWT is properly verified for all supported algorithms"],"references":["https://cwe.mitre.org/data/definitions/347.html","https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_for_Java_Cheat_Sheet.html"],"cwe":{"id":"CWE-347","title":"CWE-347: Improper Verification of Cryptographic Signature","url":"https://cwe.mitre.org/data/definitions/347.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A2","title":"A2: Broken Authentication","url":"https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":56,"sarif":"java-weak-crypto","order":27,"name":"Insecure Cryptographic Algorithm","risk":"Medium","sarifLevel":"","severityRating":4.653,"description":"The application uses a broken or risky cryptographic algorithm to protect sensitive information. Such insecure cryptography may result in the exposure of sensitive information. The use of broken or risky cryptographic algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has been protected. Well-known techniques may exist to break the algorithm","recommendation":["Use strong and up-to-date algorithm for a cryptographic process. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations","Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong"],"references":["https://cwe.mitre.org/data/definitions/327.html"],"cwe":{"id":"CWE-327","title":"CWE-327: Use of a Broken or Risky Cryptographic Algorithm","url":"https://cwe.mitre.org/data/definitions/327.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":58,"sarif":"java-weak-rsa","order":28,"name":"Weak RSA Encryption","risk":"Medium","sarifLevel":"","severityRating":4.871,"description":"This vulnerability occurs when the Optimal Asymmetric Encryption Padding (OAEP), which formats the plaintext before encryption to make it less predictable, is not incorporated with the RSA algorithm, making the encryption weak and compromising the integrity and confidentiality","recommendation":["Add the OAEP scheme with the RSA encryption algorithm"],"references":["https://cwe.mitre.org/data/definitions/780.html"],"cwe":{"id":"CWE-780","title":"CWE-780: Use of RSA Algorithm without OAEP","url":"https://cwe.mitre.org/data/definitions/780.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":61,"sarif":"java-predictable-seed","order":29,"name":"Predictable Seed","risk":"Medium","sarifLevel":"","severityRating":6.309,"description":"A Pseudo-Random Number Generator (PRNG) cannot create entropy, the output is determined by the seed provided as input, and if used incorrectly, it can bypass the protection mechanism. The correct management of seeds is critical to the secure operation of the PRNG, since it relies on cryptographically secure and unique seeds for entropy","recommendation":["Do not reuse PRNG seeds","Use a unique and cryptographically secure seed","The seed must be kept secret and not easily guessed"],"references":["https://cwe.mitre.org/data/definitions/335.html"],"cwe":{"id":"CWE-335","title":"CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)","url":"https://cwe.mitre.org/data/definitions/335.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":26,"sarif":"java-weak-enc","order":30,"name":"Weak Encryption Strength","risk":"Low","sarifLevel":"","severityRating":3.268,"description":"A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources. The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information. The use of a non-standard algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has been protected. Well-known techniques may exist to break the algorithm","recommendation":["When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations","Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong"],"references":["https://www.owasp.org/index.php/Testing_for_Weak_Encryption_(OTG-CRYPST-004)"],"cwe":{"id":"CWE-326","title":"CWE-326: Inadequate Encryption Strength","url":"https://cwe.mitre.org/data/definitions/326.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":28,"sarif":"java-redirect","order":31,"name":"Unvalidated/Open Redirect","risk":"Low","sarifLevel":"","severityRating":3.107,"description":"Open Redirect vulnerability occurs when untrusted user input is passed to HTTP location redirect functions or properties. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts may have a more trustworthy appearance","recommendation":["Do not pass untrusted user input to location redirection functions or properties"],"references":["https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"],"cwe":{"id":"CWE-601","title":"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')","url":"https://cwe.mitre.org/data/definitions/601.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"194","title":"CAPEC-194: Fake the Source of Data","url":"https://capec.mitre.org/data/definitions/194.html"},"sansTop25":{"rank":0,"title":""}},"count":1,"dataFlowsCount":2,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"c728d2c2-c73a-4a44-b06b-c231a52e2af4","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"f0bf6d5d-8a78-4299-a00e-deb6ce595463","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":28,"name":"Unvalidated/Open Redirect","engineId":101,"language":"Java*","sarif":"java-redirect","sarifLevel":""},"description":"'setHeader' method of 'javax.servlet.http.HttpServletResponse' object could be abused to perform a Site Redirection attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"javax.servlet.http.HttpServletResponse.setHeader","kind":"","file":"plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java","snippet":"response.setHeader(\"Location\", url);","line":117,"startLine":113,"endLine":122,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"4a9af43c-b73c-4803-8e24-1aa24e34b5a4","file":"plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java","line":109,"stepsCount":7,"isNew":true,"rating":8.76923076923077},{"id":"583d7651-68a5-4955-84c1-0b24c74e0628","file":"plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java","line":109,"stepsCount":7,"isNew":true,"rating":8.76923076923077}],"severityRating":3.107,"confidenceRating":10,"ageRating":0,"rating":2.4856000000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":29,"sarif":"java-log-forge","order":32,"name":"Log Forging","risk":"Low","sarifLevel":"","severityRating":3.097,"description":"Log Forging vulnerability occurs when an application either does not neutralize (sanitize) or it incorrectly neutralizes output that is written to logs. This can allow an attacker to forge log entries or inject malicious content into log records","recommendation":["Validating and encoding all input that could be outputed in the log file"],"references":["https://www.owasp.org/index.php/Log_Injection"],"cwe":{"id":"CWE-117","title":"CWE-117: Improper Output Neutralization for Logs","url":"https://cwe.mitre.org/data/definitions/117.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A9","title":"A9 - Security Logging and Monitoring Failures","url":"https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"},"capec":{"id":"93","title":"CAPEC-93: Log Injection-Tampering-Forging","url":"https://capec.mitre.org/data/definitions/93.html"},"sansTop25":{"rank":0,"title":""}},"count":8,"dataFlowsCount":11,"remediationCount":0,"countWithFP":8,"vulnerabilities":[],"Findings":[{"finding":{"id":"9d05b808-e464-4772-88a7-a59da03ce0a1","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"460a721a-9457-4779-9707-340e6b2d74df","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'error' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.error","kind":"","file":"core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java","snippet":"LOG.error(\"Could not find action or result: {}\", uri, e);","line":695,"startLine":691,"endLine":700,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"dc3ed9e7-9a0c-4c15-ba10-0efa83dfeed2","file":"core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java","line":692,"stepsCount":4,"isNew":true,"rating":8.76923076923077},{"id":"8daf2b3c-305a-4011-a981-aaa0f634f6be","file":"core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java","line":692,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"402f1fe9-c055-4853-a904-a4ab5c598e92","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"39387525-c382-4664-8483-bc238b77c307","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'error' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.error","kind":"","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","snippet":"LOG.error(\"Class '\" + clazz + \"' not found...\",e);","line":106,"startLine":102,"endLine":110,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"38f9fc3d-9fab-47e0-9d56-583aa567c888","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":7,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"619f839c-fbd1-48ec-81d6-78c34fa80eca","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"3e4670fc-c786-47d3-910d-1b7f14e2eee4","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'warn' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.warn","kind":"","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","snippet":"LOG.warn(\"Decider [{}] encountered an error while decide adding element [{}], element will be ignored, it will not appeared in subseted iterator\",","line":165,"startLine":161,"endLine":170,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"2f034dd4-eb4b-433d-bad3-120e7d3a737c","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","line":65,"stepsCount":19,"isNew":true,"rating":7.0769230769230775},{"id":"e239dee7-d793-414f-8087-82f9bdb21453","file":"core/src/main/java/org/apache/struts2/util/SubsetIteratorFilter.java","line":65,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"7c3974eb-8b32-4f12-9a59-b93907337f7e","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"733759c0-53b4-4afa-97af-7d0be537bfa3","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'warn' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.warn","kind":"","file":"core/src/main/java/org/apache/struts2/util/SortIteratorFilter.java","snippet":"LOG.warn(\"Cannot create SortIterator for source: {}\", source);","line":64,"startLine":60,"endLine":69,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"2585cf88-71b2-40fc-af75-4997749b4b20","file":"core/src/main/java/org/apache/struts2/util/SortIteratorFilter.java","line":58,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"8aa3a2e0-9857-4662-98e3-202e7325f733","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"314f270f-0c58-4bec-9d2a-06c2e41a100b","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'warn' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.warn","kind":"","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java","snippet":"LOG.warn(\"Invalid If-Modified-Since header value: '{}', ignoring\", request.getHeader(\"If-Modified-Since\"));","line":254,"startLine":250,"endLine":259,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"41b0c48f-bba7-4bfa-aada-50486da57b60","file":"core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java","line":254,"stepsCount":2,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"125a4da1-27f7-4e2e-bba3-45eb940874b8","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"a84108b6-e220-4f97-bb70-0d87083f7abc","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'warn' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.warn","kind":"","file":"core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java","snippet":"LOG.warn(\"Could not find action or result: {}\", uri, e);","line":697,"startLine":693,"endLine":702,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"66c530f5-a9c2-47ba-a286-8332e4bf8cb6","file":"core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java","line":692,"stepsCount":4,"isNew":true,"rating":8.76923076923077},{"id":"1063e702-d08e-4d61-b92e-ca6d13fa12f3","file":"core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java","line":692,"stepsCount":4,"isNew":true,"rating":8.76923076923077}],"severityRating":3.097,"confidenceRating":10,"ageRating":0,"rating":2.4776000000000002,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"bb40b135-b05a-4c4d-ad66-553871110889","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"aeb19a17-663c-4897-9761-6f1190e29585","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'error' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.error","kind":"","file":"plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerDecoratorServlet.java","snippet":"LOG.error(msg, x);","line":188,"startLine":184,"endLine":193,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"bb0f38d9-1be5-43fe-9b8b-71049c66eb6e","file":"plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerDecoratorServlet.java","line":184,"stepsCount":12,"isNew":true,"rating":7.923076923076923}],"severityRating":3.097,"confidenceRating":9,"ageRating":0,"rating":2.2298400000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}},{"finding":{"id":"44b7c24b-3bda-41d4-ace6-f5e698f76c1d","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"524c958f-cd9d-499c-9cfc-c42de004d99e","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":29,"name":"Log Forging","engineId":101,"language":"Java*","sarif":"java-log-forge","sarifLevel":""},"description":"'error' method of 'org.apache.logging.log4j.Logger' object could be abused to perform a Log Injection attack. User input reached a Log4j sink.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"org.apache.logging.log4j.Logger.error","kind":"","file":"core/src/main/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManager.java","snippet":"LOG.error(\"Caught exception while loading file {}\", fileName, e);","line":340,"startLine":336,"endLine":345,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"765c9c2e-b38e-45ec-a255-352f90d51e57","file":"plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java","line":80,"stepsCount":15,"isNew":true,"rating":7.923076923076923}],"severityRating":3.097,"confidenceRating":9,"ageRating":0,"rating":2.2298400000000003,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":48,"sarif":"java-log-sensitiveinformation","order":33,"name":"Log Sensitive Information","risk":"Low","sarifLevel":"","severityRating":2.984,"description":"Log Sensitive Information vulnerability occurs when an application writes sensitive information such as password into logs. This allows an attacker to exploit such information from these logs","recommendation":["Avoid writing sensitive information into logs","Enforce proper logging level control"],"references":["https://cwe.mitre.org/data/definitions/532.html"],"cwe":{"id":"CWE-532","title":"CWE-532: Insertion of Sensitive Information into Log File","url":"https://cwe.mitre.org/data/definitions/532.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"A10","title":"A10: Insufficient Logging & Monitoring","url":"https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring"},"owasp2021":{"index":"A9","title":"A9 - Security Logging and Monitoring Failures","url":"https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"},"capec":{"id":"215","title":"CAPEC-215: Fuzzing and observing application log data/errors for application mapping","url":"https://capec.mitre.org/data/definitions/215.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":30,"sarif":"java-weak-hash","order":34,"name":"Weak Hash Strength","risk":"Low","sarifLevel":"","severityRating":2.987,"description":"The application generates a hash but it uses a scheme that does not provide a sufficient level of computational effort that would make cracking attacks infeasible or expensive","recommendation":["Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (\"stretching\") or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5"],"references":["https://cwe.mitre.org/data/definitions/328.html"],"cwe":{"id":"CWE-328","title":"CWE-328: Use of Weak Hash","url":"https://cwe.mitre.org/data/definitions/328.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":55,"sarif":"java-crypto-missing-step","order":35,"name":"Missing Cryptographic Step","risk":"Low","sarifLevel":"","severityRating":2.143,"description":"The application does not implement or incorrectly implements a necessary step in a cryptographic process. Such omission or error can lead to security vulnerabilities and weaken the overall effectiveness of the cryptographic process","recommendation":["Check if all the necessary steps for a cryptographic process have been implemented"],"references":["https://cwe.mitre.org/data/definitions/325.html"],"cwe":{"id":"CWE-325","title":"CWE-325: Missing Cryptographic Step","url":"https://cwe.mitre.org/data/definitions/325.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":38,"sarif":"java-http-only","order":36,"name":"Cookie Without 'HttpOnly' Flag","risk":"Low","sarifLevel":"","severityRating":0.262,"description":"The application uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag. The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS","recommendation":["Leverage the HttpOnly flag when setting a sensitive cookie in a response"],"references":["https://owasp.org/www-community/HttpOnly"],"cwe":{"id":"CWE-1004","title":"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag","url":"https://cwe.mitre.org/data/definitions/1004.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A5","title":"A5 - Security Misconfiguration","url":"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":39,"sarif":"java-header-inj","order":37,"name":"HTTP Header Injection","risk":"Low","sarifLevel":"","severityRating":2.969,"description":"HTTP header injection is a general class of web application security vulnerability which occurs when HTTP headers are dynamically generated based on user input. Header injection in HTTP responses can allow for HTTP response splitting, Session fixation via the Set-Cookie header, cross-site scripting (XSS), and malicious redirect attacks via the location header","recommendation":["Do not pass untrusted user input to functions that affect response header content"],"references":["https://cwe.mitre.org/data/definitions/113.html"],"cwe":{"id":"CWE-113","title":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')","url":"https://cwe.mitre.org/data/definitions/113.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"10.b","title":"10.b - Input Data Validation (Level 1 Implementation)"},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":1,"dataFlowsCount":2,"remediationCount":0,"countWithFP":1,"vulnerabilities":[],"Findings":[{"finding":{"id":"2d744926-cd79-4c09-8e37-c7a1aea8e5cd","scanId":"628d3e68-f403-4eb9-9b83-4714528d14f7","snapshotId":"aa0e1209-47c4-4675-a2db-beba23747898","projectId":"613eb12c-9b8f-4966-9254-991cdba4c076","appId":"661d9473-c99c-40b4-87e2-33fb41bff5cd","type":{"id":39,"name":"HTTP Header Injection","engineId":101,"language":"Java*","sarif":"java-header-inj","sarifLevel":""},"description":"'setHeader' method of 'javax.servlet.http.HttpServletResponse' object could be abused to perform a HTTP Header Injection attack.","createdTime":"2023-12-27T12:56:04.536Z","isNew":true,"severity":"Low","baseline":true,"hasRemediation":false,"suppressed":false,"suppressedBy":"","suppressionTime":"0001-01-01T00:00:00Z","suppressionMessage":"","reviewed":false,"sharedStep":{"name":"javax.servlet.http.HttpServletResponse.setHeader","kind":"","file":"plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java","snippet":"response.setHeader(\"Location\", url);","line":117,"startLine":113,"endLine":122,"lineBlame":{"commitId":"","file":"","line":0}},"dataFlows":[{"id":"c13b74b4-12c1-4b1b-85bc-e316b231175c","file":"plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java","line":109,"stepsCount":7,"isNew":true,"rating":8.76923076923077},{"id":"7ca372e5-98ce-427a-9f0c-67fe2e0a4886","file":"plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java","line":109,"stepsCount":7,"isNew":true,"rating":8.76923076923077}],"severityRating":2.969,"confidenceRating":10,"ageRating":0,"rating":2.3752,"almIssues":{"jira":{"issueId":"","project":""},"azure":{"workItemId":0,"project":""},"jiraPlatform":{"issueStatus":"","issueId":""}},"comments":[]}}]},{"type":{"id":40,"sarif":"java-system-properties","order":38,"name":"System Properties Change","risk":"Low","sarifLevel":"","severityRating":2.381,"description":"Intentional or unintentional change of configuration from an actor that is not explicitly authorized to have access to that configuration","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/20.html"],"cwe":{"id":"CWE-15","title":"CWE-15: External Control of System or Configuration Setting","url":"https://cwe.mitre.org/data/definitions/15.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":3,"title":"CWE-20: Improper Input Validation"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":41,"sarif":"java-system-properties-disc","order":39,"name":"System Properties Disclosure","risk":"Low","sarifLevel":"","severityRating":2.318,"description":"An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information. An information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. An attacker can also cause errors to occur by submitting unusual requests to the web application. The response to these errors can reveal detailed system information, deny service, cause security mechanisms to fail, and crash the server. An attacker can use error messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. An application may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism","recommendation":["Production applications should never use methods that generate internal details such as stack traces and error messages unless that information is directly committed to a log that is not viewable by the end user"],"references":["https://cwe.mitre.org/data/definitions/200.html","https://cwe.mitre.org/data/definitions/497.html"],"cwe":{"id":"CWE-497","title":"CWE-497: Exposure of System Data to an Unauthorized Control Sphere","url":"https://cwe.mitre.org/data/definitions/497.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A1","title":"A1 - Broken Access Control","url":"https://owasp.org/Top10/A01_2021-Broken_Access_Control/"},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":42,"sarif":"java-arb-server-conn","order":40,"name":"Arbitrary Server Connection","risk":"Low","sarifLevel":"","severityRating":0,"description":"Improper use of some service or database access functions could result in arbitrary server / database connection. Arbitrary server / database connection could further result in arbitrary file download, sensitive file disclosure, and in some cases even command execution","recommendation":["Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does"],"references":["https://cwe.mitre.org/data/definitions/941.html"],"cwe":{"id":"CWE-941","title":"CWE-941: Incorrectly Specified Destination in a Communication Channel","url":"https://cwe.mitre.org/data/definitions/941.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":45,"sarif":"java-mail-relay","order":41,"name":"Mail Relay","risk":"Low","sarifLevel":"","severityRating":2.381,"description":"Mail relay vulnerability occurs when unfiltered user input is used as an argument to mail message objects. Successful mail relay attack can result in sending arbitrary e-mail messages to recipients who will think that mail is originated from trusted source","recommendation":["Escape CR and LF character sequences"],"references":["https://www.owasp.org/index.php/Testing_for_IMAP/SMTP_Injection_(OTG-INPVAL-011)"],"cwe":{"id":"CWE-20","title":"CWE-20: Improper Input Validation","url":"https://cwe.mitre.org/data/definitions/20.html"},"pcidss":{"section":"","title":""},"nist":{"control":"SI-10","priority":"P1","title":"SI-10: Information Input Validation","url":"https://nvd.nist.gov/800-53/Rev5/control/SI-10"},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"A3","title":"A3 - Injection","url":"https://owasp.org/Top10/A03_2021-Injection/"},"capec":{"id":"134","title":"CAPEC-134: Email Injection","url":"https://capec.mitre.org/data/definitions/134.html"},"sansTop25":{"rank":3,"title":"CWE-20: Improper Input Validation"}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":57,"sarif":"java-improper-cert-valid","order":42,"name":"Improper Certificate Validation","risk":"Low","sarifLevel":"","severityRating":2.538,"description":"This vulnerability occurs when the hostname is not properly checked in the certificate to ensure that it is associated with the originally requested website in SSL/TLS connections. It may allow an attacker to impersonate a trusted host, performing spoofing, redirection and Man-in-the-middle attacks","recommendation":["Check the hostname in the certificate to ensure it comes from the desired host","Validate the hostname along with all the properties before the certificate is pinned"],"references":["https://cwe.mitre.org/data/definitions/297.html"],"cwe":{"id":"CWE-297","title":"CWE-297: Improper Validation of Certificate with Host Mismatch","url":"https://cwe.mitre.org/data/definitions/297.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"},"owasp2021":{"index":"A7","title":"A7 - Identification and Authentication Failures","url":"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"},"capec":{"id":"475","title":"CAPEC-475: Signature Spoofing by Improper Validation","url":"https://capec.mitre.org/data/definitions/475.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":60,"sarif":"java-weak-iv","order":43,"name":"Weak Initialization Vector","risk":"Low","sarifLevel":"","severityRating":2.25,"description":"The application uses an Initialization Vector (IV) in a cryptographic operation but does not generate an unpredictable unique IV. A predictable Initialization Vector can compromise the encryption operation and leak information about the data","recommendation":["Use a securely-random IV generated by SecureRandom"],"references":["https://cwe.mitre.org/data/definitions/1204.html"],"cwe":{"id":"CWE-1204","title":"CWE-1204: Generation of Weak Initialization Vector (IV)","url":"https://cwe.mitre.org/data/definitions/1204.html"},"pcidss":{"section":"6.5.3","title":"PCI DSS 6.5.3 - Insecure Cryptographic Storage"},"nist":{"control":"SC-13","priority":"P1","title":"SC-13: Cryptographic Protection","url":"https://nvd.nist.gov/800-53/Rev5/control/SC-13"},"hipaa":{"control":"164.312 (a)(2)(iv)","title":"164.312 (a)(2)(iv): Access Control: Encryption and Decryption"},"hitrust":{"control":"","title":""},"owasp":{"index":"A3","title":"A3: Sensitive Data Exposure","url":"https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure"},"owasp2021":{"index":"A2","title":"A2 - Cryptographic Failures","url":"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"},"capec":{"id":"97","title":"CAPEC-97: Cryptanalysis","url":"https://capec.mitre.org/data/definitions/97.html"},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]},{"type":{"id":43,"sarif":"java-misc","order":44,"name":"Miscellaneous Dangerous Functions","risk":"Medium","sarifLevel":"","severityRating":4.653,"description":"Miscellaneous dangerous functions are functions that could introduce a vulnerability of an unpredictable security impact if they are used incorrectly. Functions like LoadLibrary or printStackTrace could result in arbitrary code execution or information disclosure","recommendation":["Avoid use of potentially dangerous or depreciated functions"],"references":["https://cwe.mitre.org/data/definitions/676.html"],"cwe":{"id":"CWE-676","title":"CWE-676: Use of Potentially Dangerous Function","url":"https://cwe.mitre.org/data/definitions/676.html"},"pcidss":{"section":"","title":""},"nist":{"control":"","priority":"","title":"","url":""},"hipaa":{"control":"","title":""},"hitrust":{"control":"","title":""},"owasp":{"index":"","title":"","url":""},"owasp2021":{"index":"","title":"","url":""},"capec":{"id":"","title":"","url":""},"sansTop25":{"rank":0,"title":""}},"count":0,"dataFlowsCount":0,"remediationCount":0,"countWithFP":0,"vulnerabilities":[],"Findings":[]}]}],"parameters":{"target":{"type":"remote","source":"628d3e68-f403-4eb9-9b83-4714528d14f7","path":"/targets/local/9896fbdd-a064-44d6-83e4-ca0a67577c9e/628d3e68-f403-4eb9-9b83-4714528d14f7/"},"incremental":false,"ignoreStoredFP":true,"almTrigger":"","emailTrigger":"","slackTrigger":"","exclusions":["/bin/","/build/","/dist/","/vendor/","/out/","/release/","/target/","/test(s?)/","/__test(s?)__/","/__spec(s?)__/","\\.test\\.(js|jsx|xsjx)","\\.spec\\.(js|jsx|xsjx)","/e2e/","/cypress/","/node_modules/","/locales/","/\\.vscode/","/\\.idea/","/\\.git/","/\\.github/","/lib/","package-info\\.java","module-info\\.java","/\\.mvn/"],"engines":[8,101],"engineParams":[{"engineId":8,"trackedInputs":["document.location","document.cookie","document.referrer","document.URL","document.documentURI","document.URI","navigator.userAgent","location.search","document.forms","window.location","get_value()","get_valueWithLiterals()","get_valueWithPromptAndLiterals()","prompt()","getValue()","getUriParameters()","$CurrentPage.parameters","$Request","responseText","header.linkname"],"excludedVulnTypes":[],"depth":{"maxFunctionDepth":8,"maxVariableTrack":15},"customFilters":[],"customRules":[],"severityLevels":[{"vulnTypeId":5,"severity":"High"},{"vulnTypeId":0,"severity":"High"},{"vulnTypeId":3,"severity":"High"},{"vulnTypeId":4,"severity":"High"},{"vulnTypeId":12,"severity":"High"},{"vulnTypeId":1,"severity":"High"},{"vulnTypeId":2,"severity":"High"},{"vulnTypeId":16,"severity":"Medium"},{"vulnTypeId":14,"severity":"Medium"},{"vulnTypeId":15,"severity":"Medium"},{"vulnTypeId":11,"severity":"Medium"},{"vulnTypeId":8,"severity":"Low"},{"vulnTypeId":10,"severity":"Low"},{"vulnTypeId":7,"severity":"Low"},{"vulnTypeId":6,"severity":"Low"},{"vulnTypeId":13,"severity":"Low"},{"vulnTypeId":9,"severity":"Low"},{"vulnTypeId":17,"severity":"Medium"},{"vulnTypeId":18,"severity":"High"},{"vulnTypeId":19,"severity":"Medium"}]},{"engineId":101,"trackedInputs":[],"excludedVulnTypes":[],"depth":{"maxFunctionDepth":12,"maxVariableTrack":20},"customFilters":[],"customRules":[],"severityLevels":[{"vulnTypeId":1,"severity":"High"},{"vulnTypeId":2,"severity":"High"},{"vulnTypeId":6,"severity":"High"},{"vulnTypeId":46,"severity":"High"},{"vulnTypeId":51,"severity":"High"},{"vulnTypeId":52,"severity":"High"},{"vulnTypeId":47,"severity":"High"},{"vulnTypeId":53,"severity":"High"},{"vulnTypeId":8,"severity":"High"},{"vulnTypeId":9,"severity":"High"},{"vulnTypeId":10,"severity":"High"},{"vulnTypeId":59,"severity":"High"},{"vulnTypeId":54,"severity":"Medium"},{"vulnTypeId":49,"severity":"Medium"},{"vulnTypeId":50,"severity":"Medium"},{"vulnTypeId":11,"severity":"Medium"},{"vulnTypeId":12,"severity":"Medium"},{"vulnTypeId":13,"severity":"Medium"},{"vulnTypeId":14,"severity":"Medium"},{"vulnTypeId":20,"severity":"Medium"},{"vulnTypeId":22,"severity":"Medium"},{"vulnTypeId":27,"severity":"Medium"},{"vulnTypeId":31,"severity":"Medium"},{"vulnTypeId":32,"severity":"Medium"},{"vulnTypeId":33,"severity":"Medium"},{"vulnTypeId":34,"severity":"Medium"},{"vulnTypeId":44,"severity":"Medium"},{"vulnTypeId":56,"severity":"Medium"},{"vulnTypeId":58,"severity":"Medium"},{"vulnTypeId":61,"severity":"Medium"},{"vulnTypeId":26,"severity":"Low"},{"vulnTypeId":28,"severity":"Low"},{"vulnTypeId":29,"severity":"Low"},{"vulnTypeId":48,"severity":"Low"},{"vulnTypeId":30,"severity":"Low"},{"vulnTypeId":55,"severity":"Low"},{"vulnTypeId":38,"severity":"Low"},{"vulnTypeId":39,"severity":"Low"},{"vulnTypeId":40,"severity":"Low"},{"vulnTypeId":41,"severity":"Low"},{"vulnTypeId":42,"severity":"Low"},{"vulnTypeId":45,"severity":"Low"},{"vulnTypeId":57,"severity":"Low"},{"vulnTypeId":60,"severity":"Low"},{"vulnTypeId":43,"severity":"Medium"}]}]},"stats":{"duration":"00:03:28","totalVulnerabilities":27,"totalFiles":1775,"testedFiles":1772,"totalLines":115564,"testedLines":114762,"critical":0,"high":2,"medium":15,"low":10,"engines":[{"id":0,"language":"JavaScript / Node.js","status":"Finished","statusMessage":"","duration":"00:03:36","totalFiles":271,"testedFiles":271,"totalLines":8100,"testedLines":8100,"timeoutFiles":null},{"id":1,"language":"Java*","status":"Finished","statusMessage":"","duration":"00:03:36","totalFiles":1504,"testedFiles":1503,"totalLines":0,"testedLines":0,"timeoutFiles":["/home/ubuntu/whitesource/struts/plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/JspC.java"]}],"resources":{"memory":4,"cpu":2,"os":"linux"}},"metadata":{"projectName":"struts_master","applicationName":"apache"},"markedForDeletion":false,"createdTime":"2023-12-27T12:52:25.56Z","startTime":"2023-12-27T12:52:25.56Z","expiration":"2033-12-24T12:52:25.56Z","lastUpdateTime":"2023-12-27T12:56:04.536Z","createdBy":"am@armorcode.io","groupVisibility":null,"logCtx":"44825ca4e1b2d370bbda52c76bcf998ad8914535fa6d8f","versionFlag":"23.11.2.3 (Java), 23.11.2.219 (Java), 23.11.2.3 (JavaScript)","activeCliFeatures":null,"scm":{"commit":{"Id":"d90bee49b5d521c591084111a4cba76aef3b7ea3","Time":"2023-01-04T16:17:58Z"},"branch":{"name":"master","upstream":{"remoteName":"origin","branch":"master","isPushed":true},"type":"base"},"remotes":[{"name":"origin","type":"github","url":{"scheme":"https","host":"github.com","port":0,"path":"/apache/struts"},"hasCommit":true,"defaultBranch":""}]}}]