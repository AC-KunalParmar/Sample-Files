{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Contrast Scan",
          "organization": "Contrast Security, Inc.",
          "version": "pkg: null, engine: null, policy: null",
          "informationUri": "https://www.contrastsecurity.com"
        }
      },
      "artifacts": [],
      "results": [
        {
          "ruleId": "reflected-xss",
          "level": "error",
          "message": {
            "text": "Cross-Site Scripting in MovieDto)>.$$epFlow() reachable from MovieController.createMovie()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "snippet": {
                    "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  $stack0 = m.getId();    // Java line 39\n  return $stack0;    // Java line 39\n  ...\n}"
                  }
                },
                "contextRegion": {
                  "snippet": {}
                }
              }
            }
          ],
          "partialFingerprints": {
            "GITHUB_SOURCECODE_LSH/v1": "9ab5afea5464c0d9:1-1950392ddbf812af:1-649ebf02ab624ccc:1-4fc25a2db9fec9e8:1-4a29cc187ad48773:1-64ed8e6526b79cf4:1-13db8c734146ff90:1"
          },
          "codeFlows": [
            {
              "message": {
                "text": "Untrusted data flow from MovieController.java:35 to MovieController.java:39 via variable `$stack0`"
              },
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 35,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(**@RequestBody MovieDto md**) {\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(**@RequestBody MovieDto md**) {",
                                "  ...",
                                "}"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 36,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  $stack0 = new Movie();    // Java line 36\n  m = $stack0;    // Java line 36\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = new com.kalavit.javulna.model.Movie;    // Java line 36",
                                "m = $stack0;    // Java line 36"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ],
                        "message": {
                          "text": "md"
                        }
                      },
                      "state": {
                        "md": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 37,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  md.toMovie(m);    // Java line 37\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "virtualinvoke md.<com.kalavit.javulna.dto.MovieDto: void toMovie(com.kalavit.javulna.model.Movie)>(m);    // Java line 37"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 36,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  $stack0 = this.id;    // Java line 36\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieDto.java:36' in the method 'MovieDto.toMovie()' to variable '$stack0'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.dto.MovieDto:java.lang.String id>;    // Java line 36"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "$stack0"
                        }
                      },
                      "state": {
                        "$stack0": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 37,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  $stack1 = this.id;    // Java line 37\n  m.setId($stack1);    // Java line 37\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieDto.java:37' in the method 'MovieDto.toMovie()' to variable 'id'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = this.<com.kalavit.javulna.dto.MovieDto:java.lang.String id>;    // Java line 37",
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setId(java.lang.String)>($stack1);    // Java line 37"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/BaseEntity.java"
                          },
                          "region": {
                            "startLine": 48,
                            "snippet": {
                              "rendered": {
                                "text": "public void setId(String id) {\n  ...\n  this.id = id;    // Java line 48\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "this.<com.kalavit.javulna.model.BaseEntity:java.lang.String id> = id;    // Java line 48"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "BaseEntity.setId()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.BaseEntity.setId(java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "@callsite0"
                        }
                      },
                      "state": {
                        "@callsite0": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/BaseEntity.java"
                          },
                          "region": {
                            "startLine": 49,
                            "snippet": {
                              "rendered": {
                                "text": "public void setId(String id) {\n  ...\n  return;    // Java line 49\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 49"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "BaseEntity.setId()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.BaseEntity.setId(java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "@callsite0"
                        }
                      },
                      "state": {
                        "@callsite0": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 37,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  m.setId($stack1);    // Java line 37\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setId(java.lang.String)>($stack1);    // Java line 37"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "@callsite1"
                        }
                      },
                      "state": {
                        "@callsite1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 39,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  $stack1 = this.description;    // Java line 39\n  m.setDescription($stack1);    // Java line 39\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieDto.java:39' in the method 'MovieDto.toMovie()' to variable 'this'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = this.<com.kalavit.javulna.dto.MovieDto:java.lang.String description>;    // Java line 39",
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setDescription(java.lang.String)>($stack1);    // Java line 39"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/Movie.java"
                          },
                          "region": {
                            "startLine": 35,
                            "snippet": {
                              "rendered": {
                                "text": "public void setDescription(String description) {\n  ...\n  this.description = description;    // Java line 35\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'Movie.java:35' in the method 'Movie.setDescription()' to variable 'this'"
                            },
                            "properties": {
                              "ir": [
                                "this.<com.kalavit.javulna.model.Movie:java.lang.String description> = description;    // Java line 35"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "Movie.setDescription()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.Movie.setDescription(java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/Movie.java"
                          },
                          "region": {
                            "startLine": 36,
                            "snippet": {
                              "rendered": {
                                "text": "public void setDescription(String description) {\n  ...\n  return;    // Java line 36\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 36"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "Movie.setDescription()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.Movie.setDescription(java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 39,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  m.setDescription($stack1);    // Java line 39\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setDescription(java.lang.String)>($stack1);    // Java line 39"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "@callsite1"
                        }
                      },
                      "state": {
                        "@callsite1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 40,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  $stack1 = this.genre;    // Java line 40\n  m.setGenre($stack1);    // Java line 40\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieDto.java:40' in the method 'MovieDto.toMovie()' to variable 'this'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = this.<com.kalavit.javulna.dto.MovieDto:java.lang.String genre>;    // Java line 40",
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setGenre(java.lang.String)>($stack1);    // Java line 40"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/Movie.java"
                          },
                          "region": {
                            "startLine": 43,
                            "snippet": {
                              "rendered": {
                                "text": "public void setGenre(String genre) {\n  ...\n  this.genre = genre;    // Java line 43\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'Movie.java:43' in the method 'Movie.setGenre()' to variable 'this'"
                            },
                            "properties": {
                              "ir": [
                                "this.<com.kalavit.javulna.model.Movie:java.lang.String genre> = genre;    // Java line 43"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "Movie.setGenre()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.Movie.setGenre(java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/Movie.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "public void setGenre(String genre) {\n  ...\n  return;    // Java line 44\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 44"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "Movie.setGenre()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.Movie.setGenre(java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 40,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  m.setGenre($stack1);    // Java line 40\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setGenre(java.lang.String)>($stack1);    // Java line 40"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "@callsite1"
                        }
                      },
                      "state": {
                        "@callsite1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 41,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  $stack1 = this.title;    // Java line 41\n  m.setTitle($stack1);    // Java line 41\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieDto.java:41' in the method 'MovieDto.toMovie()' to variable 'this'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = this.<com.kalavit.javulna.dto.MovieDto:java.lang.String title>;    // Java line 41",
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setTitle(java.lang.String)>($stack1);    // Java line 41"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/Movie.java"
                          },
                          "region": {
                            "startLine": 27,
                            "snippet": {
                              "rendered": {
                                "text": "public void setTitle(String title) {\n  ...\n  this.title = title;    // Java line 27\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'Movie.java:27' in the method 'Movie.setTitle()' to variable 'this'"
                            },
                            "properties": {
                              "ir": [
                                "this.<com.kalavit.javulna.model.Movie:java.lang.String title> = title;    // Java line 27"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "Movie.setTitle()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.Movie.setTitle(java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/Movie.java"
                          },
                          "region": {
                            "startLine": 28,
                            "snippet": {
                              "rendered": {
                                "text": "public void setTitle(String title) {\n  ...\n  return;    // Java line 28\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 28"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "Movie.setTitle()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.Movie.setTitle(java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 41,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  m.setTitle($stack1);    // Java line 41\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "virtualinvoke m.<com.kalavit.javulna.model.Movie: void setTitle(java.lang.String)>($stack1);    // Java line 41"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "@callsite1"
                        }
                      },
                      "state": {
                        "@callsite1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/dto/MovieDto.java"
                          },
                          "region": {
                            "startLine": 42,
                            "snippet": {
                              "rendered": {
                                "text": "public void toMovie(Movie m) {\n  ...\n  return;    // Java line 42\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 42"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieDto.toMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.dto.MovieDto.toMovie(com.kalavit.javulna.model.Movie)"
                          }
                        ],
                        "message": {
                          "text": "@callsite1"
                        }
                      },
                      "state": {
                        "@callsite1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 37,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  md.toMovie(m);    // Java line 37\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieController.java:37' in the method 'MovieController.createMovie()' to variable 'm'"
                            },
                            "properties": {
                              "ir": [
                                "virtualinvoke md.<com.kalavit.javulna.dto.MovieDto: void toMovie(com.kalavit.javulna.model.Movie)>(m);    // Java line 37"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ],
                        "message": {
                          "text": "m"
                        }
                      },
                      "state": {
                        "m": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 38,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  $stack0 = this.movieAutoDao;    // Java line 38\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieController.java:38' in the method 'MovieController.createMovie()' to variable 'm'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.controllers.rest.MovieController:com.kalavit.javulna.services.autodao.MovieAutoDao movieAutoDao>;    // Java line 38"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ],
                        "message": {
                          "text": "m"
                        }
                      },
                      "state": {
                        "m": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 39,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  $stack0 = m.getId();    // Java line 39\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = virtualinvoke m.<com.kalavit.javulna.model.Movie: java.lang.String getId()>();    // Java line 39"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ],
                        "message": {
                          "text": "this"
                        }
                      },
                      "state": {
                        "this": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/model/BaseEntity.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "public String getId() {\n  ...\n  $stack0 = this.id;    // Java line 44\n  return $stack0;    // Java line 44\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'BaseEntity.java:44' in the method 'BaseEntity.getId()' to variable '$stack0'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.model.BaseEntity:java.lang.String id>;    // Java line 44",
                                "return $stack0;    // Java line 44"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "BaseEntity.getId()",
                            "fullyQualifiedName": "com.kalavit.javulna.model.BaseEntity.getId()"
                          }
                        ],
                        "message": {
                          "text": "$stack0"
                        }
                      },
                      "state": {
                        "$stack0": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 39,
                            "snippet": {
                              "rendered": {
                                "text": "@PostMapping(value={\"rest/movie\"})\npublic String createMovie(@RequestBody MovieDto md) {\n  ...\n  $stack0 = m.getId();    // Java line 39\n  return $stack0;    // Java line 39\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "This data was used dangerously at 'MovieController.java:39' in the method 'MovieController.createMovie()' via variable '$stack0'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = virtualinvoke m.<com.kalavit.javulna.model.Movie: java.lang.String getId()>();    // Java line 39",
                                "return $stack0;    // Java line 39"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.createMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
                          }
                        ],
                        "message": {
                          "text": "$stack0"
                        }
                      },
                      "state": {
                        "$stack0": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    }
                  ]
                }
              ],
              "properties": {
                "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
              }
            }
          ]
        },
        {
          "ruleId": "sql-injection",
          "level": "error",
          "message": {
            "text": "SQL Injection in MovieService.findMovie() reachable from MovieController.findMovies()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "com/kalavit/javulna/services/MovieService.java"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "snippet": {
                    "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                  }
                },
                "contextRegion": {
                  "snippet": {}
                }
              }
            }
          ],
          "partialFingerprints": {
            "GITHUB_SOURCECODE_LSH/v1": "f6a066a6476a1769:1-bd352c12a3f8d693:1-f3dfb24733974c38:1-d98444b7bafb999f:1-78e356f022bae98f:1-5fefa50440d23f63:1-4d117eb7a0b7420e:1-b2c69a29ff7bf276:1-89177ce90a8658f0:1-4f3519e474aa2c6a:1-64ed8e6526b79cf4:1-13db8c734146ff90:1"
          },
          "codeFlows": [
            {
              "message": {
                "text": "Untrusted data flow from MovieController.java:44 to MovieService.java:57 via variable `$stack1`"
              },
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, @RequestParam String genre, **@RequestParam String id**) {\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, @RequestParam String genre, **@RequestParam String id**) {",
                                "  ...",
                                "}"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 45,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, @RequestParam String genre, @RequestParam String id) {\n  ...\n  $stack0 = this.movieService;    // Java line 45\n  $stack0 = $stack0.findMovie(title, description, genre, id);    // Java line 45\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieController.java:45' in the method 'MovieController.findMovies()' to variable 'id'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.controllers.rest.MovieController:com.kalavit.javulna.services.MovieService movieService>;    // Java line 45",
                                "$stack0 = virtualinvoke $stack0.<com.kalavit.javulna.services.MovieService: java.util.List findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)>(title, description, genre, id);    // Java line 45"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 33,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = 0;    // Java line 33\n  conditions = 0;    // Java line 33\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = 0;    // Java line 33",
                                "conditions = 0;    // Java line 33"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 34,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = new StringBuilder();    // Java line 34\n  $stack2 = \"select description, title, genre, id from movie \";    // Java line 34\n  $stack0.<init>($stack2);    // Java line 34\n  sql = $stack0;    // Java line 34\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:34' in the method 'MovieService.findMovie()' to variable 'id'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = new java.lang.StringBuilder;    // Java line 34",
                                "$stack2 = \"select description, title, genre, id from movie \";    // Java line 34",
                                "specialinvoke $stack0.<java.lang.StringBuilder: void <init>(java.lang.String)>($stack2);    // Java line 34",
                                "sql = $stack0;    // Java line 34"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 35,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(title);    // Java line 35\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(title);    // Java line 35"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 41,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(description);    // Java line 41\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(description);    // Java line 41"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 46,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(genre);    // Java line 46\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(genre);    // Java line 46"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 51,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(id);    // Java line 51\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:51' in the method 'MovieService.findMovie()' to variable 'id'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(id);    // Java line 51"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 52,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, conditions);    // Java line 52\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, conditions);    // Java line 52"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 76,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  $stack1 = \" and \";    // Java line 76\n  sb.append($stack1);    // Java line 76\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \" and \";    // Java line 76",
                                "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 76"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 78,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  return;    // Java line 78\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 78"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 52,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, conditions);    // Java line 52\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:52' in the method 'MovieService.findMovie()' to variable 'id'"
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, conditions);    // Java line 52"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "id"
                        }
                      },
                      "state": {
                        "id": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 54,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack1 = \"id = '\";    // Java line 54\n  $stack0 = sql.append($stack1);    // Java line 54\n  $stack0 = $stack0.append(id);    // Java line 54\n  $stack1 = \"'\";    // Java line 54\n  $stack0.append($stack1);    // Java line 54\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:54' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \"id = '\";    // Java line 54",
                                "$stack0 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 54",
                                "$stack0 = virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);    // Java line 54",
                                "$stack1 = \"'\";    // Java line 54",
                                "virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 54"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 56,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = LOG;    // Java line 56\n  $stack1 = sql.toString();    // Java line 56\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:56' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = <com.kalavit.javulna.services.MovieService:org.slf4j.Logger LOG>;    // Java line 56",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 56"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 57,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "This data was used dangerously at 'MovieService.java:57' in the method 'MovieService.findMovie()' via variable '$stack1'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.services.MovieService:org.springframework.jdbc.core.JdbcTemplate jdbcTemplate>;    // Java line 57",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 57",
                                "$stack2 = new com.kalavit.javulna.services.MovieService$1;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "this.<com.kalavit.javulna.services.MovieService$1:com.kalavit.javulna.services.MovieService this$0> = this$0;    // Java line 57",
                                "return;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "users = virtualinvoke $stack0.<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String, org.springframework.jdbc.core.RowMapper)>($stack1, $stack2);    // Java line 57"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "$stack1"
                        }
                      },
                      "state": {
                        "$stack1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    }
                  ]
                }
              ],
              "properties": {
                "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
              }
            }
          ]
        },
        {
          "ruleId": "sql-injection",
          "level": "error",
          "message": {
            "text": "SQL Injection in MovieService.findMovie() reachable from MovieController.findMovies()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "com/kalavit/javulna/services/MovieService.java"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "snippet": {
                    "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                  }
                },
                "contextRegion": {
                  "snippet": {}
                }
              }
            }
          ],
          "partialFingerprints": {
            "GITHUB_SOURCECODE_LSH/v1": "f6a066a6476a1769:1-bd352c12a3f8d693:1-f3dfb24733974c38:1-d98444b7bafb999f:1-78e356f022bae98f:1-5fefa50440d23f63:1-4d117eb7a0b7420e:1-b2c69a29ff7bf276:1-89177ce90a8658f0:1-4f3519e474aa2c6a:1-64ed8e6526b79cf4:1-13db8c734146ff90:1"
          },
          "codeFlows": [
            {
              "message": {
                "text": "Untrusted data flow from MovieController.java:44 to MovieService.java:57 via variable `$stack1`"
              },
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, **@RequestParam String genre**, @RequestParam String id) {\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, **@RequestParam String genre**, @RequestParam String id) {",
                                "  ...",
                                "}"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 45,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, @RequestParam String genre, @RequestParam String id) {\n  ...\n  $stack0 = this.movieService;    // Java line 45\n  $stack0 = $stack0.findMovie(title, description, genre, id);    // Java line 45\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieController.java:45' in the method 'MovieController.findMovies()' to variable 'genre'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.controllers.rest.MovieController:com.kalavit.javulna.services.MovieService movieService>;    // Java line 45",
                                "$stack0 = virtualinvoke $stack0.<com.kalavit.javulna.services.MovieService: java.util.List findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)>(title, description, genre, id);    // Java line 45"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 33,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = 0;    // Java line 33\n  conditions = 0;    // Java line 33\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = 0;    // Java line 33",
                                "conditions = 0;    // Java line 33"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 34,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = new StringBuilder();    // Java line 34\n  $stack2 = \"select description, title, genre, id from movie \";    // Java line 34\n  $stack0.<init>($stack2);    // Java line 34\n  sql = $stack0;    // Java line 34\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:34' in the method 'MovieService.findMovie()' to variable 'genre'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = new java.lang.StringBuilder;    // Java line 34",
                                "$stack2 = \"select description, title, genre, id from movie \";    // Java line 34",
                                "specialinvoke $stack0.<java.lang.StringBuilder: void <init>(java.lang.String)>($stack2);    // Java line 34",
                                "sql = $stack0;    // Java line 34"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 35,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(title);    // Java line 35\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(title);    // Java line 35"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 41,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(description);    // Java line 41\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(description);    // Java line 41"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 46,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(genre);    // Java line 46\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:46' in the method 'MovieService.findMovie()' to variable 'genre'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(genre);    // Java line 46"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 47,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, conditions);    // Java line 47\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, conditions);    // Java line 47"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 76,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  $stack1 = \" and \";    // Java line 76\n  sb.append($stack1);    // Java line 76\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \" and \";    // Java line 76",
                                "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 76"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 78,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  return;    // Java line 78\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 78"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 47,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, conditions);    // Java line 47\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, conditions);    // Java line 47"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 48,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  conditions = conditions + 1;    // Java line 48\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "conditions = conditions + 1;    // Java line 48"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "genre"
                        }
                      },
                      "state": {
                        "genre": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 49,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack1 = \"genre LIKE %'\";    // Java line 49\n  $stack0 = sql.append($stack1);    // Java line 49\n  $stack0 = $stack0.append(genre);    // Java line 49\n  $stack1 = \"%'\";    // Java line 49\n  $stack0.append($stack1);    // Java line 49\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:49' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \"genre LIKE %'\";    // Java line 49",
                                "$stack0 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 49",
                                "$stack0 = virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(genre);    // Java line 49",
                                "$stack1 = \"%'\";    // Java line 49",
                                "virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 49"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 51,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(id);    // Java line 51\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(id);    // Java line 51"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 56,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = LOG;    // Java line 56\n  $stack1 = sql.toString();    // Java line 56\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:56' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = <com.kalavit.javulna.services.MovieService:org.slf4j.Logger LOG>;    // Java line 56",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 56"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 57,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "This data was used dangerously at 'MovieService.java:57' in the method 'MovieService.findMovie()' via variable '$stack1'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.services.MovieService:org.springframework.jdbc.core.JdbcTemplate jdbcTemplate>;    // Java line 57",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 57",
                                "$stack2 = new com.kalavit.javulna.services.MovieService$1;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "this.<com.kalavit.javulna.services.MovieService$1:com.kalavit.javulna.services.MovieService this$0> = this$0;    // Java line 57",
                                "return;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "users = virtualinvoke $stack0.<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String, org.springframework.jdbc.core.RowMapper)>($stack1, $stack2);    // Java line 57"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "$stack1"
                        }
                      },
                      "state": {
                        "$stack1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    }
                  ]
                }
              ],
              "properties": {
                "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
              }
            }
          ]
        },
        {
          "ruleId": "sql-injection",
          "level": "error",
          "message": {
            "text": "SQL Injection in MovieService.findMovie() reachable from MovieController.findMovies()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "com/kalavit/javulna/services/MovieService.java"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "snippet": {
                    "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                  }
                },
                "contextRegion": {
                  "snippet": {}
                }
              }
            }
          ],
          "partialFingerprints": {
            "GITHUB_SOURCECODE_LSH/v1": "f6a066a6476a1769:1-bd352c12a3f8d693:1-f3dfb24733974c38:1-d98444b7bafb999f:1-78e356f022bae98f:1-5fefa50440d23f63:1-4d117eb7a0b7420e:1-b2c69a29ff7bf276:1-89177ce90a8658f0:1-4f3519e474aa2c6a:1-64ed8e6526b79cf4:1-13db8c734146ff90:1"
          },
          "codeFlows": [
            {
              "message": {
                "text": "Untrusted data flow from MovieController.java:44 to MovieService.java:57 via variable `$stack1`"
              },
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, **@RequestParam String description**, @RequestParam String genre, @RequestParam String id) {\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, **@RequestParam String description**, @RequestParam String genre, @RequestParam String id) {",
                                "  ...",
                                "}"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 45,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, @RequestParam String genre, @RequestParam String id) {\n  ...\n  $stack0 = this.movieService;    // Java line 45\n  $stack0 = $stack0.findMovie(title, description, genre, id);    // Java line 45\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieController.java:45' in the method 'MovieController.findMovies()' to variable 'description'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.controllers.rest.MovieController:com.kalavit.javulna.services.MovieService movieService>;    // Java line 45",
                                "$stack0 = virtualinvoke $stack0.<com.kalavit.javulna.services.MovieService: java.util.List findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)>(title, description, genre, id);    // Java line 45"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 33,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = 0;    // Java line 33\n  conditions = 0;    // Java line 33\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = 0;    // Java line 33",
                                "conditions = 0;    // Java line 33"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 34,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = new StringBuilder();    // Java line 34\n  $stack2 = \"select description, title, genre, id from movie \";    // Java line 34\n  $stack0.<init>($stack2);    // Java line 34\n  sql = $stack0;    // Java line 34\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:34' in the method 'MovieService.findMovie()' to variable 'description'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = new java.lang.StringBuilder;    // Java line 34",
                                "$stack2 = \"select description, title, genre, id from movie \";    // Java line 34",
                                "specialinvoke $stack0.<java.lang.StringBuilder: void <init>(java.lang.String)>($stack2);    // Java line 34",
                                "sql = $stack0;    // Java line 34"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 35,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(title);    // Java line 35\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(title);    // Java line 35"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 41,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(description);    // Java line 41\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:41' in the method 'MovieService.findMovie()' to variable 'description'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(description);    // Java line 41"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 42,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, conditions);    // Java line 42\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, conditions);    // Java line 42"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 76,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  $stack1 = \" and \";    // Java line 76\n  sb.append($stack1);    // Java line 76\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \" and \";    // Java line 76",
                                "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 76"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 78,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  return;    // Java line 78\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 78"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 42,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, conditions);    // Java line 42\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, conditions);    // Java line 42"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 43,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  conditions = conditions + 1;    // Java line 43\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "conditions = conditions + 1;    // Java line 43"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "description"
                        }
                      },
                      "state": {
                        "description": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack1 = \"description LIKE %'\";    // Java line 44\n  $stack0 = sql.append($stack1);    // Java line 44\n  $stack0 = $stack0.append(description);    // Java line 44\n  $stack1 = \"%'\";    // Java line 44\n  $stack0.append($stack1);    // Java line 44\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:44' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \"description LIKE %'\";    // Java line 44",
                                "$stack0 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 44",
                                "$stack0 = virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(description);    // Java line 44",
                                "$stack1 = \"%'\";    // Java line 44",
                                "virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 44"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 46,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(genre);    // Java line 46\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(genre);    // Java line 46"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 51,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(id);    // Java line 51\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(id);    // Java line 51"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 56,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = LOG;    // Java line 56\n  $stack1 = sql.toString();    // Java line 56\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:56' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = <com.kalavit.javulna.services.MovieService:org.slf4j.Logger LOG>;    // Java line 56",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 56"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 57,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "This data was used dangerously at 'MovieService.java:57' in the method 'MovieService.findMovie()' via variable '$stack1'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.services.MovieService:org.springframework.jdbc.core.JdbcTemplate jdbcTemplate>;    // Java line 57",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 57",
                                "$stack2 = new com.kalavit.javulna.services.MovieService$1;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "this.<com.kalavit.javulna.services.MovieService$1:com.kalavit.javulna.services.MovieService this$0> = this$0;    // Java line 57",
                                "return;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "users = virtualinvoke $stack0.<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String, org.springframework.jdbc.core.RowMapper)>($stack1, $stack2);    // Java line 57"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "$stack1"
                        }
                      },
                      "state": {
                        "$stack1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    }
                  ]
                }
              ],
              "properties": {
                "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
              }
            }
          ]
        },
        {
          "ruleId": "sql-injection",
          "level": "error",
          "message": {
            "text": "SQL Injection in MovieService.findMovie() reachable from MovieController.findMovies()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "com/kalavit/javulna/services/MovieService.java"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "snippet": {
                    "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                  }
                },
                "contextRegion": {
                  "snippet": {}
                }
              }
            }
          ],
          "partialFingerprints": {
            "GITHUB_SOURCECODE_LSH/v1": "f6a066a6476a1769:1-bd352c12a3f8d693:1-f3dfb24733974c38:1-d98444b7bafb999f:1-78e356f022bae98f:1-5fefa50440d23f63:1-4d117eb7a0b7420e:1-b2c69a29ff7bf276:1-89177ce90a8658f0:1-4f3519e474aa2c6a:1-64ed8e6526b79cf4:1-13db8c734146ff90:1"
          },
          "codeFlows": [
            {
              "message": {
                "text": "Untrusted data flow from MovieController.java:44 to MovieService.java:57 via variable `$stack1`"
              },
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 44,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(**@RequestParam String title**, @RequestParam String description, @RequestParam String genre, @RequestParam String id) {\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(**@RequestParam String title**, @RequestParam String description, @RequestParam String genre, @RequestParam String id) {",
                                "  ...",
                                "}"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/controllers/rest/MovieController.java"
                          },
                          "region": {
                            "startLine": 45,
                            "snippet": {
                              "rendered": {
                                "text": "@GetMapping(value={\"rest/movie\"})\n@ResponseBody\npublic List findMovies(@RequestParam String title, @RequestParam String description, @RequestParam String genre, @RequestParam String id) {\n  ...\n  $stack0 = this.movieService;    // Java line 45\n  $stack0 = $stack0.findMovie(title, description, genre, id);    // Java line 45\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieController.java:45' in the method 'MovieController.findMovies()' to variable 'title'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.controllers.rest.MovieController:com.kalavit.javulna.services.MovieService movieService>;    // Java line 45",
                                "$stack0 = virtualinvoke $stack0.<com.kalavit.javulna.services.MovieService: java.util.List findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)>(title, description, genre, id);    // Java line 45"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieController.findMovies()",
                            "fullyQualifiedName": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "title"
                        }
                      },
                      "state": {
                        "title": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 33,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = 0;    // Java line 33\n  conditions = 0;    // Java line 33\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = 0;    // Java line 33",
                                "conditions = 0;    // Java line 33"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "title"
                        }
                      },
                      "state": {
                        "title": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 34,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = new StringBuilder();    // Java line 34\n  $stack2 = \"select description, title, genre, id from movie \";    // Java line 34\n  $stack0.<init>($stack2);    // Java line 34\n  sql = $stack0;    // Java line 34\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:34' in the method 'MovieService.findMovie()' to variable 'title'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = new java.lang.StringBuilder;    // Java line 34",
                                "$stack2 = \"select description, title, genre, id from movie \";    // Java line 34",
                                "specialinvoke $stack0.<java.lang.StringBuilder: void <init>(java.lang.String)>($stack2);    // Java line 34",
                                "sql = $stack0;    // Java line 34"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "title"
                        }
                      },
                      "state": {
                        "title": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 35,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(title);    // Java line 35\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:35' in the method 'MovieService.findMovie()' to variable 'title'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(title);    // Java line 35"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "title"
                        }
                      },
                      "state": {
                        "title": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 36,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack2 = 0;    // Java line 36\n  this.appendCondition(sql, $stack2);    // Java line 36\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack2 = 0;    // Java line 36",
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, $stack2);    // Java line 36"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 76,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  $stack1 = \" and \";    // Java line 76\n  sb.append($stack1);    // Java line 76\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \" and \";    // Java line 76",
                                "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 76"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 78,
                            "snippet": {
                              "rendered": {
                                "text": "private void appendCondition(StringBuilder sb, int conditions) {\n  ...\n  return;    // Java line 78\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "return;    // Java line 78"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.appendCondition()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.appendCondition(java.lang.StringBuilder, int)"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 36,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  this.appendCondition(sql, $stack2);    // Java line 36\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "specialinvoke this.<com.kalavit.javulna.services.MovieService: void appendCondition(java.lang.StringBuilder, int)>(sql, $stack2);    // Java line 36"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "title"
                        }
                      },
                      "state": {
                        "title": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 37,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  conditions = 0 + 1;    // Java line 37\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "conditions = 0 + 1;    // Java line 37"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "title"
                        }
                      },
                      "state": {
                        "title": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 38,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack1 = \"title LIKE '%\";    // Java line 38\n  $stack0 = sql.append($stack1);    // Java line 38\n  $stack0 = $stack0.append(title);    // Java line 38\n  $stack1 = \"%'\";    // Java line 38\n  $stack0.append($stack1);    // Java line 38\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:38' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack1 = \"title LIKE '%\";    // Java line 38",
                                "$stack0 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 38",
                                "$stack0 = virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(title);    // Java line 38",
                                "$stack1 = \"%'\";    // Java line 38",
                                "virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);    // Java line 38"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 41,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(description);    // Java line 41\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(description);    // Java line 41"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 46,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(genre);    // Java line 46\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(genre);    // Java line 46"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 51,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = StringUtils.hasText(id);    // Java line 51\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(id);    // Java line 51"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 56,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = LOG;    // Java line 56\n  $stack1 = sql.toString();    // Java line 56\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "Propagation event of untrusted data occurred at 'MovieService.java:56' in the method 'MovieService.findMovie()' to variable 'sql'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = <com.kalavit.javulna.services.MovieService:org.slf4j.Logger LOG>;    // Java line 56",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 56"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "sql"
                        }
                      },
                      "state": {
                        "sql": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/services/MovieService.java"
                          },
                          "region": {
                            "startLine": 57,
                            "snippet": {
                              "rendered": {
                                "text": "public List findMovie(String title, String description, String genre, String id) {\n  ...\n  $stack0 = this.jdbcTemplate;    // Java line 57\n  $stack1 = sql.toString();    // Java line 57\n  $stack2 = new MovieService$1();    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  this.this$0 = this$0;    // Java line 57\n  return;    // Java line 57\n  $stack2.<init>(this);    // Java line 57\n  users = $stack0.query($stack1, $stack2);    // Java line 57\n  ...\n}"
                              }
                            },
                            "message": {
                              "text": "This data was used dangerously at 'MovieService.java:57' in the method 'MovieService.findMovie()' via variable '$stack1'"
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = this.<com.kalavit.javulna.services.MovieService:org.springframework.jdbc.core.JdbcTemplate jdbcTemplate>;    // Java line 57",
                                "$stack1 = virtualinvoke sql.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 57",
                                "$stack2 = new com.kalavit.javulna.services.MovieService$1;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "this.<com.kalavit.javulna.services.MovieService$1:com.kalavit.javulna.services.MovieService this$0> = this$0;    // Java line 57",
                                "return;    // Java line 57",
                                "specialinvoke $stack2.<com.kalavit.javulna.services.MovieService$1: void <init>(com.kalavit.javulna.services.MovieService)>(this);    // Java line 57",
                                "users = virtualinvoke $stack0.<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String, org.springframework.jdbc.core.RowMapper)>($stack1, $stack2);    // Java line 57"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "MovieService.findMovie()",
                            "fullyQualifiedName": "com.kalavit.javulna.services.MovieService.findMovie(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
                          }
                        ],
                        "message": {
                          "text": "$stack1"
                        }
                      },
                      "state": {
                        "$stack1": {
                          "text": "tainted",
                          "properties": {
                            "taintTags": [
                              "untrusted",
                              "cross-site"
                            ]
                          }
                        }
                      },
                      "importance": "essential"
                    }
                  ]
                }
              ],
              "properties": {
                "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
              }
            }
          ]
        },
        {
          "ruleId": "csrf-protection-disabled",
          "level": "error",
          "message": {
            "text": "Cross-Site Request Forgery Protection Disabled in WebSecurityConfig.configure() reachable from WebSecurityConfig.configure()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "com/kalavit/javulna/springconfig/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 1,
                  "snippet": {
                    "text": "void configure(HttpSecurity http) {\n  ...\n  $stack0 = $stack0.disable();    // Java line 83\n  ...\n}"
                  }
                },
                "contextRegion": {
                  "snippet": {}
                }
              }
            }
          ],
          "partialFingerprints": {
            "GITHUB_SOURCECODE_LSH/v1": "78be23ec4876a5d6:1-98dfc0d75f4e5c34:1-4d4f0c10f3bf0ad0:1-64ed8e6526b79cf4:1-13db8c734146ff90:1"
          },
          "codeFlows": [
            {
              "message": {
                "text": "Found vulnerability at WebSecurityConfig.java:83"
              },
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "com/kalavit/javulna/springconfig/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 83,
                            "snippet": {
                              "rendered": {
                                "text": "void configure(HttpSecurity http) {\n  ...\n  $stack0 = $stack0.disable();    // Java line 83\n  ...\n}"
                              }
                            },
                            "properties": {
                              "ir": [
                                "$stack0 = virtualinvoke $stack0.<org.springframework.security.config.annotation.web.configurers.CsrfConfigurer: org.springframework.security.config.annotation.web.HttpSecurityBuilder disable()>();    // Java line 83"
                              ]
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "name": "WebSecurityConfig.configure()",
                            "fullyQualifiedName": "com.kalavit.javulna.springconfig.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
                          }
                        ]
                      }
                    }
                  ]
                }
              ],
              "properties": {
                "routeSignature": "com.kalavit.javulna.springconfig.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
              }
            }
          ]
        }
      ],
      "properties": {
        "scannedData": {
          "scannedBodyClasses": [
            "aj.org.objectweb.asm.ClassWriter",
            "aj.org.objectweb.asm.Item",
            "org.dozer.converters.PrimitiveOrWrapperConverter",
            "org.dozer.loader.MappingsSource",
            "org.dozer.loader.xml.MappingFileReader",
            "aj.org.objectweb.asm.ByteVector",
            "org.dozer.event.DozerEventManager",
            "org.dozer.metadata.MetadataLookupException",
            "org.dozer.classmap.generator.BeanMappingGenerator$1",
            "org.dozer.loader.LoadMappingsResult",
            "org.dozer.metadata.DozerMappingMetadata",
            "org.dozer.classmap.DozerClass",
            "com.kalavit.javulna.Application",
            "aj.org.objectweb.asm.TypeReference",
            "org.dozer.fieldmap.GenericFieldMap",
            "org.dozer.metadata.MappingMetadata",
            "org.dozer.loader.api.BeanMappingBuilder",
            "org.dozer.loader.DozerBuilder$ConfigurationBuilder",
            "org.owasp.encoder.JavaScriptEncoder",
            "aj.org.objectweb.asm.Frame",
            "org.dozer.util.TypeResolver",
            "org.dozer.util.DozerClassLoader",
            "org.dozer.classmap.ClassMapBuilder$CollectionMappingGenerator",
            "org.dozer.util.DefaultProxyResolver",
            "org.dozer.converters.IntegerConverter",
            "org.dozer.loader.xml.SimpleElementReader",
            "org.dozer.classmap.CopyByReference",
            "org.dozer.converters.StringConstructorConverter",
            "com.kalavit.javulna.springconfig.CustomAuthenticationFailureHandler",
            "org.dozer.loader.api.TypeMappingOptions",
            "org.dozer.factory.ConstructionStrategies$ByCreateMethod",
            "org.dozer.loader.api.TypeMappingOption",
            "org.dozer.metadata.DozerClassMappingMetadata",
            "org.dozer.cache.DozerCacheType",
            "org.dozer.loader.api.FieldDefinition",
            "org.dozer.loader.xml.ElementReader",
            "aj.org.objectweb.asm.Opcodes",
            "org.dozer.factory.ConstructionStrategies$ByFactory",
            "aj.org.objectweb.asm.FieldVisitor",
            "org.dozer.factory.ConstructionStrategies$XMLBeansBased",
            "org.dozer.classmap.Configuration",
            "org.dozer.loader.DozerBuilder$FieldBuider",
            "org.dozer.classmap.ClassMapBuilder$MapMappingGenerator",
            "com.kalavit.javulna.springconfig.CustomAuthenticationSuccessHandler",
            "org.dozer.classmap.ClassMapBuilder$ClassMappingGenerator",
            "org.dozer.MappingProcessor",
            "org.dozer.util.NoProxyResolver",
            "org.owasp.encoder.JavaEncoder",
            "org.dozer.loader.xml.DozerResolver",
            "org.dozer.classmap.CopyByReferenceContainer",
            "org.dozer.propertydescriptor.GetterSetterPropertyDescriptor",
            "com.kalavit.javulna.dto.MessageDto",
            "com.kalavit.javulna.controllers.rest.HelloController",
            "org.dozer.converters.CustomConverterDescription",
            "org.dozer.converters.XMLGregorianCalendarConverter",
            "org.dozer.factory.ConstructionStrategies$ByInterface",
            "aj.org.objectweb.asm.ClassReader",
            "org.dozer.stats.StatisticsInterceptor",
            "org.dozer.MappingException",
            "org.dozer.inject.Inject",
            "org.dozer.util.BridgedMethodFinder",
            "org.owasp.encoder.HTMLEncoder",
            "com.kalavit.javulna.model.User",
            "aj.org.objectweb.asm.Handle",
            "aj.org.objectweb.asm.Context",
            "com.kalavit.javulna.springconfig.WebSecurityConfig",
            "org.dozer.stats.StatisticsManager",
            "org.owasp.encoder.Encoders",
            "org.owasp.encoder.CDATAEncoder",
            "java.util.Optional",
            "org.dozer.util.ResourceLoader",
            "org.dozer.BeanBuilder",
            "org.dozer.stats.StatisticEntry",
            "org.dozer.factory.BeanCreationStrategy",
            "org.owasp.encoder.XMLEncoder$Mode",
            "org.dozer.loader.api.FieldsMappingOptions$8",
            "org.dozer.loader.api.FieldsMappingOptions$9",
            "org.dozer.loader.api.FieldsMappingOptions$6",
            "org.dozer.loader.api.FieldsMappingOptions$7",
            "org.dozer.loader.api.FieldsMappingOptions$4",
            "org.dozer.loader.api.FieldsMappingOptions$5",
            "org.dozer.loader.api.FieldsMappingOption",
            "org.dozer.loader.api.FieldsMappingOptions$2",
            "org.dozer.loader.api.FieldsMappingOptions$3",
            "org.dozer.loader.api.FieldsMappingOptions$1",
            "org.dozer.propertydescriptor.PropertyDescriptorFactory",
            "com.kalavit.javulna.springconfig.WebSocketConfig",
            "org.dozer.ConfigurableCustomConverter",
            "com.kalavit.javulna.model.BaseEntity",
            "org.dozer.cache.CacheKeyFactory$1",
            "aj.org.objectweb.asm.AnnotationWriter",
            "org.dozer.classmap.ClassMapBuilder",
            "org.dozer.classmap.generator.GeneratorUtils",
            "aj.org.objectweb.asm.signature.SignatureWriter",
            "org.dozer.fieldmap.MapFieldMap$PrepareTargetObjectResult",
            "org.dozer.osgi.Activator",
            "org.dozer.jmx.DozerStatisticsController",
            "org.owasp.encoder.CSSEncoder$Mode",
            "org.dozer.classmap.AllowedExceptionContainer",
            "org.dozer.propertydescriptor.PropertyDescriptorCreationStrategy",
            "org.dozer.classmap.generator.BeanMappingGenerator$BeanFieldsDetector",
            "org.owasp.encoder.URIEncoder",
            "org.springframework.lang.UsesJava7",
            "org.springframework.lang.UsesJava8",
            "org.dozer.converters.ConversionException",
            "org.dozer.factory.ConstructionStrategies$ByConstructor",
            "org.dozer.fieldmap.MapFieldMap",
            "org.dozer.fieldmap.FieldMap",
            "aj.org.objectweb.asm.signature.SignatureVisitor",
            "org.owasp.encoder.ASCIIBits",
            "org.owasp.encoder.XMLEncoder",
            "org.dozer.loader.MappingsParser",
            "org.dozer.loader.CustomMappingsLoader",
            "org.dozer.util.MappingValidator",
            "org.dozer.stats.GlobalStatistics",
            "org.dozer.fieldmap.HintContainer",
            "com.kalavit.javulna.controllers.rest.MessageController",
            "org.springframework.lang.UsesSunHttpServer",
            "org.dozer.propertydescriptor.FieldPropertyDescriptor",
            "org.dozer.BeanGeneralCreationStrategy",
            "org.dozer.loader.xml.XMLParserFactory$1",
            "org.dozer.cache.CacheKeyFactory$CacheKey",
            "org.dozer.factory.ConstructionStrategies",
            "org.dozer.propertydescriptor.AbstractPropertyDescriptor",
            "org.dozer.loader.xml.ELEngine$Variables",
            "org.dozer.cache.DozerCache",
            "org.apache.xmlcommons.Version",
            "org.dozer.propertydescriptor.JavaBeanPropertyDescriptor",
            "org.dozer.cache.Cache",
            "org.dozer.classmap.MappingFileData",
            "org.dozer.converters.CustomConverterContainer",
            "org.dozer.cache.CacheKeyFactory",
            "org.dozer.osgi.OSGiClassLoader",
            "org.dozer.cache.CacheManager",
            "org.dozer.loader.DozerBuilder",
            "org.dozer.propertydescriptor.SelfPropertyDescriptor",
            "aj.org.objectweb.asm.MethodWriter",
            "com.kalavit.javulna.dto.MovieDto",
            "org.dozer.cache.CacheEntry",
            "org.dozer.Mapping",
            "org.dozer.factory.BeanCreationDirective",
            "org.dozer.config.BeanContainer",
            "org.dozer.stats.Statistic",
            "com.kalavit.javulna.services.autodao.MovieAutoDao",
            "aj.org.objectweb.asm.Attribute",
            "org.dozer.jmx.DozerStatisticsControllerMBean",
            "org.dozer.builder.DestBeanBuilderCreator",
            "aj.org.objectweb.asm.MethodVisitor",
            "org.dozer.stats.StatisticType",
            "aj.org.objectweb.asm.ClassVisitor",
            "org.dozer.loader.DozerBuilder$FieldMappingBuilder",
            "com.kalavit.javulna.services.autodao.MessageAutoDao",
            "org.dozer.DozerInitializer",
            "org.dozer.BeanFactory",
            "com.kalavit.javulna.dto.ChatDto",
            "org.dozer.loader.api.TypeMappingBuilder",
            "org.owasp.encoder.CSSEncoder",
            "org.dozer.DozerConverter",
            "org.dozer.util.ReflectionUtils",
            "com.kalavit.javulna.services.MessageService",
            "org.dozer.cache.DozerCacheManager",
            "org.dozer.builder.BeanBuilderCreationStrategy",
            "com.kalavit.javulna.controllers.rest.UserController",
            "org.dozer.stats.StatisticsManagerImpl",
            "com.kalavit.javulna.services.RemotePasswordChangeService",
            "org.owasp.encoder.Encoder",
            "org.dozer.factory.ConstructionStrategies$1",
            "org.dozer.factory.JAXBBeanFactory",
            "org.dozer.util.DeepHierarchyUtils",
            "org.dozer.propertydescriptor.DeepHierarchyElement",
            "org.dozer.converters.DateFormatContainer",
            "org.dozer.loader.xml.ELEngine$Functions",
            "com.kalavit.javulna.model.Movie",
            "com.kalavit.javulna.springconfig.UserDetailsServiceImpl",
            "org.dozer.config.PropertyConstants",
            "org.dozer.jmx.JMXPlatformImpl",
            "com.kalavit.javulna.model.Message",
            "org.dozer.classmap.ClassMapKeyFactory",
            "org.dozer.fieldmap.DozerField",
            "aj.org.objectweb.asm.Type",
            "org.dozer.converters.ByteConverter",
            "aj.org.objectweb.asm.signature.SignatureReader",
            "org.dozer.converters.DateConverter",
            "org.dozer.MappedFieldsTracker",
            "org.dozer.inject.BeanRegistry",
            "org.dozer.factory.XMLBeanFactory",
            "org.dozer.event.DozerEventManager$1",
            "org.dozer.DozerModule",
            "aj.org.objectweb.asm.Edge",
            "org.dozer.inject.DozerBeanContainer",
            "org.dozer.factory.ConstructionStrategies$XmlGregorian",
            "com.kalavit.javulna.utils.FileUtil",
            "org.owasp.encoder.UnsupportedContextException",
            "org.dozer.classmap.ClassMapBuilder$AnnotationPropertiesGenerator",
            "org.dozer.loader.xml.ELEngine",
            "org.dozer.fieldmap.CustomGetSetMethodFieldMap",
            "org.owasp.encoder.Unicode",
            "com.kalavit.javulna.services.autodao.UserAutoDao",
            "org.owasp.encoder.Encode$Buffer",
            "org.dozer.metadata.ClassMappingMetadata",
            "org.dozer.jmx.DozerAdminControllerMBean",
            "org.dozer.converters.EnumConverter",
            "aj.org.objectweb.asm.Label",
            "aj.org.objectweb.asm.AnnotationVisitor",
            "org.dozer.util.DozerConstants",
            "org.dozer.loader.xml.ELEngine$SimpleContext",
            "org.dozer.converters.ShortConverter",
            "org.dozer.classmap.ClassMap",
            "org.dozer.config.GlobalSettings",
            "org.dozer.loader.api.TypeMappingOptions$10",
            "aj.org.objectweb.asm.Handler",
            "org.dozer.event.EventManager",
            "org.dozer.util.DozerProxyResolver",
            "org.owasp.encoder.Encode",
            "org.dozer.factory.DestBeanCreator",
            "org.dozer.DozerEventListener",
            "org.dozer.classmap.generator.BeanMappingGenerator",
            "com.kalavit.javulna.services.MovieService$1",
            "org.owasp.encoder.XMLCommentEncoder",
            "org.dozer.jmx.JMXPlatform",
            "org.dozer.util.CollectionUtils",
            "org.dozer.util.MappingUtils",
            "org.dozer.loader.DozerBuilder$FieldDefinitionBuilder",
            "org.dozer.DozerBeanMapperSingletonWrapper",
            "org.springframework.lang.UsesSunMisc",
            "org.dozer.util.JavassistProxyResolver",
            "org.owasp.encoder.JavaScriptEncoder$Mode",
            "aj.org.objectweb.asm.TypePath",
            "org.dozer.util.HibernateProxyResolver",
            "org.dozer.DozerBeanMapper",
            "org.owasp.encoder.EncodedWriter",
            "org.dozer.propertydescriptor.MapPropertyDescriptor",
            "org.dozer.classmap.RelationshipType",
            "org.dozer.converters.LongConverter",
            "org.dozer.classmap.ClassMapBuilder$AnnotationFieldsGenerator",
            "com.kalavit.javulna.springconfig.MyServletConfig",
            "com.kalavit.javulna.dto.UserInMessageDto",
            "org.dozer.loader.xml.XMLParserFactory$DozerDefaultHandler",
            "org.owasp.encoder.ChainedEncoder",
            "org.dozer.classmap.generator.JavaBeanFieldsDetector",
            "org.dozer.builder.BuilderUtil",
            "org.dozer.event.DozerEventType",
            "org.dozer.fieldmap.ExcludeFieldMap",
            "com.kalavit.javulna.services.MovieService",
            "org.dozer.loader.xml.MappingStreamReader",
            "org.dozer.classmap.MappingDirection",
            "com.kalavit.javulna.model.MessageType",
            "org.dozer.propertydescriptor.CustomGetSetPropertyDescriptor",
            "aj.org.objectweb.asm.FieldWriter",
            "org.dozer.loader.DozerBuilder$FieldExclusionBuilder",
            "org.dozer.metadata.DozerFieldMappingMetadata",
            "com.kalavit.javulna.dto.UserDto",
            "org.dozer.loader.xml.XMLParser",
            "org.dozer.factory.ConstructionStrategies$ByGetInstance",
            "org.dozer.loader.xml.XMLParserFactory",
            "org.dozer.cache.DozerCache$LRUMap",
            "org.dozer.propertydescriptor.DozerPropertyDescriptor",
            "org.dozer.event.DozerEvent",
            "org.dozer.converters.StringConverter",
            "org.dozer.util.LogMsgFactory",
            "org.dozer.CustomConverter",
            "org.dozer.propertydescriptor.FieldPropertyDescriptor$ChainedPropertyDescriptor",
            "org.dozer.classmap.ClassMappings",
            "org.dozer.jmx.DozerAdminController",
            "org.dozer.loader.DozerBuilder$ClassDefinitionBuilder",
            "org.dozer.converters.CalendarConverter",
            "org.dozer.Mapper",
            "org.dozer.util.DefaultClassLoader",
            "com.kalavit.javulna.springconfig.CustomLogoutSuccessHandler",
            "org.dozer.loader.DozerBuilder$CustomConverterBuilder",
            "com.kalavit.javulna.controllers.rest.MovieController",
            "org.dozer.loader.api.TypeDefinition",
            "org.dozer.loader.api.FieldsMappingOptions",
            "com.kalavit.javulna.services.UserService",
            "org.owasp.encoder.URIEncoder$Mode",
            "org.dozer.loader.api.TypeMappingOptions$9",
            "org.dozer.loader.api.TypeMappingOptions$8",
            "org.dozer.loader.api.TypeMappingOptions$7",
            "org.dozer.metadata.FieldMappingMetadata",
            "org.dozer.util.IteratorUtils",
            "org.dozer.MapperAware",
            "org.dozer.loader.api.TypeMappingOptions$2",
            "org.dozer.loader.api.TypeMappingOptions$1",
            "org.dozer.loader.api.TypeMappingOptions$6",
            "org.dozer.loader.api.TypeMappingOptions$5",
            "org.dozer.loader.api.TypeMappingOptions$4",
            "org.dozer.loader.api.TypeMappingOptions$3",
            "org.dozer.loader.DozerBuilder$MappingBuilder",
            "org.dozer.propertydescriptor.XmlBeanPropertyDescriptor",
            "org.dozer.loader.api.FieldsMappingOptions$10",
            "org.dozer.loader.api.FieldsMappingOptions$11",
            "org.dozer.loader.api.FieldsMappingOptions$12",
            "org.dozer.CustomFieldMapper",
            "org.dozer.loader.xml.ExpressionElementReader"
          ],
          "nonScannedBodyClasses": [
            "org.hibernate.CustomEntityDirtinessStrategy",
            "sun.awt.datatransfer.DataTransferer",
            "org.hibernate.action.internal.AbstractEntityInsertAction",
            "javax.servlet.Registration$Dynamic",
            "javax.swing.border.Border",
            "org.hibernate.Transaction",
            "javax.servlet.Filter",
            "org.springframework.web.context.support.WebApplicationObjectSupport",
            "java.lang.CharSequence",
            "org.hibernate.engine.jdbc.batch.spi.BatchBuilder",
            "java.awt.dnd.DropTargetDragEvent",
            "org.hibernate.tool.schema.extract.spi.ExtractionContext",
            "org.springframework.security.core.session.SessionRegistry",
            "java.awt.Scrollbar",
            "org.hibernate.cfg.MetadataSourceType",
            "org.hibernate.FetchMode",
            "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts",
            "org.hibernate.tool.schema.extract.spi.IndexInformation",
            "org.hibernate.cfg.annotations.NamedEntityGraphDefinition",
            "org.hibernate.mapping.RelationalModel",
            "org.apache.commons.lang3.BooleanUtils",
            "java.util.Currency",
            "org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature",
            "java.util.LinkedHashMap",
            "java.nio.channels.InterruptibleChannel",
            "org.hibernate.mapping.Filterable",
            "org.springframework.stereotype.Service",
            "org.springframework.boot.BeanDefinitionLoader",
            "org.hibernate.resource.transaction.backend.jta.internal.synchronization.ExceptionMapper",
            "org.springframework.security.web.header.writers.XXssProtectionHeaderWriter",
            "org.springframework.expression.TypedValue",
            "org.apache.commons.lang3.builder.EqualsBuilder",
            "java.util.function.ToIntFunction",
            "org.apache.commons.io.FileUtils",
            "org.hibernate.boot.model.naming.ImplicitJoinTableNameSource",
            "org.hibernate.engine.jdbc.spi.JdbcServices",
            "java.lang.Module",
            "org.hibernate.persister.entity.OuterJoinLoadable",
            "org.hibernate.engine.spi.VersionValue",
            "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType",
            "org.hibernate.annotations.AnyMetaDef",
            "java.util.concurrent.locks.AbstractQueuedSynchronizer",
            "java.lang.Throwable$PrintStreamOrWriter",
            "java.lang.reflect.Array",
            "org.hibernate.event.spi.PostLoadEvent",
            "javax.servlet.http.HttpServletRequestWrapper",
            "org.springframework.security.web.DefaultSecurityFilterChain",
            "org.hibernate.engine.spi.CollectionEntry",
            "org.apache.commons.beanutils.converters.BooleanConverter",
            "java.nio.channels.AsynchronousChannel",
            "java.lang.System$Logger$Level",
            "sun.font.CoreMetrics",
            "java.awt.Window$Type",
            "org.jboss.jandex.FieldInternal",
            "java.lang.annotation.Documented",
            "java.util.concurrent.ThreadFactory",
            "org.hibernate.engine.spi.PersistenceContext$NaturalIdHelper",
            "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
            "org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer",
            "org.springframework.http.HttpHeaders",
            "javassist.bytecode.CodeIterator$Gap",
            "sun.security.util.KnownOIDs",
            "javassist.CtBehavior",
            "java.lang.module.ModuleDescriptor$Exports",
            "org.springframework.data.jpa.repository.JpaRepository",
            "java.awt.event.InputEvent",
            "org.springframework.security.web.context.HttpRequestResponseHolder",
            "javax.persistence.StoredProcedureQuery",
            "javax.management.MBeanParameterInfo",
            "java.util.concurrent.atomic.AtomicBoolean",
            "org.springframework.security.web.header.writers.ReferrerPolicyHeaderWriter$ReferrerPolicy",
            "java.lang.AbstractStringBuilder",
            "java.lang.ref.WeakReference",
            "antlr.debug.MessageEvent",
            "org.springframework.core.annotation.AliasFor",
            "javax.persistence.PreUpdate",
            "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator",
            "org.hibernate.engine.spi.QueryParameters",
            "org.hibernate.MultiTenancyStrategy",
            "org.springframework.security.config.annotation.web.builders.WebSecurity",
            "java.nio.file.attribute.BasicFileAttributes",
            "org.springframework.web.socket.config.annotation.StompWebSocketEndpointRegistration",
            "org.hibernate.dialect.identity.GetGeneratedKeysDelegate",
            "org.hibernate.engine.spi.SessionFactoryImplementor$DeserializationResolver",
            "java.nio.file.attribute.FileTime",
            "sun.util.calendar.CalendarSystem",
            "org.hibernate.param.ParameterSpecification",
            "java.awt.geom.Rectangle2D$Float",
            "javax.el.MethodExpression",
            "java.util.regex.Pattern$BmpCharProperty",
            "org.springframework.stereotype.Repository",
            "javax.el.EvaluationListener",
            "sun.font.FontStrikeDesc",
            "org.hibernate.annotations.common.reflection.XAnnotatedElement",
            "org.springframework.core.convert.converter.ConverterRegistry",
            "org.hibernate.mapping.UnionSubclass",
            "org.springframework.security.config.annotation.SecurityBuilder",
            "javax.swing.AbstractButton$Handler",
            "org.hibernate.boot.model.naming.ImplicitIndexNameSource",
            "org.hibernate.mapping.MetadataSource",
            "java.time.format.FormatStyle",
            "org.springframework.expression.ParserContext",
            "java.lang.Error",
            "java.lang.AssertionError",
            "org.hibernate.property.access.spi.Setter",
            "java.util.TreeSet",
            "javax.persistence.criteria.CollectionJoin",
            "org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails",
            "sun.security.x509.AVA",
            "sun.awt.EventQueueItem",
            "org.hibernate.engine.spi.Mapping",
            "java.util.stream.DoubleStream$Builder",
            "java.net.PasswordAuthentication",
            "java.util.ResourceBundle",
            "sun.reflect.generics.tree.TypeVariableSignature",
            "java.util.Properties",
            "java.util.stream.LongStream",
            "java.util.concurrent.Executor",
            "java.lang.Deprecated",
            "java.nio.channels.SelectionKey",
            "org.springframework.ui.context.Theme",
            "java.awt.VKCollection",
            "java.lang.invoke.MemberName$Factory",
            "java.time.temporal.ChronoUnit",
            "org.springframework.boot.SpringBootConfiguration",
            "java.nio.LongBuffer",
            "java.sql.Time",
            "java.sql.SQLXML",
            "org.springframework.security.config.annotation.ObjectPostProcessor",
            "javax.naming.NamingException",
            "org.hibernate.persister.entity.Joinable",
            "java.nio.file.WatchKey",
            "javax.persistence.metamodel.Bindable$BindableType",
            "org.springframework.web.accept.MappingMediaTypeFileExtensionResolver",
            "javax.el.MapELResolver",
            "javassist.compiler.ast.CallExpr",
            "java.awt.event.MouseListener",
            "org.hibernate.CustomEntityDirtinessStrategy$AttributeInformation",
            "sun.util.calendar.AbstractCalendar",
            "org.hibernate.boot.registry.classloading.spi.ClassLoaderService$Work",
            "java.util.function.Predicate",
            "java.nio.file.attribute.FileAttributeView",
            "sun.reflect.generics.visitor.TypeTreeVisitor",
            "java.awt.Dimension",
            "java.security.cert.Certificate",
            "sun.util.calendar.BaseCalendar",
            "java.util.SortedMap",
            "sun.reflect.generics.tree.BooleanSignature",
            "java.awt.PageAttributes$PrintQualityType",
            "org.hibernate.tuple.IdentifierProperty",
            "org.hibernate.id.factory.IdentifierGeneratorFactory",
            "java.awt.image.ImageProducer",
            "org.hibernate.type.ComponentType",
            "java.awt.JobAttributes$SidesType",
            "javax.xml.stream.events.StartElement",
            "org.hibernate.engine.jdbc.env.spi.IdentifierHelper",
            "java.io.OutputStream",
            "javax.persistence.criteria.AbstractQuery",
            "java.security.SecureClassLoader",
            "org.hibernate.mapping.Constraint",
            "org.springframework.security.web.savedrequest.SavedRequest",
            "org.springframework.security.authentication.ProviderManager",
            "java.awt.List",
            "org.hibernate.service.ServiceRegistry",
            "java.awt.event.PaintEvent",
            "javassist.bytecode.AttributeInfo",
            "java.net.HttpURLConnection",
            "org.hibernate.action.internal.CollectionAction",
            "org.hibernate.boot.spi.MetadataBuildingOptions",
            "java.nio.channels.DatagramChannel",
            "org.hibernate.engine.spi.CascadingAction",
            "java.util.regex.Pattern$BitClass",
            "java.awt.Panel",
            "sun.security.x509.X500Name",
            "java.util.EnumSet",
            "org.hibernate.id.IdentifierGenerator",
            "java.awt.datatransfer.FlavorMap",
            "javassist.bytecode.Opcode",
            "java.awt.event.WindowAdapter",
            "java.util.EventListener",
            "javax.persistence.Index",
            "java.awt.peer.TaskbarPeer",
            "org.springframework.security.config.annotation.web.builders.WebSecurity$1",
            "java.awt.PageAttributes$OrientationRequestedType",
            "org.hibernate.boot.model.relational.InitCommand",
            "java.io.FilenameFilter",
            "java.util.Hashtable$Entry",
            "org.springframework.boot.ApplicationArguments",
            "org.springframework.core.env.ConfigurablePropertyResolver",
            "javax.swing.Action",
            "org.dom4j.tree.QNameCache",
            "org.springframework.security.core.CredentialsContainer",
            "java.lang.StackTraceElement",
            "javax.naming.NameNotFoundException",
            "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
            "org.springframework.security.web.session.InvalidSessionStrategy",
            "java.lang.annotation.Target",
            "org.hibernate.usertype.CompositeUserType",
            "org.hibernate.boot.model.relational.QualifiedSequenceName",
            "java.lang.invoke.ClassSpecializer$SpeciesData",
            "org.springframework.context.annotation.ComponentScan",
            "java.awt.event.MouseEvent",
            "org.slf4j.event.SubstituteLoggingEvent",
            "javassist.bytecode.Bytecode",
            "java.io.ObjectInputStream$FieldValues",
            "org.springframework.security.config.annotation.AbstractSecurityBuilder",
            "java.awt.datatransfer.MimeTypeParameterList",
            "org.springframework.http.converter.GenericHttpMessageConverter",
            "java.sql.Connection",
            "org.hibernate.type.BasicTypeRegistry",
            "org.springframework.util.MimeType",
            "org.w3c.dom.DOMStringList",
            "org.springframework.web.bind.annotation.PutMapping",
            "javax.swing.plaf.ToolTipUI",
            "java.beans.VetoableChangeListener",
            "javax.xml.validation.TypeInfoProvider",
            "sun.reflect.generics.tree.ClassSignature",
            "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression",
            "org.hibernate.mapping.MetaAttributable",
            "org.springframework.format.FormatterRegistry",
            "java.lang.invoke.MethodHandle$PolymorphicSignature",
            "org.hibernate.stat.QueryStatistics",
            "org.hibernate.persister.walking.spi.EntityDefinition",
            "javax.accessibility.AccessibleContext",
            "java.util.UUID",
            "org.springframework.core.env.PropertySources",
            "org.hibernate.boot.model.naming.ImplicitNamingStrategy",
            "java.util.spi.LocaleServiceProvider",
            "org.hibernate.boot.SchemaAutoTooling",
            "java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser",
            "java.awt.Robot",
            "org.hibernate.type.CompositeType",
            "org.hibernate.hql.internal.ast.QueryTranslatorImpl",
            "org.w3c.dom.Node",
            "org.w3c.dom.TypeInfo",
            "org.hibernate.engine.jdbc.env.spi.LobCreatorBuilder",
            "antlr.debug.ParserMatchEvent",
            "org.hibernate.boot.model.naming.EntityNaming",
            "sun.reflect.generics.tree.ClassTypeSignature",
            "org.hibernate.engine.spi.RowSelection",
            "javax.security.auth.Subject",
            "antlr.debug.SyntacticPredicateEvent",
            "org.springframework.context.EnvironmentAware",
            "org.hibernate.engine.jdbc.LobCreator",
            "org.dom4j.Element",
            "java.lang.annotation.RetentionPolicy",
            "org.apache.commons.io.LineIterator",
            "org.hibernate.loader.BatchFetchStyle",
            "org.hibernate.criterion.CriteriaQuery",
            "org.hibernate.engine.profile.Association",
            "org.springframework.format.AnnotationFormatterFactory",
            "org.hibernate.engine.query.spi.NativeSQLQueryPlan",
            "org.springframework.jdbc.support.SQLExceptionTranslator",
            "org.apache.commons.lang3.ClassUtils",
            "sun.awt.RequestFocusController",
            "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer$ConcurrencyControlConfigurer",
            "javax.persistence.NamedStoredProcedureQuery",
            "java.io.PrintWriter",
            "javax.swing.event.ChangeEvent",
            "javax.transaction.Transactional",
            "java.io.ObjectInputValidation",
            "sun.reflect.generics.tree.Wildcard",
            "java.awt.Component",
            "org.apache.commons.beanutils.converters.CharacterConverter",
            "org.w3c.dom.DocumentFragment",
            "org.springframework.security.web.authentication.logout.LogoutSuccessHandler",
            "org.springframework.beans.factory.DisposableBean",
            "java.security.Guard",
            "javax.xml.namespace.QName",
            "javax.persistence.TupleElement",
            "java.awt.EventFilter",
            "antlr.TokenStream",
            "java.io.ObjectInputFilter$FilterInfo",
            "org.springframework.http.server.ServerHttpAsyncRequestControl",
            "org.hibernate.boot.model.source.spi.AttributePath",
            "org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration",
            "org.springframework.scheduling.SchedulingTaskExecutor",
            "java.lang.module.ModuleReader",
            "javax.xml.validation.Schema",
            "java.io.BufferedOutputStream",
            "java.awt.event.InvocationEvent",
            "javax.servlet.http.HttpServletRequest",
            "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry",
            "org.springframework.web.servlet.HandlerInterceptor",
            "java.text.CalendarBuilder",
            "javax.persistence.criteria.FetchParent",
            "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$1",
            "org.springframework.security.core.session.SessionInformation",
            "org.springframework.web.servlet.config.annotation.ViewControllerRegistration",
            "javax.xml.stream.EventFilter",
            "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
            "javax.persistence.criteria.Subquery",
            "java.nio.file.attribute.FileStoreAttributeView",
            "org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker",
            "org.hibernate.Interceptor",
            "java.lang.AutoCloseable",
            "java.nio.ByteBuffer",
            "java.awt.Button",
            "org.hibernate.tuple.NonIdentifierAttribute",
            "org.springframework.expression.OperatorOverloader",
            "java.util.stream.IntStream$Builder",
            "java.awt.peer.TextFieldPeer",
            "javax.swing.event.AncestorEvent",
            "org.hibernate.action.spi.AfterTransactionCompletionProcess",
            "org.springframework.web.context.WebApplicationContext",
            "org.hibernate.type.TypeFactory$TypeScope",
            "javax.persistence.Column",
            "org.hibernate.resource.jdbc.spi.JdbcSessionOwner",
            "jdk.internal.reflect.CallerSensitive",
            "org.hibernate.resource.jdbc.ResourceRegistry",
            "org.hibernate.persister.entity.AbstractEntityPersister",
            "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
            "org.hibernate.resource.jdbc.spi.StatementInspector",
            "org.hibernate.type.StringRepresentableType",
            "org.springframework.jdbc.core.PreparedStatementSetter",
            "org.hibernate.boot.model.relational.QualifiedNameImpl",
            "java.awt.GraphicsDevice",
            "org.hibernate.tuple.InMemoryValueGenerationStrategy",
            "antlr.debug.ListenerBase",
            "antlr.Parser",
            "java.util.function.DoubleBinaryOperator",
            "javax.persistence.criteria.CriteriaUpdate",
            "java.awt.peer.ChoicePeer",
            "sun.util.resources.OpenListResourceBundle",
            "javax.accessibility.AccessibleAction",
            "java.awt.font.NumericShaper",
            "javax.swing.event.MenuDragMouseListener",
            "sun.font.FontLineMetrics",
            "java.io.FileDescriptor",
            "org.springframework.web.servlet.config.annotation.InterceptorRegistration",
            "org.hibernate.mapping.Index",
            "org.hibernate.persister.walking.spi.CompositeCollectionElementDefinition",
            "org.hibernate.type.ProcedureParameterNamedBinder",
            "sun.font.AttributeValues",
            "org.hibernate.annotations.common.reflection.ReflectionManager",
            "javax.el.FunctionMapper",
            "java.util.Spliterator$OfLong",
            "javax.persistence.Parameter",
            "java.time.zone.ZoneOffsetTransitionRule",
            "org.hibernate.annotations.common.reflection.ClassLoaderDelegate",
            "org.hibernate.boot.cfgxml.spi.MappingReference$Type",
            "org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry",
            "org.springframework.format.Parser",
            "javax.swing.SingleSelectionModel",
            "org.hibernate.boot.registry.classloading.spi.ClassLoaderService",
            "org.hibernate.engine.spi.ActionQueue$1",
            "org.hibernate.CacheMode",
            "org.springframework.beans.factory.support.BeanNameGenerator",
            "javax.servlet.descriptor.JspConfigDescriptor",
            "org.hibernate.type.CustomType",
            "antlr.ASTFactory",
            "org.springframework.format.Printer",
            "java.nio.file.attribute.UserPrincipal",
            "org.springframework.messaging.Message",
            "org.hibernate.engine.spi.Status",
            "org.hibernate.engine.spi.EntityKey",
            "java.util.stream.Collector$Characteristics",
            "org.hibernate.loader.Loader$SqlStatementWrapper",
            "org.springframework.beans.factory.ObjectFactory",
            "java.awt.font.FontRenderContext",
            "java.io.StringReader",
            "java.security.Provider$Service",
            "org.springframework.beans.factory.BeanFactory",
            "org.hibernate.hql.internal.ast.tree.CollectionPropertyReference",
            "org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler",
            "org.hibernate.boot.model.naming.ImplicitPrimaryKeyJoinColumnNameSource",
            "javassist.expr.NewArray",
            "org.jboss.jandex.ClassInfo",
            "javassist.compiler.ast.FieldDecl",
            "antlr.RecognitionException",
            "sun.java2d.pipe.SpanIterator",
            "org.hibernate.boot.spi.InFlightMetadataCollector",
            "sun.security.x509.RDN",
            "javax.servlet.http.HttpSession",
            "org.hibernate.action.internal.DelayedPostInsertIdentifier",
            "org.hibernate.stat.spi.StatisticsImplementor",
            "org.hibernate.mapping.ValueVisitor",
            "java.time.chrono.Era",
            "java.security.Key",
            "java.awt.PageAttributes",
            "org.springframework.web.servlet.view.AbstractUrlBasedView",
            "org.hibernate.event.spi.AbstractEvent",
            "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
            "org.springframework.web.accept.AbstractMappingContentNegotiationStrategy",
            "org.springframework.messaging.tcp.TcpConnection",
            "java.util.Currency$CurrencyProperty",
            "java.time.temporal.TemporalUnit",
            "java.util.Spliterator$OfDouble",
            "org.hibernate.mapping.RootClass",
            "org.springframework.beans.factory.config.Scope",
            "org.hibernate.action.internal.OrphanRemovalAction",
            "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer",
            "org.jboss.jandex.ThrowsTypeTarget",
            "javassist.bytecode.CodeAttribute$LdcEntry",
            "org.hibernate.engine.loading.internal.CollectionLoadContext",
            "sun.reflect.generics.repository.MethodRepository",
            "java.util.stream.Stream$Builder",
            "javax.swing.TransferHandler",
            "org.dom4j.rule.Pattern",
            "org.springframework.messaging.core.MessagePostProcessor",
            "java.awt.LayoutManager",
            "sun.reflect.generics.tree.ArrayTypeSignature",
            "javax.persistence.Id",
            "java.time.Period",
            "javax.servlet.ServletRequest",
            "java.lang.management.MonitorInfo",
            "java.lang.ref.Cleaner$Cleanable",
            "java.awt.event.FocusEvent$Cause",
            "org.hibernate.hql.spi.FilterTranslator",
            "sun.java2d.pipe.Region",
            "org.springframework.web.socket.sockjs.transport.TransportType",
            "sun.reflect.generics.tree.ShortSignature",
            "org.hibernate.boot.model.naming.ImplicitIdentifierColumnNameSource",
            "org.hibernate.type.TypeResolver",
            "org.hibernate.boot.model.naming.ImplicitConstraintNameSource",
            "java.awt.Taskbar$State",
            "org.springframework.util.StringValueResolver",
            "java.lang.invoke.LambdaForm",
            "org.springframework.jdbc.core.JdbcOperations",
            "org.springframework.jdbc.core.SqlParameter",
            "org.hibernate.cfg.SecondPass",
            "org.jboss.jandex.UnresolvedTypeVariable",
            "org.springframework.web.socket.sockjs.transport.TransportHandler",
            "java.awt.FileDialog",
            "org.springframework.security.web.header.HeaderWriter",
            "sun.reflect.generics.visitor.Visitor",
            "sun.security.util.ObjectIdentifier",
            "org.jboss.jandex.ParameterizedType",
            "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
            "java.time.chrono.ChronoLocalDateTime",
            "org.hibernate.jdbc.WorkExecutorVisitable",
            "org.jboss.jandex.MethodInternal",
            "org.hibernate.boot.jaxb.internal.MappingBinder",
            "org.springframework.beans.factory.config.NamedBeanHolder",
            "sun.reflect.generics.repository.GenericDeclRepository",
            "java.awt.peer.ListPeer",
            "javax.el.BeanELResolver",
            "javax.swing.TransferHandler$DropLocation",
            "javax.xml.stream.util.XMLEventConsumer",
            "sun.reflect.generics.repository.FieldRepository",
            "org.springframework.core.env.ConfigurableEnvironment",
            "org.hibernate.persister.walking.spi.CollectionElementDefinition",
            "javassist.expr.ConstructorCall",
            "java.awt.font.GlyphMetrics",
            "javax.xml.datatype.DatatypeConstants$Field",
            "org.hibernate.boot.model.naming.ObjectNameNormalizer",
            "java.awt.ActiveEvent",
            "java.awt.desktop.OpenFilesHandler",
            "org.hibernate.annotations.common.reflection.XProperty",
            "javassist.compiler.ast.AssignExpr",
            "org.hibernate.tuple.ValueGenerator",
            "org.springframework.web.socket.sockjs.support.AbstractSockJsService",
            "java.awt.image.TileObserver",
            "sun.reflect.generics.tree.CharSignature",
            "javassist.compiler.ast.Keyword",
            "org.hibernate.boot.model.naming.ImplicitMapKeyColumnNameSource",
            "org.springframework.messaging.simp.config.TaskExecutorRegistration",
            "org.springframework.jdbc.support.KeyHolder",
            "org.springframework.beans.factory.support.BeanDefinitionRegistry",
            "org.hibernate.type.ForeignKeyDirection",
            "java.lang.NullPointerException",
            "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
            "javax.persistence.metamodel.MapAttribute",
            "org.jboss.jandex.MethodInfo",
            "javax.xml.stream.events.XMLEvent",
            "org.dom4j.DocumentType",
            "org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle",
            "javassist.compiler.MemberResolver$Method",
            "javax.persistence.criteria.Path",
            "org.hibernate.cache.spi.TimestampsRegion",
            "sun.reflect.annotation.AnnotationType",
            "org.hibernate.annotations.MetaValue",
            "java.awt.Font",
            "org.springframework.data.domain.Example",
            "sun.security.util.BitArray",
            "java.util.AbstractSequentialList",
            "org.hibernate.engine.spi.LoadQueryInfluencers",
            "java.awt.JobAttributes$DefaultSelectionType",
            "javax.servlet.ServletInputStream",
            "java.text.ParsePosition",
            "org.hibernate.loader.OuterJoinLoader",
            "java.util.Deque",
            "org.springframework.web.servlet.support.BindStatus",
            "org.hibernate.tuple.Tuplizer",
            "java.awt.AWTEvent",
            "java.text.spi.DateFormatProvider",
            "org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner",
            "org.hibernate.engine.loading.internal.LoadContexts",
            "javax.persistence.TemporalType",
            "org.springframework.security.provisioning.UserDetailsManager",
            "org.hibernate.Session$LockRequest",
            "javax.swing.JPopupMenu",
            "java.text.spi.NumberFormatProvider",
            "javassist.expr.ExprEditor$LoopContext",
            "org.springframework.security.authentication.dao.DaoAuthenticationProvider",
            "org.hibernate.tuple.GenerationTiming",
            "java.text.DateFormatSymbols",
            "org.hibernate.engine.spi.CollectionKey",
            "org.hibernate.hql.internal.ast.TypeDiscriminatorMetadata",
            "antlr.debug.GuessingEvent",
            "java.util.logging.Logger$LoggerBundle",
            "org.hibernate.boot.jaxb.Origin",
            "java.lang.IndexOutOfBoundsException",
            "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder",
            "org.hibernate.mapping.Property",
            "javax.persistence.MappedSuperclass",
            "org.hibernate.sql.JoinFragment",
            "java.time.ZonedDateTime",
            "org.hibernate.event.service.spi.DuplicationStrategy",
            "org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource",
            "org.xml.sax.DTDHandler",
            "java.io.ObjectStreamField",
            "org.jboss.jandex.AnnotationValue",
            "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandler",
            "org.hibernate.engine.jdbc.dialect.spi.DialectResolver",
            "java.awt.Frame",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.scheduling.Trigger",
            "java.math.MathContext",
            "org.springframework.web.servlet.mvc.AbstractController",
            "jdk.internal.vm.annotation.DontInline",
            "java.time.ZoneId",
            "java.security.Permission",
            "org.springframework.data.domain.ExampleMatcher$StringMatcher",
            "java.lang.StringBuilder",
            "javax.servlet.annotation.MultipartConfig",
            "org.hibernate.engine.jdbc.env.spi.JdbcEnvironment",
            "jdk.internal.org.objectweb.asm.MethodWriter",
            "org.hibernate.engine.jdbc.batch.spi.BatchKey",
            "java.awt.image.Raster",
            "org.hibernate.boot.model.relational.Exportable",
            "java.lang.ref.SoftReference",
            "org.jboss.jandex.PrimitiveType",
            "org.springframework.http.HttpMethod",
            "org.springframework.security.web.access.AccessDeniedHandler",
            "javax.persistence.AccessType",
            "javax.accessibility.AccessibleTable",
            "java.awt.ComponentOrientation",
            "org.springframework.context.ApplicationEvent",
            "org.hibernate.persister.collection.QueryableCollection",
            "org.hibernate.id.insert.IdentifierGeneratingInsert",
            "org.springframework.security.web.header.HeaderWriterFilter",
            "org.apache.commons.beanutils.converters.DoubleConverter",
            "org.hibernate.hql.internal.ast.tree.AbstractStatement",
            "java.net.SocketOption",
            "org.springframework.messaging.simp.SimpMessageHeaderAccessor",
            "org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy",
            "org.springframework.util.concurrent.ListenableFutureTask",
            "javax.xml.stream.XMLStreamReader",
            "org.springframework.web.context.request.RequestAttributes",
            "java.util.concurrent.Delayed",
            "org.hibernate.engine.internal.ParameterBinder$NamedParameterSource",
            "org.hibernate.tuple.component.ComponentMetamodel",
            "java.awt.Image",
            "java.security.DomainCombiner",
            "java.awt.dnd.DragSource",
            "org.springframework.http.MediaType",
            "java.time.Instant",
            "org.springframework.data.domain.Sort$NullHandling",
            "org.springframework.core.convert.Property",
            "antlr.debug.ParserMatchListener",
            "java.nio.channels.SeekableByteChannel",
            "org.springframework.data.domain.ExampleMatcher$MatcherConfigurer",
            "org.springframework.core.AttributeAccessorSupport",
            "org.hibernate.SharedSessionContract",
            "javassist.ClassPool",
            "org.jboss.logging.Logger",
            "org.hibernate.loader.PropertyPath",
            "java.net.Proxy$Type",
            "javax.xml.stream.events.Attribute",
            "org.hibernate.action.internal.BulkOperationCleanupAction",
            "java.awt.event.HierarchyEvent",
            "org.hibernate.boot.model.naming.ImplicitForeignKeyNameSource",
            "org.springframework.context.ApplicationEventPublisherAware",
            "java.util.concurrent.RunnableFuture",
            "java.lang.invoke.WrongMethodTypeException",
            "org.w3c.dom.NodeList",
            "java.lang.module.ModuleDescriptor$Provides",
            "java.lang.Appendable",
            "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer",
            "sun.util.locale.provider.LocaleResources",
            "org.springframework.boot.SpringApplicationRunListener",
            "org.hibernate.mapping.DenormalizedTable",
            "org.springframework.security.web.authentication.rememberme.PersistentTokenRepository",
            "org.hibernate.tuple.entity.EntityMetamodel",
            "org.springframework.security.config.annotation.web.WebSecurityConfigurer",
            "org.hibernate.Cache",
            "java.lang.Object",
            "java.awt.CompositeContext",
            "java.util.function.DoublePredicate",
            "org.springframework.jdbc.core.CallableStatementCallback",
            "java.awt.ImageCapabilities",
            "javax.accessibility.AccessibleSelection",
            "org.springframework.core.task.AsyncTaskExecutor",
            "java.awt.geom.Rectangle2D",
            "java.lang.management.ThreadInfo",
            "org.springframework.web.accept.MediaTypeFileExtensionResolver",
            "javax.persistence.CascadeType",
            "org.hibernate.hql.internal.ast.tree.DotNode",
            "org.springframework.security.authentication.AuthenticationTrustResolver",
            "org.hibernate.boot.jaxb.SourceType",
            "java.time.format.ResolverStyle",
            "org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$HstsConfig",
            "org.jboss.jandex.NameTable",
            "org.slf4j.helpers.SubstituteLogger",
            "java.util.function.ObjIntConsumer",
            "javax.xml.transform.Source",
            "javax.swing.plaf.ButtonUI",
            "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
            "java.lang.VirtualMachineError",
            "org.hibernate.engine.spi.SessionOwner",
            "org.hibernate.boot.archive.spi.InputStreamAccess",
            "java.lang.management.LockInfo",
            "sun.reflect.generics.tree.VoidDescriptor",
            "org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform",
            "org.hibernate.internal.SessionImpl$1",
            "org.hibernate.hql.internal.ast.tree.AggregatedSelectExpression",
            "javassist.util.proxy.MethodHandler",
            "sun.font.Font2D",
            "jdk.internal.org.objectweb.asm.ModuleVisitor",
            "java.awt.dnd.DragSourceContext",
            "javax.transaction.SystemException",
            "java.awt.peer.FileDialogPeer",
            "org.springframework.security.web.authentication.AuthenticationFailureHandler",
            "javax.el.ELContext",
            "org.springframework.data.domain.ExampleMatcher$NullHandler",
            "org.hibernate.transform.ResultTransformer",
            "org.springframework.security.config.annotation.web.configurers.AbstractInterceptUrlConfigurer",
            "java.awt.desktop.PreferencesEvent",
            "javassist.compiler.ast.Declarator",
            "java.net.URL",
            "java.io.ObjectOutput",
            "org.slf4j.LoggerFactory",
            "java.util.regex.MatchResult",
            "java.lang.Enum",
            "org.hibernate.proxy.HibernateProxy",
            "java.awt.event.WindowListener",
            "java.nio.file.PathMatcher",
            "java.net.URI",
            "javassist.CtMethod$ConstParameter",
            "org.hibernate.engine.jdbc.spi.JdbcCoordinator",
            "org.hibernate.mapping.DependantValue",
            "org.hibernate.action.spi.Executable",
            "org.springframework.scheduling.TaskScheduler",
            "javax.swing.JMenu",
            "java.util.NavigableSet",
            "org.springframework.security.config.annotation.SecurityConfigurerAdapter",
            "sun.reflect.generics.tree.FieldTypeSignature",
            "org.springframework.data.domain.Slice",
            "javax.swing.event.MenuListener",
            "java.net.URLStreamHandler",
            "java.awt.event.HierarchyListener",
            "java.lang.invoke.LambdaFormBuffer",
            "java.nio.channels.NetworkChannel",
            "org.hibernate.mapping.IdentifierBag",
            "org.jboss.jandex.AnnotationTarget$Kind",
            "java.awt.font.TransformAttribute",
            "java.net.ContentHandlerFactory",
            "org.hibernate.resource.transaction.backend.jta.internal.synchronization.AfterCompletionAction",
            "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
            "org.dom4j.DocumentFactory",
            "sun.reflect.generics.repository.ConstructorRepository",
            "java.lang.invoke.Invokers",
            "jdk.internal.HotSpotIntrinsicCandidate",
            "javax.persistence.criteria.PluralJoin",
            "javax.swing.TransferHandler$HasGetTransferHandler",
            "java.lang.management.OperatingSystemMXBean",
            "javax.persistence.criteria.Expression",
            "java.util.Hashtable",
            "javax.persistence.criteria.CompoundSelection",
            "org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer",
            "java.beans.PropertyEditor",
            "sun.awt.PeerEvent",
            "javax.servlet.http.HttpServletResponse",
            "org.springframework.context.ApplicationContext",
            "org.springframework.web.socket.sockjs.transport.SockJsSessionFactory",
            "jdk.internal.org.objectweb.asm.Label",
            "org.apache.commons.lang3.builder.Builder",
            "javax.servlet.DispatcherType",
            "org.hibernate.jdbc.ReturningWork",
            "org.springframework.util.StringUtils",
            "java.awt.Color",
            "antlr.collections.AST",
            "org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler",
            "org.hibernate.action.internal.EntityUpdateAction",
            "org.w3c.dom.Document",
            "javax.persistence.QueryHint",
            "org.hibernate.sql.CaseFragment",
            "java.sql.SQLType",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata",
            "java.nio.file.Path",
            "org.springframework.core.io.Resource",
            "org.springframework.security.web.access.expression.AbstractVariableEvaluationContextPostProcessor",
            "java.awt.peer.ContainerPeer",
            "java.time.temporal.TemporalField",
            "java.util.concurrent.BlockingQueue",
            "javassist.bytecode.StackMap",
            "java.lang.invoke.MemberName",
            "java.util.function.ToDoubleFunction",
            "java.io.ObjectInputStream$GetField",
            "org.hibernate.boot.model.TypeContributions",
            "org.springframework.security.authentication.UsernamePasswordAuthenticationToken",
            "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl",
            "antlr.collections.impl.BitSet",
            "java.io.ByteArrayOutputStream",
            "org.hibernate.engine.internal.SessionEventListenerManagerImpl",
            "org.springframework.security.web.authentication.RememberMeServices",
            "org.hibernate.persister.entity.Queryable",
            "org.hibernate.boot.Metadata",
            "jdk.internal.org.objectweb.asm.Context",
            "org.springframework.web.bind.annotation.RequestBody",
            "java.util.Calendar",
            "java.text.AttributedCharacterIterator$Attribute",
            "org.springframework.security.web.authentication.logout.LogoutFilter",
            "java.awt.Container",
            "org.springframework.core.convert.ConversionService",
            "sun.util.logging.PlatformLogger",
            "java.time.format.TextStyle",
            "org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn$TraceLogger",
            "javax.persistence.metamodel.SetAttribute",
            "java.lang.invoke.LambdaForm$NamedFunction",
            "org.hibernate.engine.jdbc.Size$LobMultiplier",
            "org.hibernate.stat.SecondLevelCacheStatistics",
            "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
            "org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices",
            "org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement",
            "javax.servlet.FilterRegistration$Dynamic",
            "java.awt.desktop.PrintFilesEvent",
            "java.security.cert.X509Certificate",
            "javax.xml.transform.Result",
            "org.springframework.boot.SpringApplication",
            "sun.awt.AppContext",
            "org.springframework.web.servlet.view.UrlBasedViewResolver",
            "org.hibernate.proxy.EntityNotFoundDelegate",
            "java.util.function.LongToDoubleFunction",
            "javax.servlet.ServletRegistration$Dynamic",
            "java.awt.JobAttributes$DialogType",
            "java.awt.peer.DesktopPeer",
            "org.springframework.boot.ApplicationRunner",
            "org.hibernate.mapping.Column",
            "sun.nio.ch.Interruptible",
            "org.hibernate.engine.spi.FilterDefinition",
            "java.nio.charset.CharsetEncoder",
            "org.hibernate.hql.internal.ast.tree.FromClause",
            "org.springframework.security.web.authentication.logout.LogoutHandler",
            "javax.persistence.criteria.CriteriaBuilder$Trimspec",
            "org.springframework.core.env.MutablePropertySources",
            "java.io.DataInputStream",
            "org.hibernate.engine.OptimisticLockStyle",
            "org.springframework.beans.PropertyAccessor",
            "java.lang.FunctionalInterface",
            "java.nio.channels.spi.AbstractSelector",
            "javax.persistence.metamodel.Type$PersistenceType",
            "org.hibernate.hql.internal.ast.tree.DisplayableNode",
            "java.util.Locale$Category",
            "javax.persistence.Cache",
            "sun.awt.ComponentFactory",
            "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
            "org.springframework.core.convert.converter.Converter",
            "java.lang.Package",
            "java.lang.ref.Cleaner",
            "java.util.function.Consumer",
            "java.lang.invoke.LambdaForm$Name",
            "org.hibernate.type.VersionType",
            "jdk.internal.org.objectweb.asm.MethodVisitor",
            "java.util.concurrent.ConcurrentHashMap$CollectionView",
            "java.time.format.DateTimeFormatter",
            "org.hibernate.boot.archive.scan.spi.ScanEnvironment",
            "org.hibernate.hql.internal.ast.HqlSqlWalker",
            "antlr.CharFormatter",
            "org.hibernate.action.internal.EntityInsertAction",
            "java.awt.dnd.DropTarget",
            "java.awt.Choice",
            "org.apache.commons.beanutils.PropertyUtils",
            "org.hibernate.engine.query.spi.FilterQueryPlan",
            "org.hibernate.SynchronizeableQuery",
            "org.hibernate.boot.model.naming.Identifier",
            "org.hibernate.engine.spi.ExecutableList",
            "java.sql.ResultSet",
            "java.nio.file.Watchable",
            "org.springframework.security.web.session.SessionInformationExpiredStrategy",
            "org.hibernate.hql.internal.ast.tree.PathNode",
            "javax.swing.ButtonModel",
            "org.w3c.dom.DOMImplementation",
            "antlr.collections.impl.Vector",
            "org.hibernate.LockOptions",
            "javassist.compiler.TypeChecker",
            "java.lang.reflect.AnnotatedType",
            "java.awt.PageAttributes$OriginType",
            "org.springframework.boot.SpringBootExceptionHandler",
            "java.time.chrono.Chronology",
            "java.awt.geom.RectangularShape",
            "org.hibernate.loader.JoinWalker$AssociationInitCallback",
            "java.text.spi.DecimalFormatSymbolsProvider",
            "org.hibernate.SessionEventListener",
            "java.lang.invoke.VarHandle$TypesAndInvokers",
            "org.springframework.jdbc.datasource.init.DatabasePopulator",
            "org.hibernate.tuple.ValueGeneration",
            "java.util.function.ToIntBiFunction",
            "org.hibernate.tool.schema.extract.spi.SequenceInformation",
            "java.lang.reflect.Parameter",
            "org.hibernate.id.PostInsertIdentityPersister",
            "java.util.LinkedHashSet",
            "javax.persistence.criteria.Root",
            "org.hibernate.procedure.ProcedureCall",
            "org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext",
            "javax.transaction.UserTransaction",
            "javax.xml.stream.StreamFilter",
            "java.awt.peer.DialogPeer",
            "org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor",
            "org.springframework.security.access.SecurityMetadataSource",
            "org.hibernate.jdbc.Work",
            "org.slf4j.Marker",
            "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder",
            "java.lang.ClassNotFoundException",
            "java.awt.im.InputMethodHighlight",
            "java.awt.event.ContainerEvent",
            "javassist.CtMethod",
            "java.util.concurrent.ScheduledFuture",
            "org.hibernate.loader.JoinWalker",
            "java.lang.PublicMethods$MethodList",
            "org.springframework.boot.Banner$Mode",
            "antlr.debug.ParserListener",
            "org.hibernate.event.spi.MergeEvent",
            "org.hibernate.loader.custom.CustomQuery",
            "javax.el.BeanELResolver$BeanProperty",
            "java.lang.Class$AnnotationData",
            "java.time.OffsetTime",
            "java.nio.CharBuffer",
            "org.springframework.messaging.simp.SimpMessageType",
            "javax.accessibility.AccessibleState",
            "java.awt.event.ComponentEvent",
            "org.hibernate.resource.jdbc.LogicalConnection",
            "org.springframework.core.SerializableTypeWrapper$TypeProvider",
            "org.hibernate.cache.spi.Region",
            "java.util.AbstractSet",
            "java.lang.Character$Subset",
            "org.springframework.messaging.support.ChannelInterceptor",
            "sun.management.spi.PlatformMBeanProvider$PlatformComponent",
            "org.hibernate.boot.model.naming.ImplicitAnyDiscriminatorColumnNameSource",
            "javassist.compiler.TokenId",
            "org.springframework.core.convert.TypeDescriptor",
            "org.springframework.security.core.userdetails.UserDetails",
            "javax.servlet.http.Cookie",
            "java.beans.PropertyChangeEvent",
            "org.springframework.beans.BeanMetadataElement",
            "javassist.bytecode.ClassFile",
            "java.awt.Container$EventTargetFilter",
            "org.hibernate.hql.internal.antlr.HqlBaseParser",
            "org.springframework.beans.factory.NamedBean",
            "java.awt.Taskbar$Feature",
            "sun.reflect.generics.tree.TypeTree",
            "sun.util.locale.BaseLocale",
            "java.nio.file.WatchService",
            "org.hibernate.secure.spi.GrantedPermission",
            "java.security.Timestamp",
            "java.nio.channels.GatheringByteChannel",
            "org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer",
            "org.w3c.dom.Text",
            "org.hibernate.engine.jdbc.env.spi.QualifiedObjectNameFormatter",
            "java.lang.annotation.Inherited",
            "org.hibernate.engine.spi.ActionQueue$AbstractTransactionCompletionProcessQueue",
            "org.jboss.jandex.TypeParameterTypeTarget",
            "org.hibernate.hql.spi.id.MultiTableBulkIdStrategy",
            "java.net.ServerSocket",
            "org.dom4j.Entity",
            "org.springframework.security.config.annotation.web.configurers.JeeConfigurer",
            "org.apache.commons.lang3.tuple.Pair",
            "java.time.Duration",
            "java.awt.desktop.AboutEvent",
            "java.time.ZoneOffset",
            "java.util.concurrent.locks.AbstractOwnableSynchronizer",
            "java.awt.dnd.DropTargetContext",
            "org.hibernate.event.spi.ResolveNaturalIdEvent",
            "org.dom4j.ProcessingInstruction",
            "java.awt.font.GlyphJustificationInfo",
            "java.awt.peer.ComponentPeer",
            "java.util.GregorianCalendar",
            "java.lang.module.ModuleDescriptor$Version",
            "org.hibernate.SessionFactory",
            "org.hibernate.cache.spi.NaturalIdRegion",
            "javax.management.MBeanNotificationInfo",
            "org.springframework.security.authentication.AbstractAuthenticationToken",
            "javax.sql.CommonDataSource",
            "java.nio.channels.Pipe$SourceChannel",
            "java.awt.Adjustable",
            "org.springframework.boot.ExitCodeGenerator",
            "org.springframework.context.ApplicationContextAware",
            "org.hibernate.engine.query.spi.NamedParameterDescriptor",
            "java.nio.channels.Selector",
            "java.util.function.DoubleFunction",
            "org.hibernate.event.spi.EvictEvent",
            "java.util.Locale$IsoCountryCode",
            "org.xml.sax.Locator",
            "org.springframework.data.repository.NoRepositoryBean",
            "org.hibernate.tuple.entity.VersionProperty",
            "org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer",
            "java.util.StringTokenizer",
            "org.hibernate.resource.transaction.TransactionCoordinatorBuilder$TransactionCoordinatorOptions",
            "org.hibernate.boot.model.TypeContributor",
            "org.springframework.web.servlet.resource.ResourceResolverChain",
            "org.hibernate.action.internal.EntityAction",
            "org.hibernate.type.descriptor.sql.SqlTypeDescriptor",
            "javax.management.openmbean.CompositeData",
            "java.awt.desktop.QuitEvent",
            "javassist.compiler.ast.CondExpr",
            "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl",
            "org.hibernate.annotations.common.reflection.XMember",
            "org.springframework.context.Lifecycle",
            "java.util.concurrent.atomic.AtomicLong",
            "org.hibernate.tool.hbm2ddl.IndexMetadata",
            "org.springframework.web.servlet.View",
            "javax.servlet.annotation.HttpConstraint",
            "java.util.function.LongUnaryOperator",
            "org.hibernate.hql.internal.ast.tree.Node",
            "java.time.DayOfWeek",
            "org.dom4j.QName",
            "sun.util.resources.TimeZoneNamesBundle",
            "org.springframework.security.config.annotation.web.configurers.X509Configurer",
            "org.springframework.messaging.simp.SimpMessageSendingOperations",
            "org.hibernate.loader.Loader$1",
            "org.hibernate.engine.profile.Fetch$Style",
            "org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken",
            "javax.persistence.criteria.Join",
            "java.util.ListIterator",
            "java.util.spi.CalendarNameProvider",
            "javax.management.MBeanAttributeInfo",
            "sun.reflect.generics.tree.Signature",
            "org.springframework.security.web.session.SessionInformationExpiredEvent",
            "org.hibernate.dialect.function.SQLFunction",
            "javax.swing.ComponentInputMap",
            "org.hibernate.EntityNameResolver",
            "org.springframework.core.MethodParameter",
            "org.springframework.data.repository.Repository",
            "java.sql.RowIdLifetime",
            "javax.accessibility.AccessibleRelation",
            "org.springframework.web.servlet.support.RequestContext",
            "javax.persistence.PersistenceProperty",
            "org.hibernate.action.internal.QueuedOperationCollectionAction",
            "org.hibernate.secure.spi.JaccPermissionDeclarations",
            "javassist.util.proxy.MethodFilter",
            "jdk.internal.org.objectweb.asm.Type",
            "java.nio.file.FileSystem",
            "jdk.internal.module.ModuleTarget",
            "java.awt.event.WindowEvent",
            "org.hibernate.exception.spi.SQLExceptionConverter",
            "java.awt.dnd.peer.DropTargetContextPeer",
            "java.text.AttributedCharacterIterator",
            "javax.swing.event.PopupMenuEvent",
            "org.hibernate.persister.entity.Loadable",
            "java.io.ObjectInput",
            "java.util.Spliterator",
            "java.awt.desktop.PreferencesHandler",
            "org.hibernate.engine.spi.NamedSQLQueryDefinition",
            "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$1",
            "javassist.compiler.ProceedHandler",
            "java.util.function.DoubleUnaryOperator",
            "javax.persistence.Subgraph",
            "org.hibernate.ConnectionAcquisitionMode",
            "java.util.concurrent.ConcurrentMap",
            "java.util.logging.Level",
            "org.hibernate.dialect.unique.UniqueDelegate",
            "java.lang.Thread$UncaughtExceptionHandler",
            "org.springframework.expression.TypeLocator",
            "org.hibernate.event.spi.DeleteEvent",
            "org.springframework.beans.factory.BeanNameAware",
            "org.apache.commons.beanutils.converters.ShortConverter",
            "java.time.chrono.ChronoLocalDate",
            "org.hibernate.result.Outputs",
            "javax.accessibility.AccessibleStateSet",
            "sun.reflect.generics.tree.LongSignature",
            "java.util.concurrent.locks.Condition",
            "org.hibernate.cfg.PropertyData",
            "javassist.util.proxy.ProxyFactory",
            "java.util.Comparator",
            "javassist.bytecode.ConstPool",
            "java.awt.BufferCapabilities$FlipContents",
            "java.util.function.UnaryOperator",
            "java.util.DoubleSummaryStatistics",
            "org.hibernate.SharedSessionBuilder",
            "java.util.concurrent.RejectedExecutionHandler",
            "org.hibernate.tuple.entity.EntityTuplizer",
            "org.hibernate.boot.archive.scan.spi.ScanOptions",
            "org.hibernate.Query",
            "java.awt.event.TextListener",
            "java.awt.Dialog",
            "javax.transaction.Synchronization",
            "org.hibernate.tool.schema.spi.Exporter",
            "java.text.CharacterIterator",
            "java.lang.AssertionStatusDirectives",
            "java.lang.invoke.LambdaForm$Hidden",
            "java.net.Authenticator$RequestorType",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$FrameOptionsConfig",
            "java.security.PrivilegedExceptionAction",
            "java.io.ObjectStreamClass$FieldReflector",
            "org.springframework.core.io.InputStreamSource",
            "java.awt.datatransfer.MimeType",
            "sun.security.util.DerEncoder",
            "org.hibernate.persister.walking.spi.CollectionDefinition",
            "org.springframework.util.concurrent.ListenableFuture",
            "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$RequiresChannelUrl",
            "org.jboss.jandex.DotName",
            "java.nio.file.attribute.GroupPrincipal",
            "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
            "java.util.RandomAccess",
            "javax.persistence.criteria.Predicate$BooleanOperator",
            "org.springframework.jdbc.core.StatementCallback",
            "org.hibernate.hql.internal.ast.tree.SelectClause",
            "org.springframework.util.PathMatcher",
            "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
            "java.awt.Window",
            "java.io.FileOutputStream",
            "java.awt.desktop.AboutHandler",
            "java.awt.desktop.QuitHandler",
            "org.hibernate.loader.BasicLoader",
            "java.io.File",
            "org.hibernate.boot.model.naming.ImplicitNameSource",
            "antlr.TokenBuffer",
            "java.time.format.DecimalStyle",
            "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification",
            "org.hibernate.event.spi.LoadEvent",
            "java.net.SocketImpl",
            "org.hibernate.jdbc.WorkExecutor",
            "java.lang.IllegalStateException",
            "javassist.compiler.AccessorMaker",
            "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
            "antlr.debug.ParserTokenEvent",
            "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
            "org.hibernate.LobHelper",
            "org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer",
            "org.hibernate.exception.spi.ConversionContext",
            "org.hibernate.tool.schema.extract.spi.TableInformation",
            "java.lang.Byte",
            "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker",
            "org.hibernate.type.LiteralType",
            "javax.persistence.metamodel.Attribute",
            "jdk.internal.org.objectweb.asm.Attribute",
            "org.springframework.context.ApplicationListener",
            "org.hibernate.boot.model.naming.ImplicitIndexColumnNameSource",
            "java.time.OffsetDateTime",
            "org.hibernate.persister.walking.spi.EntityIdentifierDefinition",
            "org.apache.commons.lang3.builder.ToStringBuilder",
            "java.lang.reflect.Modifier",
            "org.springframework.security.web.header.writers.frameoptions.AllowFromStrategy",
            "org.springframework.cache.Cache",
            "java.awt.datatransfer.Transferable",
            "java.util.HashMap",
            "org.springframework.data.repository.CrudRepository",
            "org.springframework.security.web.PortMapper",
            "org.hibernate.procedure.spi.ParameterStrategy",
            "org.hibernate.engine.jdbc.batch.spi.BatchObserver",
            "antlr.debug.MessageListener",
            "javax.management.openmbean.CompositeType",
            "org.hibernate.boot.spi.NaturalIdUniqueKeyBinder",
            "java.security.cert.CertPath",
            "java.lang.IllegalArgumentException",
            "java.nio.channels.ServerSocketChannel",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity$MvcMatchersRequestMatcherConfigurer",
            "java.awt.image.ColorModel",
            "java.awt.dnd.DragSourceDragEvent",
            "java.sql.ShardingKey",
            "org.hibernate.bytecode.spi.EntityInstrumentationMetadata",
            "java.util.Collections",
            "java.nio.MappedByteBuffer",
            "java.util.logging.LogManager$LoggerContext",
            "org.hibernate.persister.entity.UniqueKeyLoadable",
            "org.springframework.validation.Validator",
            "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler",
            "java.util.concurrent.Future",
            "sun.util.calendar.Era",
            "java.lang.Thread",
            "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer$1",
            "org.springframework.security.provisioning.GroupManager",
            "org.hibernate.NaturalIdLoadAccess",
            "javax.servlet.RequestDispatcher",
            "javassist.ClassMap",
            "org.hibernate.mapping.Value",
            "java.nio.charset.CharsetDecoder",
            "java.awt.event.KeyEvent",
            "org.hibernate.dialect.Dialect",
            "org.hibernate.engine.jdbc.spi.TypeSearchability",
            "org.hibernate.type.ForeignKeyDirection$1",
            "javax.xml.parsers.DocumentBuilderFactory",
            "java.awt.geom.GeneralPath",
            "org.springframework.core.Ordered",
            "java.lang.invoke.MethodHandle",
            "jdk.internal.module.ServicesCatalog$ServiceProvider",
            "antlr.Token",
            "java.sql.DatabaseMetaData",
            "java.awt.image.ImageConsumer",
            "org.hibernate.loader.entity.UniqueEntityLoader",
            "java.time.zone.ZoneRules",
            "javassist.compiler.ast.InstanceOfExpr",
            "javax.xml.stream.XMLReporter",
            "java.text.Collator",
            "org.hibernate.boot.spi.MappingDefaults",
            "org.hibernate.secure.spi.PermissibleAction$1",
            "sun.util.calendar.Gregorian",
            "org.springframework.data.domain.ExampleMatcher$PropertyValueTransformer",
            "org.springframework.util.IdGenerator",
            "java.beans.BeanProperty",
            "org.apache.commons.beanutils.converters.BigDecimalConverter",
            "jdk.internal.reflect.FieldAccessor",
            "org.jboss.jandex.TypeParameterBoundTypeTarget",
            "java.awt.event.ItemListener",
            "org.springframework.messaging.support.NativeMessageHeaderAccessor",
            "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter",
            "java.sql.Array",
            "javassist.CtField$Initializer",
            "org.apache.commons.beanutils.converters.AbstractConverter",
            "org.hibernate.cache.spi.UpdateTimestampsCache",
            "org.hibernate.event.spi.LockEvent",
            "java.lang.reflect.Method",
            "org.hibernate.ReplicationMode$1",
            "org.hibernate.engine.spi.ActionQueue$ListProvider",
            "java.util.NavigableMap",
            "org.springframework.expression.EvaluationContext",
            "java.awt.peer.MenuItemPeer",
            "org.hibernate.engine.jdbc.spi.StatementPreparer",
            "org.hibernate.annotations.common.reflection.XMethod",
            "org.hibernate.engine.spi.UnsavedValueStrategy",
            "org.springframework.beans.factory.config.AutowireCapableBeanFactory",
            "java.awt.image.BufferedImageOp",
            "org.springframework.security.web.access.intercept.FilterSecurityInterceptor",
            "java.awt.peer.ScrollPanePeer",
            "javax.persistence.TableGenerator",
            "java.nio.charset.CodingErrorAction",
            "org.hibernate.boot.model.relational.QualifiedName",
            "antlr.CommonAST",
            "org.springframework.http.converter.AbstractHttpMessageConverter",
            "org.hibernate.mapping.ManyToOne",
            "java.nio.DoubleBuffer",
            "java.awt.EventFilter$FilterAction",
            "org.springframework.http.HttpInputMessage",
            "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer",
            "org.hibernate.engine.query.spi.QueryPlanCache",
            "org.springframework.core.ParameterNameDiscoverer",
            "org.hibernate.persister.entity.AbstractEntityPersister$CacheEntryHelper",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.hibernate.cache.spi.QueryCache",
            "sun.util.logging.PlatformLogger$Bridge",
            "java.nio.channels.FileChannel$MapMode",
            "javax.transaction.xa.XAResource",
            "javax.persistence.criteria.Predicate",
            "java.sql.ParameterMetaData",
            "java.awt.Event",
            "javassist.compiler.JvstTypeChecker",
            "jdk.internal.loader.AbstractClassLoaderValue$Sub",
            "jdk.internal.org.objectweb.asm.FieldVisitor",
            "javassist.compiler.ast.BinExpr",
            "java.awt.geom.Path2D$Float",
            "org.apache.commons.beanutils.converters.BigIntegerConverter",
            "java.lang.Exception",
            "java.beans.PropertyChangeListener",
            "org.hibernate.resource.jdbc.spi.PhysicalJdbcTransaction",
            "java.sql.RowId",
            "org.dom4j.Attribute",
            "javax.el.VariableMapper",
            "java.lang.reflect.AnnotatedElement",
            "java.awt.event.TextEvent",
            "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
            "org.hibernate.Criteria",
            "org.springframework.beans.BeanWrapper",
            "org.hibernate.exception.spi.ViolatedConstraintNameExtracter",
            "java.util.concurrent.Callable",
            "java.util.ArrayList",
            "java.text.Format$FieldDelegate",
            "java.lang.module.ResolvedModule",
            "org.springframework.format.Formatter",
            "org.springframework.boot.autoconfigure.SpringBootApplication",
            "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl",
            "javax.swing.ButtonGroup",
            "java.awt.font.GlyphVector",
            "org.springframework.messaging.tcp.TcpConnectionHandler",
            "org.springframework.web.servlet.support.WebContentGenerator",
            "org.hibernate.dialect.pagination.LimitHandler",
            "java.awt.peer.MenuPeer",
            "org.hibernate.engine.spi.IdentifierValue",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity$RequestMatcherConfigurer",
            "javax.swing.JLayeredPane",
            "org.springframework.jdbc.core.BatchPreparedStatementSetter",
            "java.awt.image.ImageObserver",
            "org.hibernate.mapping.ToOne",
            "javax.xml.stream.XMLStreamConstants",
            "javax.xml.datatype.Duration",
            "org.hibernate.cache.spi.access.NaturalIdRegionAccessStrategy",
            "jdk.internal.reflect.ConstructorAccessor",
            "java.text.DateFormat",
            "java.time.DateTimeException",
            "java.lang.module.ModuleDescriptor$Opens",
            "org.springframework.web.socket.sockjs.transport.SockJsServiceConfig",
            "org.hibernate.mapping.Bag",
            "org.hibernate.mapping.Collection",
            "org.hibernate.tool.schema.extract.spi.ColumnInformation",
            "jdk.internal.org.objectweb.asm.Frame",
            "org.springframework.context.annotation.Configuration",
            "java.lang.Class$ReflectionData",
            "org.springframework.core.io.ProtocolResolver",
            "org.xml.sax.SAXException",
            "java.time.chrono.IsoEra",
            "java.util.regex.Pattern",
            "sun.util.locale.LocaleExtensions",
            "org.springframework.messaging.support.MessageHeaderInitializer",
            "javax.swing.TransferHandler$TransferSupport",
            "java.awt.Rectangle",
            "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer$1",
            "org.hibernate.type.CollectionType",
            "java.io.ObjectStreamClass",
            "java.awt.font.GraphicAttribute",
            "org.springframework.context.Phased",
            "sun.reflect.generics.tree.SimpleClassTypeSignature",
            "java.util.LongSummaryStatistics",
            "org.jboss.jandex.IndexView",
            "javax.persistence.Lob",
            "org.springframework.core.annotation.Order",
            "java.awt.geom.Line2D",
            "org.hibernate.LockMode",
            "org.hibernate.engine.jdbc.spi.TypeInfo",
            "java.awt.Desktop$Action",
            "org.springframework.security.provisioning.JdbcUserDetailsManager",
            "java.lang.SecurityManager",
            "java.awt.desktop.OpenURIHandler",
            "org.springframework.data.repository.query.QueryByExampleExecutor",
            "org.hibernate.hql.internal.ast.tree.FromElementType",
            "java.awt.event.InputMethodEvent",
            "javax.swing.ArrayTable",
            "org.hibernate.mapping.Set",
            "org.hibernate.persister.walking.spi.AttributeDefinition",
            "org.springframework.context.support.MessageSourceAccessor",
            "java.util.logging.LoggingMXBean",
            "java.io.InputStream",
            "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$1",
            "org.hibernate.engine.spi.NamedQueryDefinition",
            "org.hibernate.hql.internal.ast.tree.FromReferenceNode",
            "java.util.function.DoubleConsumer",
            "org.springframework.web.cors.CorsConfigurationSource",
            "org.springframework.security.core.userdetails.UserCache",
            "java.util.Map",
            "org.hibernate.engine.profile.FetchProfile",
            "org.hibernate.cfg.BaselineSessionEventsListenerBuilder",
            "org.springframework.core.task.TaskExecutor",
            "org.hibernate.boot.archive.spi.ArchiveEntry",
            "java.sql.NClob",
            "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatcher",
            "sun.reflect.generics.tree.FormalTypeParameter",
            "javax.persistence.criteria.ParameterExpression",
            "org.springframework.data.domain.Page",
            "javax.management.Notification",
            "javax.management.DescriptorRead",
            "org.springframework.core.AttributeAccessor",
            "java.time.format.DateTimeParseException",
            "java.util.stream.Stream",
            "java.awt.MenuItem",
            "javax.management.MBeanConstructorInfo",
            "javax.management.NotificationFilter",
            "java.lang.ClassLoader",
            "org.springframework.jdbc.core.ResultSetSupportingSqlParameter",
            "org.hibernate.tuple.entity.EntityMetamodel$InDatabaseValueGenerationStrategyImpl",
            "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer",
            "org.hibernate.Session",
            "java.net.DatagramSocket",
            "org.w3c.dom.DOMConfiguration",
            "org.springframework.web.socket.server.HandshakeInterceptor",
            "java.lang.SafeVarargs",
            "org.springframework.security.access.intercept.InterceptorStatusToken",
            "javax.persistence.metamodel.PluralAttribute",
            "org.hibernate.engine.profile.Fetch",
            "org.springframework.http.HttpStatus",
            "org.hibernate.loader.Loader",
            "java.security.ProtectionDomain",
            "java.nio.channels.WritableByteChannel",
            "java.nio.FloatBuffer",
            "java.util.logging.LogManager",
            "org.hibernate.service.spi.ServiceBinding",
            "org.springframework.security.core.userdetails.UserDetailsChecker",
            "org.hibernate.collection.spi.PersistentCollection",
            "javassist.compiler.ast.CastExpr",
            "org.apache.commons.beanutils.converters.ByteConverter",
            "org.jboss.jandex.ClassInfo$EnclosingMethodInfo",
            "org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsAwareConfigurer",
            "org.springframework.validation.ObjectError",
            "java.awt.image.WritableRenderedImage",
            "org.springframework.core.convert.converter.GenericConverter",
            "org.jboss.jandex.AnnotationTarget",
            "org.hibernate.sql.JoinType",
            "javax.persistence.metamodel.SingularAttribute",
            "org.springframework.core.NestedRuntimeException",
            "org.hibernate.cfg.AccessType",
            "java.util.concurrent.ConcurrentHashMap",
            "javassist.CtField",
            "org.springframework.web.servlet.ModelAndView",
            "jdk.internal.reflect.ConstantPool$Tag",
            "javax.persistence.AttributeConverter",
            "org.hibernate.mapping.OneToMany",
            "java.sql.ResultSetMetaData",
            "java.time.chrono.ChronoPeriod",
            "javassist.compiler.ast.Member",
            "org.hibernate.engine.jdbc.batch.spi.Batch",
            "javax.servlet.ServletRegistration",
            "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair",
            "org.hibernate.procedure.ParameterRegistration",
            "java.util.PrimitiveIterator$OfDouble",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$XXssConfig",
            "org.hibernate.StatelessSessionBuilder",
            "java.awt.event.HierarchyBoundsListener",
            "java.util.function.IntSupplier",
            "java.lang.management.MemoryUsage",
            "org.springframework.security.core.context.SecurityContextHolderStrategy",
            "org.springframework.web.context.request.async.CallableProcessingInterceptor",
            "org.slf4j.Logger",
            "org.springframework.http.server.ServerHttpRequest",
            "javassist.compiler.ast.Expr",
            "org.w3c.dom.Element",
            "org.hibernate.mapping.Array",
            "org.hibernate.mapping.Selectable",
            "org.springframework.context.annotation.Bean",
            "org.springframework.core.io.support.ResourcePatternResolver",
            "javax.persistence.metamodel.EmbeddableType",
            "java.awt.desktop.QuitResponse",
            "org.hibernate.tuple.entity.EntityTuplizerFactory",
            "java.lang.System",
            "java.awt.peer.MenuBarPeer",
            "org.hibernate.mapping.List",
            "javax.persistence.SharedCacheMode",
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter",
            "java.util.regex.Matcher",
            "java.text.FieldPosition",
            "java.awt.image.IndexColorModel",
            "sun.util.calendar.BaseCalendar$Date",
            "org.hibernate.tuple.BaselineAttributeInformation",
            "org.hibernate.internal.CriteriaImpl",
            "org.springframework.context.MessageSourceResolvable",
            "org.springframework.jdbc.core.support.JdbcDaoSupport",
            "org.hibernate.cache.spi.CollectionRegion",
            "java.io.Reader",
            "org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer$1",
            "java.lang.reflect.InvocationTargetException",
            "org.springframework.security.core.GrantedAuthority",
            "org.springframework.web.servlet.resource.ResourceResolver",
            "org.hibernate.engine.jdbc.Size",
            "org.jboss.jandex.ClassType",
            "org.hibernate.cache.CacheException",
            "javax.persistence.EntityManagerFactory",
            "org.springframework.web.servlet.config.annotation.CorsRegistration",
            "antlr.debug.SemanticPredicateListener",
            "org.springframework.beans.PropertyValues",
            "org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler",
            "javassist.CtMember",
            "org.springframework.web.servlet.mvc.Controller",
            "java.util.concurrent.FutureTask",
            "org.hibernate.boot.TempTableDdlTransactionHandling",
            "java.nio.file.spi.FileSystemProvider",
            "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer",
            "javax.servlet.WriteListener",
            "javassist.compiler.SymbolTable",
            "org.dom4j.Visitor",
            "java.lang.Number",
            "java.awt.peer.CanvasPeer",
            "javax.swing.JButton",
            "org.springframework.security.authentication.AuthenticationManager",
            "java.time.chrono.ChronoZonedDateTime",
            "java.awt.event.MouseMotionListener",
            "jdk.internal.reflect.ReflectionFactory",
            "java.util.HashMap$Node",
            "org.springframework.web.socket.WebSocketHandler",
            "java.awt.im.InputContext",
            "javax.xml.stream.XMLInputFactory",
            "org.springframework.security.core.userdetails.UserDetailsService",
            "org.hibernate.context.spi.CurrentTenantIdentifierResolver",
            "org.hibernate.mapping.Any",
            "java.time.format.DateTimeFormatterBuilder$CompositePrinterParser",
            "org.springframework.context.support.DefaultMessageSourceResolvable",
            "java.math.RoundingMode",
            "java.awt.Shape",
            "javax.persistence.EntityGraph",
            "javax.servlet.Registration",
            "java.lang.IllegalAccessException",
            "sun.awt.geom.Crossings",
            "org.apache.commons.beanutils.converters.FloatConverter",
            "org.hibernate.engine.loading.internal.EntityLoadContext",
            "org.hibernate.criterion.CriteriaSpecification",
            "javax.servlet.ServletResponse",
            "org.hibernate.dialect.identity.IdentityColumnSupport",
            "org.springframework.security.access.intercept.RunAsManager",
            "javassist.expr.FieldAccess",
            "antlr.ANTLRException",
            "org.springframework.security.config.annotation.web.configurers.AbstractConfigAttributeRequestMatcherRegistry",
            "org.springframework.messaging.simp.stomp.StompHeaderAccessor",
            "java.awt.peer.FramePeer",
            "org.hibernate.event.service.spi.DuplicationStrategy$Action",
            "javax.persistence.metamodel.EntityType",
            "javax.sql.DataSource",
            "sun.reflect.generics.tree.BottomSignature",
            "org.springframework.validation.MessageCodesResolver",
            "java.util.regex.Pattern$BmpCharPredicate",
            "javax.swing.JComponent",
            "org.hibernate.tuple.entity.EntityMetamodel$FullInMemoryValueGenerationStrategy",
            "java.lang.Class$EnclosingMethodInfo",
            "javassist.compiler.JvstCodeGen",
            "java.util.Iterator",
            "org.springframework.context.MessageSourceAware",
            "org.springframework.beans.PropertyValue",
            "org.hibernate.cfg.AttributeConverterDefinition",
            "jdk.internal.org.objectweb.asm.AnnotationVisitor",
            "org.apache.commons.beanutils.converters.IntegerConverter",
            "java.util.LinkedHashMap$Entry",
            "org.hibernate.mapping.Component",
            "javax.xml.stream.events.Characters",
            "org.springframework.security.config.annotation.web.configurers.AbstractInterceptUrlConfigurer$AbstractInterceptUrlRegistry",
            "java.lang.invoke.LambdaForm$Kind",
            "javassist.compiler.ast.ASTList",
            "org.springframework.beans.factory.config.BeanExpressionResolver",
            "java.awt.peer.WindowPeer",
            "org.springframework.security.core.userdetails.UsernameNotFoundException",
            "java.util.function.IntUnaryOperator",
            "java.awt.JobAttributes$MultipleDocumentHandlingType",
            "java.lang.Integer",
            "org.springframework.http.converter.ResourceHttpMessageConverter",
            "java.util.Vector",
            "org.hibernate.mapping.FetchProfile",
            "org.hibernate.engine.internal.JoinSequence",
            "javax.persistence.criteria.From",
            "org.hibernate.boot.cfgxml.spi.LoadedConfig",
            "javax.swing.KeyStroke",
            "org.hibernate.tuple.Property",
            "javassist.CodeConverter",
            "org.springframework.beans.factory.InjectionPoint",
            "java.io.Serializable",
            "org.hibernate.boot.model.IdentifierGeneratorDefinition",
            "java.lang.invoke.BoundMethodHandle$Specializer$Factory",
            "org.hibernate.ScrollMode",
            "java.sql.ConnectionBuilder",
            "java.awt.dnd.DropTargetListener",
            "org.hibernate.persister.collection.CollectionPersister",
            "java.time.format.Parsed",
            "org.jboss.jandex.StrongInternPool$Index",
            "org.hibernate.persister.walking.spi.CompositionDefinition",
            "java.time.LocalDateTime",
            "org.hibernate.StatelessSession",
            "java.util.function.Supplier",
            "javax.persistence.TypedQuery",
            "java.lang.ClassCastException",
            "javax.servlet.annotation.ServletSecurity$TransportGuarantee",
            "java.lang.StringBuffer",
            "java.net.InetAddress$NameService",
            "org.springframework.security.web.header.writers.CacheControlHeadersWriter",
            "javax.accessibility.AccessibleIcon",
            "org.hibernate.boot.model.relational.QualifiedTableName",
            "javax.swing.JRootPane",
            "org.hibernate.persister.walking.spi.CollectionIndexDefinition",
            "javax.swing.event.PopupMenuListener",
            "java.sql.Savepoint",
            "org.springframework.boot.diagnostics.FailureAnalyzer",
            "org.springframework.core.ResolvableType$1",
            "org.springframework.messaging.simp.config.SimpleBrokerRegistration",
            "java.nio.file.attribute.UserPrincipalLookupService",
            "javax.servlet.ServletContext",
            "org.hibernate.engine.loading.internal.LoadingCollectionEntry",
            "org.hibernate.type.AnyType",
            "sun.java2d.pipe.RegionIterator",
            "org.hibernate.engine.query.spi.EntityGraphQueryHint",
            "sun.util.calendar.Gregorian$Date",
            "java.awt.image.BufferStrategy",
            "org.hibernate.boot.jaxb.spi.Binder",
            "java.awt.peer.FontPeer",
            "java.util.function.DoubleToIntFunction",
            "org.springframework.beans.factory.annotation.Autowire",
            "org.hibernate.engine.jdbc.LobCreationContext$Callback",
            "java.util.stream.DoubleStream",
            "javax.persistence.metamodel.IdentifiableType",
            "java.awt.image.renderable.RenderContext",
            "java.awt.Paint",
            "javassist.CodeConverter$ArrayAccessReplacementMethodNames",
            "java.time.LocalDate",
            "java.awt.Toolkit",
            "java.awt.TextComponent",
            "org.hibernate.hql.internal.ast.tree.ParameterContainer",
            "org.hibernate.engine.internal.JoinSequence$Join",
            "org.springframework.messaging.SubscribableChannel",
            "java.util.OptionalDouble",
            "java.nio.channels.AsynchronousFileChannel",
            "org.springframework.beans.factory.config.DependencyDescriptor",
            "java.nio.charset.Charset",
            "javax.swing.JMenuItem",
            "org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler",
            "org.hibernate.dialect.lock.LockingStrategy",
            "java.io.PrintStream",
            "org.springframework.security.web.session.ConcurrentSessionFilter",
            "org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn",
            "org.hibernate.SQLQuery$FetchReturn",
            "org.dom4j.Branch",
            "org.hibernate.tuple.AbstractAttribute",
            "org.springframework.web.cors.CorsConfiguration",
            "java.lang.module.ModuleDescriptor$Builder",
            "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry",
            "java.nio.channels.SelectableChannel",
            "org.hibernate.engine.spi.EntityEntry",
            "java.lang.Float",
            "java.awt.event.FocusListener",
            "javax.servlet.SessionCookieConfig",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$HpkpConfig",
            "org.hibernate.hql.internal.antlr.HqlTokenTypes",
            "javax.xml.namespace.NamespaceContext",
            "sun.awt.util.IdentityArrayList",
            "javax.transaction.Transaction",
            "org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo",
            "org.springframework.core.task.TaskDecorator",
            "java.awt.Canvas",
            "org.hibernate.action.spi.BeforeTransactionCompletionProcess",
            "org.hibernate.jdbc.Expectation",
            "java.sql.ShardingKeyBuilder",
            "org.hibernate.resource.transaction.backend.jta.internal.synchronization.ManagedFlushChecker",
            "org.hibernate.context.spi.CurrentSessionContext",
            "org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer",
            "org.jboss.jandex.StrongInternPool",
            "org.springframework.web.servlet.config.annotation.CorsRegistry",
            "org.springframework.messaging.tcp.TcpOperations",
            "org.hibernate.service.Service",
            "java.lang.String",
            "org.slf4j.event.LoggingEvent",
            "org.hibernate.service.spi.ServiceRegistryImplementor",
            "java.lang.invoke.VarHandle",
            "org.hibernate.boot.model.relational.Namespace",
            "java.awt.MenuContainer",
            "org.hibernate.loader.CollectionAliases",
            "org.hibernate.usertype.UserType",
            "java.awt.geom.Point2D$Float",
            "java.util.function.DoubleToLongFunction",
            "org.hibernate.mapping.PrimitiveArray",
            "org.springframework.web.util.UrlPathHelper",
            "java.text.DecimalFormatSymbols",
            "org.springframework.web.servlet.view.AbstractView",
            "org.hibernate.boot.model.naming.ImplicitUniqueKeyNameSource",
            "org.springframework.http.HttpRequest",
            "org.springframework.security.authentication.AuthenticationProvider",
            "antlr.TreeParser",
            "org.springframework.http.server.ServerHttpResponse",
            "javax.servlet.http.WebConnection",
            "java.awt.dnd.DragGestureRecognizer",
            "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer$1",
            "org.hibernate.engine.spi.SessionEventListenerManager",
            "java.lang.invoke.ClassSpecializer$Factory",
            "org.springframework.core.ResolvableType",
            "java.lang.invoke.BoundMethodHandle",
            "javax.swing.JMenuBar",
            "jdk.internal.org.objectweb.asm.TypePath",
            "org.hibernate.tuple.entity.EntityMetamodel$CompositeGenerationStrategyPairBuilder",
            "org.hibernate.mapping.OneToOne",
            "org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsServiceConfigurer",
            "java.security.PrivilegedAction",
            "org.springframework.core.AliasRegistry",
            "java.awt.image.VolatileImage",
            "org.hibernate.loader.spi.AfterLoadAction",
            "java.security.Principal",
            "java.awt.peer.CheckboxMenuItemPeer",
            "org.springframework.http.converter.HttpMessageConverter",
            "java.awt.Graphics",
            "org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper",
            "org.hibernate.criterion.Projection",
            "org.hibernate.engine.spi.SubselectFetch",
            "javassist.compiler.ast.NewExpr",
            "javax.el.ExpressionFactory",
            "org.hibernate.annotations.common.reflection.AnnotationReader",
            "javax.servlet.HttpConstraintElement",
            "java.util.function.LongBinaryOperator",
            "java.nio.ShortBuffer",
            "org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer",
            "org.springframework.beans.factory.InitializingBean",
            "java.awt.TextField",
            "java.nio.file.AccessMode",
            "org.hibernate.engine.jdbc.spi.ResultSetWrapper",
            "org.hibernate.internal.FilterAliasGenerator",
            "org.hibernate.engine.query.spi.ParameterMetadata",
            "org.hibernate.engine.spi.ActionQueue",
            "java.awt.Desktop",
            "java.lang.reflect.AccessibleObject",
            "org.hibernate.cache.spi.access.CollectionRegionAccessStrategy",
            "org.hibernate.EntityMode",
            "org.hibernate.tuple.GenerationTiming$1",
            "org.hibernate.engine.spi.ExecutableList$Sorter",
            "java.util.concurrent.TimeUnit",
            "org.hibernate.engine.jdbc.spi.TypeNullability",
            "antlr.ParserSharedInputState",
            "java.text.BreakIterator",
            "javax.accessibility.AccessibleComponent",
            "javassist.expr.Instanceof",
            "org.springframework.security.config.annotation.web.builders.WebSecurity$MvcMatchersIgnoredRequestConfigurer",
            "java.awt.dnd.DragSourceEvent",
            "javax.management.NotificationListener",
            "org.springframework.data.domain.ExampleMatcher$PropertySpecifier",
            "java.awt.event.WindowFocusListener",
            "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer$HttpPortMapping",
            "org.hibernate.engine.jdbc.env.spi.SQLStateType",
            "java.nio.channels.MembershipKey",
            "org.hibernate.metadata.ClassMetadata",
            "javax.persistence.NamedAttributeNode",
            "org.springframework.security.web.header.writers.XContentTypeOptionsHeaderWriter",
            "org.springframework.context.ApplicationEventPublisher",
            "java.nio.channels.ByteChannel",
            "org.hibernate.engine.query.spi.HQLQueryPlan",
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.util.regex.Pattern$CharPredicate",
            "org.springframework.security.authentication.encoding.PasswordEncoder",
            "org.springframework.web.servlet.config.annotation.PathMatchConfigurer",
            "javax.management.Descriptor",
            "java.lang.reflect.Member",
            "java.net.NetworkInterface",
            "org.hibernate.tool.hbm2ddl.TableMetadata",
            "org.springframework.boot.SpringApplicationRunListeners",
            "org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration",
            "javax.persistence.metamodel.ManagedType",
            "java.awt.JobAttributes$DestinationType",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.beans.JavaBean",
            "java.lang.StackWalker",
            "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
            "javassist.bytecode.LongVector",
            "java.awt.geom.Point2D$Double",
            "java.awt.datatransfer.FlavorTable",
            "org.springframework.boot.CommandLineRunner",
            "java.sql.Clob",
            "javax.xml.stream.XMLResolver",
            "javax.el.ListELResolver",
            "java.awt.CheckboxGroup",
            "org.hibernate.boot.spi.MetadataBuildingContext",
            "org.hibernate.CustomEntityDirtinessStrategy$AttributeChecker",
            "javax.persistence.NamedEntityGraph",
            "java.lang.reflect.Field",
            "org.hibernate.engine.jdbc.spi.SqlStatementLogger",
            "java.text.spi.CollatorProvider",
            "org.hibernate.engine.query.spi.OrdinalParameterDescriptor",
            "org.hibernate.action.internal.UnresolvedEntityInsertActions",
            "javax.swing.event.MenuEvent",
            "org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer",
            "java.awt.event.AWTEventListener",
            "org.hibernate.ReplicationMode",
            "jdk.internal.loader.AbstractClassLoaderValue",
            "org.springframework.http.HttpOutputMessage",
            "javassist.util.proxy.Proxy",
            "org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource",
            "java.awt.geom.Point2D",
            "antlr.collections.impl.ASTArray",
            "java.lang.Runnable",
            "antlr.debug.ParserTokenListener",
            "org.hibernate.SessionFactoryObserver",
            "org.hibernate.boot.internal.MetadataBuilderImpl",
            "java.lang.Short",
            "java.util.Locale",
            "javassist.CtConstructor",
            "org.hibernate.loader.entity.EntityLoader",
            "org.springframework.security.config.annotation.web.configurers.SecurityContextConfigurer",
            "org.hibernate.cache.spi.access.AccessType",
            "java.util.PrimitiveIterator$OfInt",
            "javassist.ClassPath",
            "java.awt.image.RenderedImage",
            "org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl",
            "java.util.ServiceLoader",
            "java.lang.module.Configuration",
            "javax.persistence.Query",
            "org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource",
            "java.sql.CallableStatement",
            "org.springframework.security.web.header.writers.StaticHeadersWriter",
            "org.springframework.web.servlet.config.annotation.ViewControllerRegistry",
            "javassist.compiler.ast.Symbol",
            "java.util.OptionalInt",
            "java.util.HashSet",
            "java.nio.file.LinkOption",
            "org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor",
            "java.awt.im.InputMethodRequests",
            "javax.servlet.ServletSecurityElement",
            "org.springframework.context.annotation.FilterType",
            "java.util.concurrent.ExecutorService",
            "org.hibernate.bytecode.instrumentation.spi.LazyPropertyInitializer",
            "org.hibernate.hql.internal.ast.util.ASTPrinter",
            "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition",
            "java.awt.EventQueue",
            "org.xml.sax.InputSource",
            "java.awt.Checkbox",
            "java.util.concurrent.Semaphore",
            "org.springframework.context.annotation.ScopedProxyMode",
            "java.awt.event.ActionEvent",
            "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper",
            "org.springframework.web.servlet.config.annotation.ViewResolverRegistry",
            "org.hibernate.boot.jaxb.spi.Binding",
            "org.springframework.web.accept.ContentNegotiationManager",
            "java.util.function.LongSupplier",
            "org.hibernate.stat.SessionStatistics",
            "org.hibernate.mapping.TableOwner",
            "org.springframework.web.context.request.WebRequest",
            "org.hibernate.action.internal.CollectionUpdateAction",
            "org.springframework.beans.PropertyEditorRegistry",
            "java.lang.module.ModuleReference",
            "javassist.bytecode.FieldInfo",
            "org.springframework.core.env.PropertyResolver",
            "org.hibernate.mapping.PersistentClass",
            "javax.el.MethodInfo",
            "javax.persistence.criteria.JoinType",
            "java.lang.reflect.Executable",
            "javax.servlet.FilterRegistration",
            "org.springframework.web.servlet.HandlerMapping",
            "java.awt.GraphicsDevice$WindowTranslucency",
            "org.springframework.security.config.http.SessionCreationPolicy",
            "org.slf4j.ILoggerFactory",
            "java.awt.dnd.DragSourceListener",
            "java.util.Dictionary",
            "java.nio.file.CopyOption",
            "java.lang.Throwable",
            "org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService",
            "javax.persistence.criteria.Selection",
            "javax.swing.MenuSelectionManager",
            "javax.naming.RefAddr",
            "org.hibernate.hql.internal.ast.tree.FromElement",
            "org.springframework.web.socket.sockjs.SockJsService",
            "java.lang.module.Resolver",
            "java.util.ResourceBundle$Control",
            "java.util.function.BiConsumer",
            "org.hibernate.annotations.common.reflection.XPackage",
            "java.io.ObjectOutputStream",
            "org.dom4j.tree.AbstractNode",
            "java.lang.management.ManagementFactory",
            "org.hibernate.engine.jdbc.ColumnNameCache",
            "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
            "org.hibernate.hql.internal.ast.util.ASTAppender",
            "java.nio.channels.CompletionHandler",
            "javax.xml.validation.Validator",
            "javax.persistence.PersistenceContext",
            "jdk.internal.module.ServicesCatalog",
            "javax.swing.MenuElement",
            "javax.management.ObjectName$Property",
            "org.hibernate.exception.spi.SQLExceptionConversionDelegate",
            "org.hibernate.secure.spi.PermissibleAction",
            "java.util.logging.LogManager$CloseOnReset",
            "java.util.function.IntConsumer",
            "java.util.AbstractList",
            "org.springframework.data.domain.Pageable",
            "org.hibernate.mapping.Join",
            "java.awt.CheckboxMenuItem",
            "java.lang.Cloneable",
            "javax.naming.Reference",
            "org.hibernate.mapping.MetaAttribute",
            "org.springframework.web.bind.annotation.RequestMethod",
            "java.awt.desktop.SystemEventListener",
            "javax.transaction.Transactional$TxType",
            "java.util.logging.Logger",
            "org.springframework.security.authentication.dao.SaltSource",
            "org.hibernate.resource.transaction.backend.jdbc.spi.JdbcResourceTransactionAccess",
            "org.hibernate.type.ProcedureParameterExtractionAware",
            "org.hibernate.mapping.Fetchable",
            "org.hibernate.type.AbstractType",
            "jdk.internal.org.objectweb.asm.ClassWriter",
            "java.time.temporal.ChronoField",
            "org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer",
            "java.awt.datatransfer.DataFlavor",
            "org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer",
            "org.hibernate.type.EntityType",
            "javax.management.AttributeList",
            "java.lang.annotation.Retention",
            "org.springframework.data.domain.ExampleMatcher$PropertySpecifiers",
            "org.hibernate.hql.internal.ast.HqlParser",
            "org.xml.sax.Attributes",
            "javax.transaction.xa.Xid",
            "org.hibernate.proxy.LazyInitializer",
            "org.springframework.messaging.simp.broker.SubscriptionRegistry",
            "java.awt.peer.TextAreaPeer",
            "java.nio.file.attribute.AttributeView",
            "org.hibernate.boot.model.naming.ImplicitEntityNameSource",
            "javassist.compiler.Parser",
            "org.springframework.security.core.userdetails.AuthenticationUserDetailsService",
            "java.awt.Dialog$ModalExclusionType",
            "javax.servlet.ServletRequestWrapper",
            "org.hibernate.boot.model.naming.ImplicitTenantIdColumnNameSource",
            "java.util.ServiceLoader$Provider",
            "org.apache.commons.lang3.StringUtils",
            "org.hibernate.SQLQuery$RootReturn",
            "java.awt.dnd.DropTargetEvent",
            "java.util.stream.Collector",
            "java.util.logging.LogManager$LoggerWeakRef",
            "org.hibernate.ScrollableResults",
            "javassist.compiler.ast.DoubleConst",
            "javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic",
            "org.hibernate.mapping.Subclass",
            "javax.swing.plaf.PopupMenuUI",
            "java.nio.ByteOrder",
            "java.awt.TextArea",
            "org.springframework.web.context.request.async.DeferredResultProcessingInterceptor",
            "org.jboss.jandex.ClassExtendsTypeTarget",
            "org.jboss.jandex.ArrayType",
            "java.awt.peer.PanelPeer",
            "java.lang.ReflectiveOperationException",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "org.springframework.util.concurrent.ListenableFutureCallback",
            "org.springframework.security.web.header.writers.HpkpHeaderWriter",
            "org.springframework.beans.BeanMetadataAttribute",
            "java.time.temporal.TemporalAccessor",
            "java.util.function.ToLongBiFunction",
            "org.springframework.beans.factory.config.BeanDefinition",
            "javax.accessibility.AccessibleRole",
            "java.io.Flushable",
            "java.nio.file.FileStore",
            "org.springframework.security.web.AuthenticationEntryPoint",
            "org.hibernate.cfg.AnnotatedClassType",
            "org.springframework.security.access.AccessDeniedException",
            "javassist.compiler.ast.ASTree",
            "org.hibernate.annotations.common.reflection.XClass",
            "org.springframework.expression.TypeComparator",
            "java.awt.event.MouseWheelListener",
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "sun.util.locale.Extension",
            "org.springframework.web.context.ServletContextAware",
            "org.hibernate.persister.entity.PropertyMapping",
            "org.springframework.context.annotation.ComponentScan$Filter",
            "java.util.AbstractCollection",
            "java.awt.event.ComponentListener",
            "java.io.ByteArrayInputStream",
            "java.lang.Readable",
            "javax.persistence.SynchronizationType",
            "org.springframework.web.socket.sockjs.frame.SockJsMessageCodec",
            "javax.servlet.ServletConfig",
            "java.net.InetAddressImpl",
            "java.text.spi.DateFormatSymbolsProvider",
            "javax.persistence.ParameterMode",
            "java.net.URLStreamHandlerFactory",
            "java.time.format.DateTimeParseContext",
            "org.springframework.security.core.context.SecurityContext",
            "java.awt.peer.LightweightPeer",
            "java.lang.annotation.Annotation",
            "java.io.DataInput",
            "org.hibernate.engine.internal.NonNullableTransientDependencies",
            "org.hibernate.event.service.spi.EventListenerGroup",
            "java.awt.image.MultiResolutionImage",
            "org.w3c.dom.ProcessingInstruction",
            "org.springframework.security.web.header.writers.HstsHeaderWriter",
            "jdk.internal.loader.LoaderPool",
            "org.jboss.jandex.Type",
            "org.apache.commons.lang3.builder.ToStringStyle",
            "javax.persistence.FlushModeType",
            "org.springframework.web.socket.messaging.SubProtocolErrorHandler",
            "org.springframework.web.servlet.handler.AbstractHandlerMapping",
            "java.util.function.Function",
            "java.awt.Graphics2D",
            "java.lang.Boolean",
            "java.util.NoSuchElementException",
            "org.hibernate.event.spi.SaveOrUpdateEvent",
            "javax.persistence.criteria.ListJoin",
            "java.awt.Component$BaselineResizeBehavior",
            "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$Stats",
            "org.w3c.dom.UserDataHandler",
            "java.security.PublicKey",
            "org.springframework.beans.factory.config.BeanExpressionContext",
            "org.hibernate.service.spi.Manageable",
            "org.springframework.security.web.access.expression.EvaluationContextPostProcessor",
            "jdk.internal.org.objectweb.asm.ClassReader",
            "org.hibernate.cache.spi.CacheDataDescription",
            "org.w3c.dom.ls.LSResourceResolver",
            "javax.transaction.TransactionManager",
            "java.security.AccessControlContext",
            "java.util.Arrays",
            "org.hibernate.resource.transaction.TransactionCoordinatorBuilder",
            "org.hibernate.action.internal.EntityIdentityInsertAction",
            "javax.persistence.StoredProcedureParameter",
            "org.hibernate.event.spi.EventSource",
            "org.hibernate.id.IntegralDataTypeHolder",
            "org.hibernate.property.access.spi.PropertyAccess",
            "org.springframework.util.CustomizableThreadCreator",
            "sun.reflect.generics.repository.ClassRepository",
            "javax.persistence.SequenceGenerator",
            "org.w3c.dom.CDATASection",
            "org.hibernate.engine.jdbc.LobCreationContext",
            "javax.swing.text.AttributeSet",
            "java.lang.management.CompilationMXBean",
            "sun.reflect.generics.tree.TypeSignature",
            "java.util.function.LongToIntFunction",
            "java.nio.file.DirectoryStream$Filter",
            "javax.swing.plaf.RootPaneUI",
            "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer",
            "sun.reflect.generics.tree.TypeArgument",
            "java.util.Spliterator$OfPrimitive",
            "org.springframework.security.access.AccessDecisionManager",
            "org.springframework.security.core.authority.GrantedAuthoritiesContainer",
            "java.awt.geom.AffineTransform",
            "javax.management.MBeanFeatureInfo",
            "javax.persistence.criteria.CriteriaBuilder$SimpleCase",
            "sun.security.util.DerInputBuffer",
            "org.hibernate.boot.model.naming.PhysicalNamingStrategy",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.security.web.savedrequest.RequestCache",
            "java.awt.event.KeyListener",
            "org.dom4j.Document",
            "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode",
            "org.springframework.web.context.request.async.DeferredResult",
            "javassist.compiler.ast.Stmnt",
            "org.hibernate.boot.archive.scan.spi.ScanResult",
            "java.sql.SQLException",
            "java.net.URLConnection",
            "org.hibernate.mapping.ForeignKey",
            "org.springframework.messaging.support.MessageHeaderAccessor",
            "org.jboss.jandex.TypeTarget",
            "java.lang.ModuleLayer$Controller",
            "org.hibernate.engine.internal.JoinSequence$Selector",
            "org.hibernate.service.spi.Stoppable",
            "org.hibernate.boot.jaxb.internal.AbstractBinder",
            "org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler",
            "java.lang.RuntimeException",
            "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject",
            "java.awt.RenderingHints$Key",
            "org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter",
            "org.springframework.security.authentication.AuthenticationEventPublisher",
            "java.awt.peer.LabelPeer",
            "org.hibernate.service.spi.ServiceBinding$ServiceLifecycleOwner",
            "java.awt.Point",
            "java.awt.RenderingHints",
            "java.util.logging.Formatter",
            "org.hibernate.internal.AbstractSessionImpl",
            "java.text.Annotation",
            "java.lang.Math",
            "java.lang.ref.PhantomReference",
            "org.hibernate.type.SerializationException",
            "jdk.internal.vm.annotation.ForceInline",
            "java.awt.Taskbar",
            "org.hibernate.boot.model.TypeDefinition",
            "org.hibernate.boot.model.relational.Sequence",
            "java.io.FileNotFoundException",
            "org.springframework.jdbc.core.RowCallbackHandler",
            "org.springframework.security.access.intercept.AbstractSecurityInterceptor",
            "java.io.Writer",
            "java.beans.FeatureDescriptor",
            "java.util.logging.Handler",
            "sun.text.spi.JavaTimeDateTimePatternProvider",
            "org.springframework.security.config.annotation.web.configurers.AbstractConfigAttributeRequestMatcherRegistry$UrlMapping",
            "org.springframework.messaging.core.MessageSendingOperations",
            "java.awt.color.ColorSpace",
            "javax.servlet.http.HttpUpgradeHandler",
            "javassist.compiler.Token",
            "org.hibernate.type.DiscriminatorType",
            "java.awt.DisplayMode",
            "org.dom4j.Comment",
            "org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter",
            "org.jboss.jandex.TypeTarget$Usage",
            "org.springframework.web.bind.annotation.GetMapping",
            "java.lang.management.PlatformManagedObject",
            "javassist.bytecode.CodeIterator",
            "org.hibernate.boot.model.relational.Database",
            "org.hibernate.resource.transaction.SynchronizationRegistry",
            "javassist.compiler.Javac",
            "org.dom4j.Text",
            "java.lang.annotation.ElementType",
            "java.util.regex.Pattern$Node",
            "java.lang.invoke.MethodType",
            "org.jboss.logging.Logger$Level",
            "javax.servlet.http.Part",
            "jdk.internal.reflect.LangReflectAccess",
            "javax.swing.InputMap",
            "org.hibernate.type.Type",
            "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
            "org.hibernate.persister.walking.spi.AnyMappingDefinition",
            "java.awt.Cursor",
            "org.hibernate.boot.SessionFactoryBuilder",
            "javassist.CtClass",
            "org.hibernate.cache.spi.QueryResultsRegion",
            "sun.util.locale.provider.LocaleProviderAdapter$Type",
            "java.lang.Long",
            "org.springframework.jdbc.support.rowset.SqlRowSetMetaData",
            "org.springframework.security.core.AuthenticationException",
            "java.awt.MenuShortcut",
            "org.hibernate.hql.internal.ast.ErrorReporter",
            "org.springframework.security.core.context.SecurityContextHolder",
            "org.hibernate.boot.registry.StandardServiceRegistry",
            "org.springframework.web.bind.annotation.PostMapping",
            "javax.persistence.criteria.CriteriaQuery",
            "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
            "javax.accessibility.Accessible",
            "org.springframework.messaging.MessageChannel",
            "java.sql.PreparedStatement",
            "java.awt.ScrollPane",
            "org.springframework.messaging.simp.config.StompBrokerRelayRegistration",
            "org.jboss.jandex.AnnotationInstance",
            "org.springframework.security.web.csrf.CsrfTokenRepository",
            "java.awt.Polygon",
            "org.springframework.validation.Errors",
            "org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter",
            "org.hibernate.boot.spi.SessionFactoryOptions",
            "org.hibernate.SimpleNaturalIdLoadAccess",
            "org.hibernate.hql.internal.ast.tree.RestrictableStatement",
            "org.jboss.jandex.WildcardType",
            "java.awt.Stroke",
            "java.awt.desktop.OpenURIEvent",
            "java.nio.channels.ScatteringByteChannel",
            "org.dom4j.NodeFilter",
            "org.springframework.boot.BeanDefinitionLoader$GroovyBeanDefinitionSource",
            "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer$1",
            "java.time.chrono.AbstractChronology",
            "org.hibernate.dialect.LobMergeStrategy",
            "org.hibernate.type.AssociationType",
            "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
            "org.springframework.messaging.simp.user.UserSessionRegistry",
            "org.springframework.web.socket.SubProtocolCapable",
            "javax.persistence.metamodel.Attribute$PersistentAttributeType",
            "javassist.compiler.ast.MethodDecl",
            "java.util.function.BiFunction",
            "org.springframework.web.socket.config.annotation.SockJsServiceRegistration",
            "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity",
            "java.util.function.LongPredicate",
            "org.springframework.boot.diagnostics.FailureAnalysis",
            "org.hibernate.tuple.AbstractNonIdentifierAttribute",
            "org.hibernate.boot.archive.spi.ArchiveDescriptor",
            "org.hibernate.type.AbstractStandardBasicType",
            "java.util.LinkedList$Node",
            "org.hibernate.hql.spi.QueryTranslatorFactory",
            "org.hibernate.tuple.IdentifierAttribute",
            "org.springframework.core.env.Environment",
            "javassist.expr.Handler",
            "org.springframework.aop.framework.AopInfrastructureBean",
            "org.hibernate.property.access.spi.Getter",
            "java.math.MutableBigInteger",
            "javax.swing.event.MenuKeyEvent",
            "javax.security.auth.x500.X500Principal",
            "org.springframework.core.io.ClassPathResource",
            "org.springframework.security.web.header.writers.ReferrerPolicyHeaderWriter",
            "org.hibernate.hql.internal.ast.util.SessionFactoryHelper",
            "org.hibernate.engine.jndi.JndiNameException",
            "java.io.FilterInputStream",
            "org.hibernate.boot.spi.MetadataImplementor",
            "org.jboss.jandex.ClassInfo$NestingType",
            "org.springframework.security.access.expression.SecurityExpressionHandler",
            "org.hibernate.hql.spi.QueryTranslator",
            "java.awt.font.TextHitInfo",
            "sun.font.EAttribute",
            "org.hibernate.action.internal.CollectionRemoveAction",
            "org.hibernate.CustomEntityDirtinessStrategy$DirtyCheckContext",
            "javassist.compiler.MemberCodeGen",
            "antlr.debug.SemanticPredicateEvent",
            "org.w3c.dom.CharacterData",
            "java.awt.peer.TextComponentPeer",
            "javax.management.openmbean.OpenType",
            "org.hibernate.BasicQueryContract",
            "org.springframework.web.socket.messaging.StompSubProtocolErrorHandler",
            "java.io.ObjectInputFilter$Status",
            "jdk.internal.loader.Loader$LoadedModule",
            "java.awt.image.WritableRaster",
            "org.hibernate.mapping.IdentifierCollection",
            "org.springframework.web.servlet.config.annotation.ResourceChainRegistration",
            "sun.font.CharToGlyphMapper",
            "javax.accessibility.AccessibleBundle",
            "org.hibernate.type.descriptor.ValueBinder",
            "java.time.temporal.TemporalQuery",
            "org.jboss.jandex.FieldInfo",
            "java.awt.dnd.DragGestureEvent",
            "org.springframework.web.socket.CloseStatus",
            "org.springframework.data.domain.Sort$Direction",
            "org.hibernate.event.spi.ReplicateEvent",
            "java.lang.module.ModuleFinder",
            "org.hibernate.boot.archive.spi.ArchiveContext",
            "java.lang.InternalError",
            "org.hibernate.sql.Insert",
            "org.hibernate.boot.model.naming.ImplicitCollectionTableNameSource",
            "javax.persistence.Entity",
            "java.util.concurrent.locks.AbstractQueuedSynchronizer$Node",
            "java.util.Set",
            "org.springframework.web.accept.PathExtensionContentNegotiationStrategy",
            "org.springframework.web.bind.annotation.RestController",
            "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry",
            "org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor",
            "java.net.DatagramPacket",
            "sun.reflect.generics.tree.MethodTypeSignature",
            "org.springframework.security.config.annotation.web.builders.WebSecurity$IgnoredRequestConfigurer",
            "java.lang.reflect.Proxy",
            "org.hibernate.engine.jdbc.spi.ResultSetReturn",
            "org.hibernate.boot.CacheRegionDefinition",
            "org.hibernate.cache.spi.QueryKey",
            "org.hibernate.resource.transaction.TransactionCoordinator",
            "antlr.debug.TraceEvent",
            "javax.xml.stream.events.EndElement",
            "javax.swing.AbstractButton",
            "jdk.internal.ref.PhantomCleanable",
            "org.hibernate.boot.archive.spi.ArchiveDescriptorFactory",
            "org.dom4j.CharacterData",
            "org.hibernate.type.AbstractSingleColumnStandardBasicType",
            "java.lang.UnsupportedOperationException",
            "org.hibernate.mapping.AttributeContainer",
            "java.lang.StackFrameInfo",
            "sun.font.StrikeMetrics",
            "javax.persistence.EntityManager",
            "org.hibernate.procedure.ProcedureCallMemento",
            "org.hibernate.procedure.ProcedureOutputs",
            "javax.xml.parsers.DocumentBuilder",
            "org.springframework.expression.Expression",
            "org.hibernate.internal.SessionImpl",
            "antlr.ASTPair",
            "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer$SessionFixationConfigurer",
            "org.hibernate.IdentifierLoadAccess",
            "java.lang.Comparable",
            "java.security.CodeSource",
            "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer",
            "antlr.debug.Event",
            "javax.management.QueryExp",
            "org.hibernate.Filter",
            "org.hibernate.SQLQuery",
            "org.hibernate.boot.model.IdGeneratorStrategyInterpreter$GeneratorNameDeterminationContext",
            "javassist.compiler.CodeGen",
            "java.util.spi.TimeZoneNameProvider",
            "javax.persistence.NamedSubgraph",
            "org.springframework.web.servlet.config.annotation.InterceptorRegistry",
            "java.sql.SQLWarning",
            "javax.swing.plaf.ComponentUI",
            "java.net.Authenticator",
            "javassist.compiler.ast.Visitor",
            "org.springframework.security.web.util.matcher.RequestMatcher",
            "java.util.logging.LogRecord",
            "org.hibernate.action.internal.EntityDeleteAction",
            "org.springframework.expression.BeanResolver",
            "javax.persistence.GenerationType",
            "org.springframework.jdbc.core.RowMapper",
            "org.hibernate.engine.spi.SessionImplementor",
            "org.hibernate.stat.NaturalIdCacheStatistics",
            "org.springframework.security.config.annotation.web.configurers.ServletApiConfigurer",
            "javax.naming.Referenceable",
            "javassist.compiler.ast.IntConst",
            "org.springframework.web.socket.WebSocketSession",
            "org.hibernate.cfg.Settings",
            "java.util.zip.Checksum",
            "java.lang.invoke.VarHandle$AccessType",
            "antlr.debug.TraceListener",
            "org.springframework.web.socket.WebSocketMessage",
            "javax.persistence.PersistenceContextType",
            "java.lang.management.ThreadMXBean",
            "org.hibernate.engine.ResultSetMappingDefinition",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentSecurityPolicyConfig",
            "java.awt.event.FocusEvent",
            "org.hibernate.boot.model.relational.Namespace$Name",
            "org.springframework.web.HttpRequestHandler",
            "org.hibernate.tool.schema.extract.spi.PrimaryKeyInformation",
            "org.hibernate.mapping.KeyValue",
            "javax.persistence.PrePersist",
            "java.nio.file.WatchEvent$Modifier",
            "java.io.BufferedInputStream",
            "javax.xml.datatype.DatatypeFactory",
            "org.hibernate.resource.transaction.backend.jdbc.spi.JdbcResourceTransaction",
            "org.hibernate.service.spi.SessionFactoryServiceRegistry",
            "org.hibernate.loader.EntityAliases",
            "java.awt.image.SampleModel",
            "java.awt.peer.ScrollbarPeer",
            "org.hibernate.boot.model.naming.ImplicitBasicColumnNameSource",
            "org.xml.sax.EntityResolver",
            "java.nio.channels.Channel",
            "javax.persistence.ManyToOne",
            "javax.persistence.UniqueConstraint",
            "javax.servlet.Servlet",
            "java.util.logging.ErrorManager",
            "java.util.concurrent.CountDownLatch",
            "javax.servlet.annotation.HttpMethodConstraint",
            "java.lang.LayerInstantiationException",
            "java.text.CollationKey",
            "org.hibernate.event.spi.LoadEventListener$LoadType",
            "java.awt.PaintContext",
            "javax.servlet.http.HttpSessionContext",
            "java.lang.invoke.MethodTypeForm",
            "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer",
            "sun.reflect.generics.repository.AbstractRepository",
            "org.springframework.web.servlet.resource.ResourceTransformerChain",
            "java.awt.geom.Dimension2D",
            "java.awt.event.ActionListener",
            "java.awt.peer.MouseInfoPeer",
            "java.awt.dnd.DragSourceMotionListener",
            "java.awt.font.TextAttribute",
            "org.springframework.web.filter.OncePerRequestFilter",
            "sun.awt.FwDispatcher",
            "java.lang.reflect.Constructor",
            "java.util.OptionalLong",
            "java.awt.Dialog$ModalityType",
            "java.nio.Buffer",
            "org.springframework.core.env.EnvironmentCapable",
            "javax.swing.JToolTip",
            "java.io.Console",
            "org.hibernate.type.TypeFactory",
            "java.lang.reflect.TypeVariable",
            "org.jboss.jandex.AnnotationValue$Kind",
            "org.hibernate.annotations.common.reflection.Filter",
            "javax.el.ELResolver",
            "java.lang.reflect.ParameterizedType",
            "org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter",
            "org.jboss.jandex.MethodParameterTypeTarget",
            "org.hibernate.engine.spi.CachedNaturalIdValueSource",
            "org.hibernate.tool.schema.extract.spi.ForeignKeyInformation",
            "javax.servlet.FilterChain",
            "org.hibernate.cache.spi.access.EntityRegionAccessStrategy",
            "java.util.SortedSet",
            "java.awt.ItemSelectable",
            "org.dom4j.util.SingletonStrategy",
            "org.springframework.http.converter.ResourceRegionHttpMessageConverter",
            "org.hibernate.hql.internal.ast.ParseErrorHandler",
            "org.springframework.dao.support.DaoSupport",
            "java.net.InetAddress$InetAddressHolder",
            "java.util.function.ToLongFunction",
            "org.springframework.http.HttpMessage",
            "jdk.internal.org.objectweb.asm.ClassVisitor",
            "org.hibernate.hql.internal.ast.tree.InitializeableNode",
            "javax.management.MBeanServerConnection",
            "java.awt.Composite",
            "org.hibernate.mapping.Formula",
            "org.springframework.expression.TypeConverter",
            "java.sql.Timestamp",
            "sun.reflect.generics.tree.BaseType",
            "javax.management.ObjectName",
            "java.security.Provider",
            "org.hibernate.persister.entity.Lockable",
            "java.lang.ModuleLayer",
            "org.hibernate.engine.spi.EntityUniqueKey",
            "javax.swing.SwingConstants",
            "sun.reflect.generics.tree.IntSignature",
            "org.springframework.jdbc.core.JdbcTemplate",
            "org.w3c.dom.NamedNodeMap",
            "java.lang.reflect.GenericDeclaration",
            "org.hibernate.NullPrecedence",
            "java.awt.color.ICC_Profile",
            "javax.xml.stream.XMLEventReader",
            "org.hibernate.id.insert.InsertGeneratedIdentifierDelegate",
            "java.lang.invoke.BoundMethodHandle$SpeciesData",
            "org.springframework.boot.Banner",
            "java.awt.Label",
            "org.springframework.web.servlet.mvc.ParameterizableViewController",
            "org.w3c.dom.DocumentType",
            "java.util.function.LongConsumer",
            "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
            "java.time.format.DateTimePrintContext",
            "org.hibernate.engine.transaction.spi.IsolationDelegate",
            "javax.el.ValueExpression",
            "org.springframework.web.cors.CorsProcessor",
            "org.hibernate.boot.model.source.spi.AbstractAttributeKey",
            "java.lang.Class",
            "java.util.IntSummaryStatistics",
            "org.w3c.dom.ls.LSInput",
            "javassist.compiler.ast.Variable",
            "antlr.collections.ASTEnumeration",
            "javax.xml.validation.ValidatorHandler",
            "java.util.concurrent.ConcurrentHashMap$Node",
            "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration",
            "javax.persistence.criteria.CriteriaBuilder$Case",
            "org.hibernate.resource.transaction.TransactionCoordinator$TransactionDriver",
            "org.hibernate.boot.spi.MetadataBuilderImplementor",
            "org.springframework.web.context.request.NativeWebRequest",
            "org.hibernate.criterion.Order",
            "java.awt.font.NumericShaper$Range",
            "org.springframework.beans.TypeConverter",
            "org.springframework.jdbc.support.rowset.SqlRowSet",
            "org.springframework.validation.FieldError",
            "javax.persistence.metamodel.PluralAttribute$CollectionType",
            "javax.management.MBeanOperationInfo",
            "java.time.zone.ZoneOffsetTransition",
            "org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer$UserDetailsBuilder",
            "org.hibernate.event.spi.RefreshEvent",
            "org.apache.commons.io.IOUtils",
            "java.awt.Transparency",
            "java.util.function.ObjLongConsumer",
            "org.hibernate.boot.spi.InFlightMetadataCollector$DelayedPropertyReferenceHandler",
            "sun.security.util.DerOutputStream",
            "org.hibernate.cache.spi.entry.CacheEntryStructure",
            "javax.swing.AncestorNotifier",
            "org.springframework.messaging.tcp.ReconnectStrategy",
            "sun.security.util.DerInputStream",
            "java.text.NumberFormat",
            "org.springframework.security.web.RedirectStrategy",
            "java.net.FileNameMap",
            "org.dom4j.CDATA",
            "org.hibernate.engine.spi.EntityEntryExtraState",
            "javax.accessibility.AccessibleText",
            "javax.persistence.criteria.MapJoin",
            "org.springframework.web.servlet.ViewResolver",
            "javassist.bytecode.ExceptionsAttribute",
            "org.springframework.context.annotation.Import",
            "jdk.internal.loader.Loader",
            "org.springframework.context.SmartLifecycle",
            "org.jboss.jandex.EmptyTypeTarget",
            "java.awt.FontMetrics",
            "java.sql.Statement",
            "javassist.compiler.ast.ArrayInit",
            "java.io.BufferedReader",
            "org.hibernate.action.internal.CollectionRecreateAction",
            "javassist.compiler.ast.StringL",
            "javassist.compiler.ast.Pair",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity",
            "java.util.function.IntPredicate",
            "org.springframework.data.domain.ExampleMatcher$MatchMode",
            "java.lang.invoke.LambdaFormEditor",
            "java.nio.channels.SocketChannel",
            "sun.font.Font2DHandle",
            "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
            "org.hibernate.hql.internal.ast.tree.Statement",
            "javassist.bytecode.ExceptionTable",
            "java.awt.event.ItemEvent",
            "java.awt.desktop.QuitStrategy",
            "java.lang.Thread$State",
            "org.w3c.dom.Comment",
            "java.text.Format$Field",
            "java.awt.AttributeValue",
            "org.hibernate.boot.MetadataSources",
            "java.util.List",
            "org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess",
            "java.net.SocketOptions",
            "org.springframework.dao.DataAccessException",
            "java.util.ResourceBundle$CacheKey",
            "org.hibernate.tool.hbm2ddl.ColumnMetadata",
            "java.awt.desktop.PrintFilesHandler",
            "org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer",
            "java.lang.invoke.MethodHandleImpl$Intrinsic",
            "javassist.expr.NewExpr",
            "org.hibernate.mapping.IndexedCollection",
            "java.lang.Iterable",
            "org.hibernate.engine.spi.TypedValue",
            "javax.swing.event.AncestorListener",
            "org.hibernate.id.insert.AbstractReturningDelegate",
            "java.nio.channels.Pipe",
            "java.nio.file.OpenOption",
            "javax.swing.plaf.MenuBarUI",
            "javax.persistence.Temporal",
            "java.awt.PrintJob",
            "java.io.Closeable",
            "org.apache.commons.logging.Log",
            "org.springframework.jdbc.support.JdbcAccessor",
            "org.springframework.beans.factory.annotation.Autowired",
            "java.nio.file.WatchEvent$Kind",
            "org.springframework.http.CacheControl",
            "javassist.compiler.Lex",
            "java.math.BigInteger",
            "java.sql.Struct",
            "org.hibernate.boot.archive.scan.spi.ScanParameters",
            "sun.security.util.DerValue",
            "org.hibernate.mapping.JoinedSubclass",
            "java.io.ObjectStreamClass$ClassDataSlot",
            "java.util.concurrent.ThreadPoolExecutor$Worker",
            "java.net.SocketImplFactory",
            "org.hibernate.cache.spi.OptimisticCacheSource",
            "org.hibernate.resource.jdbc.spi.JdbcObserver",
            "org.hibernate.engine.spi.CascadeStyle",
            "sun.security.x509.GeneralNameInterface",
            "org.springframework.web.socket.sockjs.transport.SockJsSession",
            "org.hibernate.type.descriptor.WrapperOptionsContext",
            "java.nio.channels.Pipe$SinkChannel",
            "org.hibernate.hql.internal.ast.exec.StatementExecutor",
            "org.hibernate.engine.jdbc.internal.Formatter",
            "org.springframework.expression.Operation",
            "org.springframework.core.io.support.ResourceRegion",
            "java.awt.event.AdjustmentListener",
            "org.hibernate.boot.cfgxml.spi.CfgXmlAccessService",
            "org.springframework.beans.factory.config.ConstructorArgumentValues",
            "org.springframework.beans.BeanMetadataAttributeAccessor",
            "org.hibernate.hql.internal.antlr.HqlSqlTokenTypes",
            "javax.persistence.criteria.CriteriaDelete",
            "org.hibernate.tool.schema.extract.spi.ExtractionContext$DatabaseObjectAccess",
            "java.io.IOException",
            "org.hibernate.resource.jdbc.spi.JdbcSessionContext",
            "org.hibernate.mapping.Table",
            "org.springframework.security.web.SecurityFilterChain",
            "javax.servlet.annotation.ServletSecurity",
            "org.hibernate.cfg.annotations.NamedProcedureCallDefinition",
            "sun.reflect.generics.visitor.Reifier",
            "antlr.BaseAST",
            "java.util.Date",
            "org.dom4j.Node",
            "java.io.ObjectInputStream",
            "java.awt.dnd.peer.DragSourceContextPeer",
            "javax.persistence.PersistenceUnitUtil",
            "java.util.Random",
            "org.springframework.core.task.AsyncListenableTaskExecutor",
            "org.springframework.web.servlet.HandlerExecutionChain",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$1",
            "java.awt.PointerInfo",
            "org.hibernate.engine.query.spi.ReturnMetadata",
            "java.nio.channels.FileLock",
            "java.util.Locale$FilteringMode",
            "javax.persistence.criteria.SetJoin",
            "org.apache.commons.beanutils.converters.ClassConverter",
            "java.time.chrono.IsoChronology",
            "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter",
            "org.springframework.context.ConfigurableApplicationContext",
            "org.springframework.messaging.simp.stomp.StompCommand",
            "org.hibernate.SQLQuery$ReturnProperty",
            "org.hibernate.id.insert.Binder",
            "javax.el.CompositeELResolver",
            "org.hibernate.type.IdentifierType",
            "org.hibernate.type.SingleColumnType",
            "java.awt.datatransfer.Clipboard",
            "org.hibernate.procedure.ParameterBind",
            "org.springframework.jdbc.core.PreparedStatementCallback",
            "java.awt.Menu",
            "org.springframework.web.socket.config.annotation.AbstractWebSocketMessageBrokerConfigurer",
            "sun.font.FontStrike",
            "org.hibernate.engine.jdbc.env.spi.ExtractedDatabaseMetaData",
            "java.lang.ref.Reference",
            "org.hibernate.cache.spi.access.SoftLock",
            "sun.util.resources.LocaleData",
            "org.springframework.core.ResolvableType$VariableResolver",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ReferrerPolicyConfig",
            "org.hibernate.event.spi.PersistEvent",
            "java.lang.module.ModuleDescriptor",
            "org.springframework.beans.factory.Aware",
            "java.awt.dnd.DropTarget$DropTargetAutoScroller",
            "org.hibernate.boot.CacheRegionDefinition$CacheRegionType",
            "org.hibernate.bytecode.instrumentation.spi.FieldInterceptor",
            "org.hibernate.internal.NamedQueryRepository",
            "java.lang.annotation.Repeatable",
            "org.hibernate.hql.internal.ast.util.AliasGenerator",
            "org.hibernate.mapping.UniqueKey",
            "javax.management.MBeanServer",
            "org.springframework.security.authentication.AuthenticationDetailsSource",
            "javax.persistence.PersistenceUtil",
            "org.hibernate.event.spi.LoadEventListener$1",
            "java.lang.System$Logger",
            "org.hibernate.engine.spi.EntityEntryFactory",
            "sun.util.locale.provider.ResourceBundleBasedAdapter",
            "org.hibernate.boot.cfgxml.spi.MappingReference",
            "javax.persistence.metamodel.Bindable",
            "java.util.PrimitiveIterator",
            "org.hibernate.hql.internal.ast.tree.ResolvableNode",
            "java.util.function.DoubleSupplier",
            "java.awt.datatransfer.FlavorListener",
            "java.awt.MenuComponent",
            "org.springframework.security.web.csrf.CsrfToken",
            "org.hibernate.mapping.Map",
            "java.nio.channels.FileChannel",
            "java.io.ObjectStreamConstants",
            "java.awt.Conditional",
            "java.awt.peer.PopupMenuPeer",
            "java.util.function.IntBinaryOperator",
            "org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource",
            "java.nio.file.DirectoryStream",
            "java.nio.channels.spi.SelectorProvider",
            "java.io.DataOutputStream",
            "javax.swing.event.ChangeListener",
            "java.awt.color.ICC_ColorSpace",
            "javax.el.ArrayELResolver",
            "java.lang.Void",
            "java.awt.datatransfer.ClipboardOwner",
            "java.io.Externalizable",
            "sun.security.util.Debug",
            "sun.java2d.cmm.Profile",
            "javax.swing.event.MenuKeyListener",
            "java.lang.invoke.VarForm",
            "org.springframework.core.env.PropertySource",
            "java.text.SimpleDateFormat",
            "org.springframework.web.socket.server.HandshakeHandler",
            "org.hibernate.type.EmbeddedComponentType",
            "javax.swing.InputVerifier",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentTypeOptionsConfig",
            "org.hibernate.cache.spi.RegionFactory",
            "org.springframework.messaging.simp.config.ChannelRegistration",
            "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl",
            "javassist.bytecode.StackMapTable",
            "java.awt.EventDispatchThread",
            "java.util.Map$Entry",
            "java.util.function.IntToDoubleFunction",
            "org.springframework.beans.factory.config.SingletonBeanRegistry",
            "java.io.BufferedWriter",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig",
            "org.springframework.util.MultiValueMap",
            "java.lang.StackWalker$Option",
            "javax.management.MBeanInfo",
            "org.hibernate.type.SerializableType",
            "org.springframework.web.filter.CorsFilter",
            "org.hibernate.hql.internal.ast.tree.SelectExpression",
            "org.springframework.security.web.context.SecurityContextRepository",
            "org.hibernate.persister.entity.Queryable$Declarer",
            "javax.persistence.LockModeType",
            "java.time.temporal.TemporalAdjuster",
            "org.hibernate.engine.jndi.JndiException",
            "org.hibernate.persister.entity.AbstractEntityPersister$InclusionChecker",
            "javassist.bytecode.ByteVector",
            "java.lang.invoke.VarHandle$AccessDescriptor",
            "org.hibernate.dialect.ColumnAliasExtractor",
            "sun.util.logging.PlatformLogger$Level",
            "java.util.IdentityHashMap",
            "java.sql.Wrapper",
            "java.awt.image.BufferedImage",
            "org.hibernate.mapping.PersistentClassVisitor",
            "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer",
            "org.hibernate.metadata.CollectionMetadata",
            "org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
            "org.springframework.beans.factory.config.BeanPostProcessor",
            "org.jboss.jandex.PrimitiveType$Primitive",
            "java.awt.SecondaryLoop",
            "org.hibernate.stat.CollectionStatistics",
            "java.lang.reflect.Type",
            "java.security.cert.X509Extension",
            "org.hibernate.hql.spi.ParameterTranslations",
            "java.nio.channels.MulticastChannel",
            "java.net.Socket",
            "org.springframework.web.servlet.handler.MappedInterceptor",
            "org.hibernate.tuple.InDatabaseValueGenerationStrategy",
            "java.util.concurrent.ThreadPoolExecutor",
            "java.net.DatagramSocketImpl",
            "javax.swing.Popup",
            "org.springframework.stereotype.Controller",
            "java.nio.charset.CoderResult",
            "org.hibernate.hql.internal.HolderInstantiator",
            "org.xml.sax.ContentHandler",
            "org.hibernate.cache.spi.EntityRegion",
            "jdk.internal.perf.PerfCounter",
            "org.springframework.security.config.annotation.web.configurers.LogoutConfigurer",
            "org.hibernate.FlushMode",
            "org.hibernate.boot.spi.XmlMappingBinderAccess",
            "org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter",
            "org.hibernate.hql.internal.ast.tree.QueryNode",
            "java.lang.NamedPackage",
            "org.xml.sax.SAXParseException",
            "javax.servlet.FilterConfig",
            "java.time.Clock",
            "org.springframework.web.socket.handler.WebSocketHandlerDecoratorFactory",
            "java.awt.event.InputMethodListener",
            "java.text.Format",
            "javassist.bytecode.CodeIterator$Pointers",
            "java.util.Enumeration",
            "org.hibernate.type.BasicType",
            "org.hibernate.service.spi.ServiceInitiator",
            "org.xml.sax.ErrorHandler",
            "java.net.Proxy",
            "org.springframework.web.filter.GenericFilterBean",
            "org.hibernate.mapping.PrimaryKey",
            "java.awt.peer.ButtonPeer",
            "javax.persistence.ManyToMany",
            "java.util.logging.LogManager$LogNode",
            "java.awt.dnd.DragSourceDropEvent",
            "org.hibernate.boot.model.relational.AuxiliaryDatabaseObject",
            "org.dom4j.Namespace",
            "javax.accessibility.AccessibleEditableText",
            "org.apache.commons.beanutils.converters.LongConverter",
            "org.hibernate.engine.spi.ActionQueue$BeforeTransactionCompletionProcessQueue",
            "org.apache.commons.beanutils.Converter",
            "org.hibernate.persister.spi.PersisterCreationContext",
            "java.net.DatagramSocketImplFactory",
            "java.lang.invoke.LambdaFormEditor$Transform",
            "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer",
            "java.nio.channels.spi.AbstractSelectionKey",
            "sun.util.resources.ParallelListResourceBundle",
            "org.hibernate.engine.spi.SessionBuilderImplementor",
            "javax.accessibility.AccessibleRelationSet",
            "org.hibernate.hql.internal.ast.util.LiteralProcessor",
            "org.hibernate.engine.spi.ActionQueue$TransactionCompletionProcesses",
            "org.hibernate.loader.OuterJoinableAssociation",
            "org.springframework.http.HttpStatus$Series",
            "java.awt.peer.MenuComponentPeer",
            "org.springframework.security.access.intercept.AfterInvocationManager",
            "javax.persistence.Table",
            "java.util.spi.CurrencyNameProvider",
            "org.hibernate.mapping.MappedSuperclass",
            "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer$ContextSourceBuilder",
            "org.hibernate.engine.jdbc.env.spi.SchemaNameResolver",
            "org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref",
            "org.xml.sax.helpers.DefaultHandler",
            "java.util.function.IntToLongFunction",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity$1",
            "java.util.concurrent.ConcurrentHashMap$KeySetView",
            "sun.reflect.generics.tree.ByteSignature",
            "javax.persistence.EntityTransaction",
            "javax.persistence.FetchType",
            "org.hibernate.engine.internal.CascadePoint",
            "java.lang.management.ClassLoadingMXBean",
            "org.apache.commons.io.filefilter.IOFileFilter",
            "javax.persistence.criteria.CriteriaBuilder$In",
            "org.hibernate.boot.model.TruthValue",
            "jdk.internal.reflect.MethodAccessor",
            "javax.servlet.AsyncEvent",
            "javax.swing.plaf.MenuItemUI",
            "java.util.EventObject",
            "java.awt.PopupMenu",
            "java.awt.geom.PathIterator",
            "java.nio.IntBuffer",
            "org.springframework.security.config.annotation.SecurityConfigurer",
            "java.awt.peer.RobotPeer",
            "org.hibernate.stat.Statistics",
            "java.awt.image.renderable.RenderableImage",
            "org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource",
            "java.awt.event.WindowStateListener",
            "javax.accessibility.AccessibleValue",
            "java.util.Objects",
            "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer$AttributeExchangeConfigurer",
            "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration",
            "org.hibernate.boot.archive.scan.spi.Scanner",
            "java.util.stream.IntStream",
            "org.hibernate.tuple.component.ComponentTuplizer",
            "java.awt.Insets",
            "org.springframework.security.web.authentication.AuthenticationSuccessHandler",
            "org.hibernate.type.CompositeCustomType",
            "org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter",
            "java.util.spi.CalendarDataProvider",
            "java.util.function.LongFunction",
            "org.hibernate.boot.model.IdGeneratorStrategyInterpreter",
            "java.time.Month",
            "java.lang.StackWalker$StackFrame",
            "org.springframework.core.convert.converter.ConverterFactory",
            "org.springframework.jdbc.core.CallableStatementCreator",
            "java.net.ContentHandler",
            "org.springframework.web.accept.ContentNegotiationStrategy",
            "java.awt.event.ContainerListener",
            "org.dom4j.XPath",
            "org.jboss.jandex.PositionBasedTypeTarget",
            "javassist.expr.Cast",
            "javax.management.ObjectInstance",
            "org.springframework.core.convert.support.ConfigurableConversionService",
            "java.io.ObjectOutputStream$PutField",
            "org.hibernate.loader.entity.AbstractEntityLoader",
            "org.hibernate.engine.spi.PersistenceContext",
            "org.springframework.context.support.ApplicationObjectSupport",
            "javassist.expr.MethodCall",
            "org.hibernate.boot.archive.spi.ArchiveEntryHandler",
            "java.math.BigDecimal",
            "java.lang.Character",
            "java.util.spi.LocaleNameProvider",
            "javax.persistence.criteria.CriteriaBuilder",
            "org.springframework.data.domain.Sort",
            "java.nio.file.attribute.FileAttribute",
            "org.hibernate.hql.internal.ast.tree.OrderByClause",
            "sun.reflect.generics.factory.GenericsFactory",
            "java.util.function.ToDoubleBiFunction",
            "sun.invoke.util.Wrapper",
            "org.springframework.messaging.MessageHandler",
            "java.awt.desktop.AppEvent",
            "java.lang.invoke.ClassSpecializer",
            "java.text.spi.BreakIteratorProvider",
            "org.hibernate.type.descriptor.java.MutabilityPlan",
            "java.util.regex.Pattern$CharProperty",
            "org.springframework.jdbc.core.PreparedStatementCreator",
            "java.util.HashMap$TreeNode",
            "jdk.internal.org.objectweb.asm.ByteVector",
            "javax.el.ImportHandler",
            "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
            "java.awt.AWTKeyStroke",
            "org.hibernate.dialect.function.SQLFunctionRegistry",
            "org.apache.commons.lang3.EnumUtils",
            "org.jboss.jandex.VoidType",
            "org.hibernate.transform.CacheableResultTransformer",
            "java.util.concurrent.FutureTask$WaitNode",
            "javax.swing.ActionMap",
            "org.hibernate.engine.spi.BatchFetchQueue",
            "org.springframework.jdbc.datasource.init.DataSourceInitializer",
            "org.springframework.web.servlet.support.RequestDataValueProcessor",
            "javax.xml.datatype.XMLGregorianCalendar",
            "org.springframework.security.web.firewall.HttpFirewall",
            "java.io.FileFilter",
            "java.lang.reflect.InvocationHandler",
            "org.jboss.jandex.TypeVariable",
            "org.springframework.beans.factory.HierarchicalBeanFactory",
            "java.net.SocketAddress",
            "sun.util.calendar.CalendarDate",
            "org.hibernate.persister.entity.DiscriminatorMetadata",
            "java.lang.NoSuchMethodException",
            "java.beans.ConstructorProperties",
            "javax.xml.stream.util.XMLEventAllocator",
            "org.hibernate.engine.transaction.spi.TransactionObserver",
            "org.hibernate.mapping.SingleTableSubclass",
            "org.apache.commons.collections.FastHashMap",
            "org.hibernate.ConnectionReleaseMode",
            "java.awt.JobAttributes",
            "org.hibernate.boot.model.naming.ImplicitAnyKeyColumnNameSource",
            "java.time.LocalTime",
            "org.hibernate.engine.spi.SessionFactoryImplementor",
            "org.springframework.beans.PropertyEditorRegistrar",
            "javax.swing.JMenu$WinListener",
            "org.hibernate.boot.model.naming.NamingStrategyHelper",
            "org.hibernate.hql.internal.ast.tree.SqlNode",
            "java.util.regex.PatternSyntaxException",
            "java.awt.FocusTraversalPolicy",
            "javax.el.Expression",
            "org.hibernate.mapping.SimpleValue",
            "java.net.InetSocketAddress",
            "sun.java2d.StateTrackable$State",
            "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory",
            "sun.reflect.generics.tree.FloatSignature",
            "java.lang.invoke.VarHandle$AccessMode",
            "org.springframework.security.core.Authentication",
            "java.awt.image.DataBuffer",
            "org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer",
            "org.springframework.util.concurrent.FailureCallback",
            "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer",
            "java.net.ProtocolFamily",
            "javax.management.loading.ClassLoaderRepository",
            "org.hibernate.stat.EntityStatistics",
            "java.beans.Transient",
            "java.security.CodeSigner",
            "org.springframework.core.io.AbstractFileResolvingResource",
            "org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter$XFrameOptionsMode",
            "java.lang.module.ModuleDescriptor$Requires",
            "java.awt.dnd.DragGestureListener",
            "org.springframework.web.bind.annotation.ResponseBody",
            "java.security.PermissionCollection",
            "org.springframework.data.domain.Sort$Order",
            "java.util.stream.LongStream$Builder",
            "org.springframework.stereotype.Component",
            "javax.servlet.ReadListener",
            "java.util.stream.BaseStream",
            "org.hibernate.type.descriptor.java.JavaTypeDescriptor",
            "org.jboss.jandex.Type$Kind",
            "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
            "sun.awt.datatransfer.ToolkitThreadBlockedHandler",
            "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration",
            "java.lang.ThreadGroup",
            "jdk.internal.reflect.ConstantPool",
            "org.hibernate.transform.TupleSubsetResultTransformer",
            "java.time.temporal.ValueRange",
            "java.awt.event.MouseWheelEvent",
            "org.hibernate.tuple.Attribute",
            "org.slf4j.event.Level",
            "javax.persistence.metamodel.Metamodel",
            "org.jboss.jandex.MethodParameterInfo",
            "org.hibernate.engine.jdbc.env.spi.NameQualifierSupport",
            "java.lang.management.RuntimeMXBean",
            "java.awt.GraphicsConfiguration",
            "java.util.logging.Filter",
            "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer",
            "org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl",
            "java.lang.invoke.LambdaForm$BasicType",
            "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
            "org.springframework.web.cors.UrlBasedCorsConfigurationSource",
            "java.util.function.ObjDoubleConsumer",
            "java.lang.StackWalker$ExtendedOption",
            "java.awt.desktop.FilesEvent",
            "java.util.Spliterator$OfInt",
            "org.springframework.web.context.request.WebRequestInterceptor",
            "org.hibernate.boot.spi.ClassLoaderAccess",
            "java.lang.invoke.CallSite",
            "org.springframework.security.web.FilterInvocation",
            "java.sql.Ref",
            "org.springframework.jdbc.core.ConnectionCallback",
            "sun.reflect.generics.tree.Tree",
            "org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry",
            "org.hibernate.TypeHelper",
            "org.hibernate.property.access.spi.PropertyAccessStrategy",
            "javax.persistence.metamodel.CollectionAttribute",
            "org.jboss.logging.BasicLogger",
            "javax.servlet.AsyncContext",
            "org.springframework.util.concurrent.SuccessCallback",
            "java.util.PrimitiveIterator$OfLong",
            "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder",
            "java.time.temporal.TemporalAmount",
            "java.awt.peer.CheckboxPeer",
            "java.util.function.IntFunction",
            "org.springframework.context.MessageSource",
            "org.springframework.beans.MutablePropertyValues",
            "org.springframework.data.domain.ExampleMatcher",
            "org.springframework.boot.diagnostics.FailureAnalyzers",
            "org.springframework.expression.ExpressionParser",
            "java.awt.GraphicsConfigTemplate",
            "org.hibernate.engine.spi.ActionQueue$AfterTransactionCompletionProcessQueue",
            "org.springframework.jdbc.core.ResultSetExtractor",
            "org.hibernate.persister.entity.EntityPersister",
            "org.springframework.web.context.request.async.DeferredResult$DeferredResultHandler",
            "java.lang.management.MemoryMXBean",
            "javax.swing.event.MenuDragMouseEvent",
            "javax.servlet.AsyncListener",
            "org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer",
            "org.hibernate.hql.internal.ast.tree.SelectExpressionList",
            "javassist.bytecode.ConstInfo",
            "org.hibernate.event.spi.EventType",
            "org.hibernate.internal.SessionFactoryImpl",
            "org.springframework.scheduling.TriggerContext",
            "org.hibernate.result.Output",
            "org.hibernate.SessionBuilder",
            "org.springframework.core.io.ResourceLoader",
            "java.util.TimeZone",
            "java.util.Collection",
            "javax.servlet.MultipartConfigElement",
            "java.util.function.BinaryOperator",
            "javax.persistence.metamodel.ListAttribute",
            "javax.persistence.criteria.Order",
            "java.util.Queue",
            "java.time.temporal.Temporal",
            "java.util.concurrent.AbstractExecutorService",
            "org.springframework.messaging.simp.config.MessageBrokerRegistry",
            "javax.swing.SwingContainer",
            "org.w3c.dom.Attr",
            "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer",
            "org.hibernate.cache.spi.access.RegionAccessStrategy",
            "javax.servlet.ServletOutputStream",
            "javax.management.Attribute",
            "java.util.LinkedList",
            "org.springframework.security.core.authority.mapping.MappableAttributesRetriever",
            "antlr.debug.SyntacticPredicateListener",
            "org.hibernate.type.descriptor.WrapperOptions",
            "java.nio.channels.ReadableByteChannel",
            "org.springframework.security.web.authentication.preauth.x509.X509PrincipalExtractor",
            "javax.naming.Name",
            "java.io.FileInputStream",
            "org.springframework.web.socket.config.annotation.StompEndpointRegistry",
            "java.sql.Date",
            "java.util.AbstractMap",
            "org.springframework.security.crypto.password.PasswordEncoder",
            "java.awt.PageAttributes$ColorType",
            "javax.xml.stream.Location",
            "org.springframework.security.config.annotation.web.configurers.CorsConfigurer",
            "java.sql.Blob",
            "org.hibernate.sql.SelectFragment",
            "org.springframework.context.ApplicationContextInitializer",
            "org.springframework.security.web.authentication.WebAuthenticationDetails",
            "sun.util.locale.provider.LocaleProviderAdapter",
            "jdk.internal.org.objectweb.asm.Handle",
            "org.springframework.security.web.header.writers.ContentSecurityPolicyHeaderWriter",
            "org.springframework.web.socket.messaging.SubProtocolHandler",
            "org.apache.commons.lang3.ClassUtils$Interfaces",
            "java.net.InetAddress",
            "javassist.bytecode.CodeAttribute",
            "java.awt.desktop.OpenFilesEvent",
            "java.awt.dnd.DropTargetDropEvent",
            "org.hibernate.cache.spi.TransactionalDataRegion",
            "java.awt.font.LineMetrics",
            "org.apache.commons.beanutils.converters.NumberConverter",
            "javassist.expr.Expr",
            "org.springframework.web.servlet.resource.ResourceTransformer",
            "java.io.FilterOutputStream",
            "java.awt.MenuBar",
            "javax.el.ValueReference",
            "java.beans.PropertyDescriptor",
            "org.springframework.web.servlet.view.AbstractCachingViewResolver",
            "org.hibernate.HibernateException",
            "java.lang.Double",
            "java.lang.reflect.WildcardType",
            "java.lang.ref.ReferenceQueue",
            "org.hibernate.tuple.StandardProperty",
            "org.springframework.cache.Cache$ValueWrapper",
            "org.hibernate.persister.walking.spi.AttributeSource",
            "java.awt.BufferCapabilities",
            "javassist.expr.ExprEditor",
            "org.hibernate.criterion.Criterion",
            "java.io.DataOutput",
            "org.springframework.security.web.authentication.AnonymousAuthenticationFilter",
            "javax.persistence.metamodel.Type",
            "java.lang.invoke.BoundMethodHandle$Specializer",
            "org.hibernate.boot.model.naming.ImplicitDiscriminatorColumnNameSource",
            "java.util.regex.Pattern$TreeInfo",
            "java.awt.PageAttributes$MediaType",
            "org.springframework.messaging.MessageHeaders",
            "java.awt.geom.Path2D",
            "org.hibernate.boot.MetadataBuilder",
            "jdk.internal.org.objectweb.asm.Item",
            "java.beans.PropertyChangeSupport",
            "org.hibernate.procedure.spi.CallableStatementSupport",
            "org.hibernate.engine.spi.ValueInclusion",
            "javax.persistence.criteria.CriteriaBuilder$Coalesce",
            "javax.persistence.criteria.Fetch",
            "javax.persistence.criteria.CommonAbstractCriteria",
            "org.hibernate.resource.transaction.spi.TransactionStatus",
            "org.springframework.ui.ModelMap",
            "org.w3c.dom.EntityReference",
            "org.hibernate.JDBCException",
            "org.springframework.security.access.ConfigAttribute",
            "org.hibernate.cache.spi.entry.CacheEntry",
            "java.awt.datatransfer.FlavorEvent",
            "java.util.Properties$LineReader",
            "javax.swing.Icon",
            "org.springframework.security.web.firewall.FirewalledRequest",
            "org.hibernate.cache.spi.QueryCacheFactory",
            "javassist.bytecode.MethodInfo",
            "java.io.ObjectInputFilter",
            "org.hibernate.tuple.entity.EntityMetamodel$1",
            "sun.java2d.cmm.ProfileDeferralInfo",
            "sun.util.spi.CalendarProvider",
            "org.hibernate.internal.CoreMessageLogger",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.messaging.simp.config.AbstractBrokerRegistration",
            "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
            "org.hibernate.persister.entity.SQLLoadable",
            "antlr.LLkParser",
            "java.lang.invoke.SerializedLambda",
            "sun.reflect.generics.tree.ReturnType",
            "java.awt.event.AdjustmentEvent",
            "sun.font.CreatedFontTracker",
            "org.springframework.core.io.AbstractResource",
            "sun.reflect.generics.tree.DoubleSignature",
            "org.hibernate.cache.spi.GeneralDataRegion",
            "org.hibernate.type.descriptor.ValueExtractor",
            "org.springframework.beans.ConfigurablePropertyAccessor",
            "org.springframework.web.bind.annotation.Mapping"
          ],
          "phantomClasses": [
            "org.springframework.security.ldap.authentication.LdapAuthenticationProvider",
            "groovy.lang.Closure",
            "org.apache.logging.log4j.message.LocalizedMessageFactory",
            "org.apache.logging.log4j.message.ParameterizedNoReferenceMessageFactory",
            "org.osgi.framework.BundleContext",
            "org.springframework.security.openid.OpenIDAttribute",
            "org.jaxen.FunctionContext",
            "javax.enterprise.util.Nonbinding",
            "javax.xml.bind.JAXBContext",
            "org.springframework.security.ldap.search.LdapUserSearch",
            "org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator",
            "javax.xml.bind.annotation.XmlAccessorType",
            "org.springframework.security.openid.AxFetchListFactory",
            "org.apache.logging.log4j.message.MessageFormatMessageFactory",
            "org.springframework.security.openid.OpenIDConsumer",
            "javax.interceptor.InterceptorBinding",
            "org.springframework.ldap.core.support.BaseLdapPathContextSource",
            "org.springframework.security.ldap.DefaultSpringSecurityContextSource",
            "org.osgi.framework.Bundle",
            "org.springframework.security.ldap.authentication.BindAuthenticator",
            "org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator",
            "org.apache.logging.log4j.message.ParameterizedMessageFactory",
            "org.apache.logging.log4j.message.ReusableSimpleMessage",
            "org.apache.logging.log4j.message.StringFormatterMessageFactory",
            "org.springframework.security.ldap.userdetails.UserDetailsContextMapper",
            "org.apache.logging.log4j.message.MessageFactory",
            "javax.xml.bind.annotation.XmlRootElement",
            "org.apache.logging.log4j.message.FormattedMessageFactory",
            "org.osgi.framework.BundleActivator",
            "org.jaxen.VariableContext",
            "org.springframework.security.ldap.authentication.LdapAuthenticator",
            "javax.xml.bind.annotation.XmlType",
            "org.jaxen.NamespaceContext",
            "org.apache.logging.log4j.message.SimpleMessageFactory",
            "org.openid4java.consumer.ConsumerManager",
            "org.apache.logging.log4j.message.ReusableMessageFactory",
            "org.apache.logging.log4j.message.AbstractMessageFactory"
          ],
          "methodCount": 41109,
          "methodWithBodyCount": 1941,
          "fileCount": 1,
          "dangerousCalls": [
            {
              "ruleId": "reflection-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "Class.forName($stack0);    // Java line 44"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerResolver.java"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "$stack0.error($stack1, $local4);    // Java line 57"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "LogMsgFactory.java"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "$stack0.error($stack1, $local8);    // Java line 50"
                  }
                }
              }
            },
            {
              "ruleId": "csrf-protection-disabled",
              "location": {
                "artifactLocation": {
                  "uri": "WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 83,
                  "snippet": {
                    "text": "$stack0 = $stack0.disable();    // Java line 83"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "MappingFileReader.java"
                },
                "region": {
                  "startLine": 60,
                  "snippet": {
                    "text": "$stack0.error($stack1, e);    // Java line 60"
                  }
                }
              }
            },
            {
              "ruleId": "reflection-injection",
              "location": {
                "artifactLocation": {
                  "uri": "ConstructionStrategies.java"
                },
                "region": {
                  "startLine": 223,
                  "snippet": {
                    "text": "$stack1 = Class.forName($stack1);    // Java line 223"
                  }
                }
              }
            },
            {
              "ruleId": "ssrf",
              "location": {
                "artifactLocation": {
                  "uri": "MappingFileReader.java"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "stream = url.openStream();    // Java line 57"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "StatisticsManagerImpl.java"
                },
                "region": {
                  "startLine": 133,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 133"
                  }
                }
              }
            },
            {
              "ruleId": "reflected-xss",
              "location": {
                "artifactLocation": {
                  "uri": "CustomLogoutSuccessHandler.java"
                },
                "region": {
                  "startLine": 33,
                  "snippet": {
                    "text": "$stack0.write($stack1);    // Java line 33"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GetterSetterPropertyDescriptor.java"
                },
                "region": {
                  "startLine": 216,
                  "snippet": {
                    "text": "$stack0.warn($stack1);    // Java line 216"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "LogMsgFactory.java"
                },
                "region": {
                  "startLine": 68,
                  "snippet": {
                    "text": "$stack0.warn($stack1);    // Java line 68"
                  }
                }
              }
            },
            {
              "ruleId": "ssrf",
              "location": {
                "artifactLocation": {
                  "uri": "GlobalSettings.java"
                },
                "region": {
                  "startLine": 128,
                  "snippet": {
                    "text": "inputStream = url.openStream();    // Java line 128"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerBeanMapper.java"
                },
                "region": {
                  "startLine": 226,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 226"
                  }
                }
              }
            },
            {
              "ruleId": "ssrf",
              "location": {
                "artifactLocation": {
                  "uri": "DozerResolver.java"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "stream = url.openStream();    // Java line 50"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "MappingProcessor.java"
                },
                "region": {
                  "startLine": 314,
                  "snippet": {
                    "text": "$stack0.error($stack1, $local5);    // Java line 314"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 80,
                  "snippet": {
                    "text": "$stack0.info($stack1, name);    // Java line 80"
                  }
                }
              }
            },
            {
              "ruleId": "reflection-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 42,
                  "snippet": {
                    "text": "Class.forName($stack0);    // Java line 42"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GetterSetterPropertyDescriptor.java"
                },
                "region": {
                  "startLine": 222,
                  "snippet": {
                    "text": "$stack0.warn($stack1);    // Java line 222"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GlobalSettings.java"
                },
                "region": {
                  "startLine": 127,
                  "snippet": {
                    "text": "$stack0.info($stack1, url);    // Java line 127"
                  }
                }
              }
            },
            {
              "ruleId": "reflection-injection",
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "startLine": -1,
                  "snippet": {
                    "text": "$local5 = Class.forName($stack0, $stack1, $local3);"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerInitializer.java"
                },
                "region": {
                  "startLine": 75,
                  "snippet": {
                    "text": "$stack0.info($stack1, $stack2, $stack3);    // Java line 75"
                  }
                }
              }
            },
            {
              "ruleId": "reflection-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 43,
                  "snippet": {
                    "text": "Class.forName($stack0);    // Java line 43"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerBeanMapper.java"
                },
                "region": {
                  "startLine": 228,
                  "snippet": {
                    "text": "$stack0.info($stack1, url);    // Java line 228"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerInitializer.java"
                },
                "region": {
                  "startLine": 170,
                  "snippet": {
                    "text": "$stack0.warn($stack1);    // Java line 170"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GlobalSettings.java"
                },
                "region": {
                  "startLine": 121,
                  "snippet": {
                    "text": "$stack0.info($stack1, url);    // Java line 121"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GlobalSettings.java"
                },
                "region": {
                  "startLine": 113,
                  "snippet": {
                    "text": "$stack0.info($stack1, propFileName);    // Java line 113"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerInitializer.java"
                },
                "region": {
                  "startLine": 91,
                  "snippet": {
                    "text": "$stack0.warn($stack1, $local3);    // Java line 91"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerBeanMapper.java"
                },
                "region": {
                  "startLine": 222,
                  "snippet": {
                    "text": "$stack0.info($stack1, mappingFiles);    // Java line 222"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "MappingStreamReader.java"
                },
                "region": {
                  "startLine": 53,
                  "snippet": {
                    "text": "$stack0.error($stack1, $local3);    // Java line 53"
                  }
                }
              }
            },
            {
              "ruleId": "redos",
              "location": {
                "artifactLocation": {
                  "uri": "CopyByReference.java"
                },
                "region": {
                  "startLine": 56,
                  "snippet": {
                    "text": "$stack0 = Pattern.compile(regexp);    // Java line 56"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 66,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 66"
                  }
                }
              }
            },
            {
              "ruleId": "reflected-xss",
              "location": {
                "artifactLocation": {
                  "uri": "CustomAuthenticationSuccessHandler.java"
                },
                "region": {
                  "startLine": 30,
                  "snippet": {
                    "text": "$stack0.write($stack1);    // Java line 30"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GetterSetterPropertyDescriptor.java"
                },
                "region": {
                  "startLine": 365,
                  "snippet": {
                    "text": "$stack0.warn($stack1, $local2);    // Java line 365"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerBeanMapper.java"
                },
                "region": {
                  "startLine": 224,
                  "snippet": {
                    "text": "$stack0.info($stack1, mappingFileName);    // Java line 224"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerCacheManager.java"
                },
                "region": {
                  "startLine": 88,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 88"
                  }
                }
              }
            },
            {
              "ruleId": "reflection-injection",
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "startLine": -1,
                  "snippet": {
                    "text": "$local4 = Class.forName($stack0, $stack1, $local3);"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerBeanMapper.java"
                },
                "region": {
                  "startLine": 329,
                  "snippet": {
                    "text": "$stack0.error($stack1, e);    // Java line 329"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 68,
                  "snippet": {
                    "text": "$stack0.info($stack1, name);    // Java line 68"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerInitializer.java"
                },
                "region": {
                  "startLine": 154,
                  "snippet": {
                    "text": "$stack0.warn($stack1, e);    // Java line 154"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "Activator.java"
                },
                "region": {
                  "startLine": 40,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 40"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerInitializer.java"
                },
                "region": {
                  "startLine": 179,
                  "snippet": {
                    "text": "$stack0.warn($stack1);    // Java line 179"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "Activator.java"
                },
                "region": {
                  "startLine": 33,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 33"
                  }
                }
              }
            },
            {
              "ruleId": "path-traversal",
              "location": {
                "artifactLocation": {
                  "uri": "FileUtil.java"
                },
                "region": {
                  "startLine": 22,
                  "snippet": {
                    "text": "$stack0.<init>($stack2);    // Java line 22"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "JMXPlatformImpl.java"
                },
                "region": {
                  "startLine": 76,
                  "snippet": {
                    "text": "$stack0.info($stack1, name);    // Java line 76"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "DozerBeanMapper.java"
                },
                "region": {
                  "startLine": 175,
                  "snippet": {
                    "text": "$stack0.info($stack1);    // Java line 175"
                  }
                }
              }
            },
            {
              "ruleId": "sql-injection",
              "location": {
                "artifactLocation": {
                  "uri": "MovieService.java"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "users = $stack0.query($stack1, $stack2);    // Java line 57"
                  }
                }
              }
            },
            {
              "ruleId": "log-injection",
              "location": {
                "artifactLocation": {
                  "uri": "GlobalSettings.java"
                },
                "region": {
                  "startLine": 118,
                  "snippet": {
                    "text": "$stack0.warn($stack1, propFileName);    // Java line 118"
                  }
                }
              }
            },
            {
              "ruleId": "ssrf",
              "location": {
                "artifactLocation": {
                  "uri": "MappingValidator.java"
                },
                "region": {
                  "startLine": 68,
                  "snippet": {
                    "text": "stream = url.openStream();    // Java line 68"
                  }
                }
              }
            }
          ],
          "untrustedDataFlows": [
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / title"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / otherUser"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / id"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / user**"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / description"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / md**"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": "CustomLogoutSuccessHandler.java"
                },
                "region": {
                  "startLine": 33,
                  "snippet": {
                    "text": "$stack0 = response.getWriter();    // Java line 33"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / user"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": "CustomAuthenticationSuccessHandler.java"
                },
                "region": {
                  "startLine": 30,
                  "snippet": {
                    "text": "$stack0 = response.getWriter();    // Java line 30"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / genre"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / oldPassword"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / newPassword"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            },
            {
              "location": {
                "artifactLocation": {
                  "uri": ""
                },
                "region": {
                  "snippet": {
                    "text": "TODO - no entry point / chat**"
                  }
                }
              },
              "entryPoint": "TODO - no entry point"
            }
          ]
        },
        "routesDiscovered": [
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.HelloController.sayHEllo()"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.createMovie(com.kalavit.javulna.dto.MovieDto)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.MovieController.findMovies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.MessageController.getChatMessagesBetweenActualAndOther()"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.MessageController.getChatMessagesBetweenActualAndOther(java.lang.String)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.MessageController.sendChatMessage(com.kalavit.javulna.dto.ChatDto)"
          },
          {
            "routeSignature": "com.kalavit.javulna.springconfig.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.UserController.changePassword(java.lang.String,java.lang.String,java.lang.String)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.UserController.modifyUser(com.kalavit.javulna.dto.UserDto)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.UserController.createUser(com.kalavit.javulna.dto.UserDto)"
          },
          {
            "routeSignature": "com.kalavit.javulna.controllers.rest.UserController.getUsers()"
          }
        ]
      },
      "invocations": [
        {
          "commandLine": "java -jar /app/contrast-scan-java-cli.jar -o /tmp/results.sarif.json /tmp/aa1e5780-d901-49a4-bb77-b3503e5bf43e_107aa44c-1ada-4c5a-9529-dd0454e0edab12724265347115547534/javulna-1.0-SNAPSHOT.jar",
          "startTimeUtc": "2022-12-22T05:22:04.477+00:00",
          "endTimeUtc": "2022-12-22T05:22:45.014+00:00",
          "toolExecutionNotifications": [
            {
              "message": {
                "text": "[com.kalavit.javulna.controllers.rest.MessageController.getChatMessagesBetweenActualAndOther()] entrypoint analysis timeout."
              },
              "descriptor": {
                "id": "EntrypointAnalysis/maxTimeExceeded"
              }
            },
            {
              "message": {
                "text": "[com.kalavit.javulna.controllers.rest.MessageController.getChatMessagesBetweenActualAndOther(java.lang.String)] entrypoint analysis timeout."
              },
              "descriptor": {
                "id": "EntrypointAnalysis/maxTimeExceeded"
              }
            },
            {
              "message": {
                "text": "[com.kalavit.javulna.controllers.rest.MessageController.sendChatMessage(com.kalavit.javulna.dto.ChatDto)] entrypoint analysis timeout."
              },
              "descriptor": {
                "id": "EntrypointAnalysis/maxTimeExceeded"
              }
            },
            {
              "message": {
                "text": "[com.kalavit.javulna.controllers.rest.UserController.modifyUser(com.kalavit.javulna.dto.UserDto)] entrypoint analysis timeout."
              },
              "descriptor": {
                "id": "EntrypointAnalysis/maxTimeExceeded"
              }
            },
            {
              "message": {
                "text": "[com.kalavit.javulna.controllers.rest.UserController.createUser(com.kalavit.javulna.dto.UserDto)] entrypoint analysis timeout."
              },
              "descriptor": {
                "id": "EntrypointAnalysis/maxTimeExceeded"
              }
            }
          ],
          "executionSuccessful": true
        }
      ]
    }
  ]
}