{
    "content":
    [
        {
            "problem_id": "2e02dc30-5995-488d-be62-98331fe2fe68",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/flows/Example1.flow-meta.xml",
            "blame":
            {
                "sha": "e2422249bcc9ec92d186c9215115486435c47bd6",
                "short_sha": "e242224",
                "commit_comment": "feat: Example1.flow added",
                "contributor":
                {
                    "email": "gianc",
                    "avatar": "https://www.gravatar.com/avatar/78ec6a338950ae5c299555d33afbc440?s=60"
                },
                "html_url": "https://app.clayton.io/workspace/149fd1d3-bc3b-4a94-af24-0dc07b00a7cd/a6fe20e1-b104-45f2-aa51-8a98e0b53018/scan/412fb642-bed4-45ce-a67b-2ea6ba560147",
                "line": 79,
                "date": "2022-12-06 19:49:34.000+0000"
            },
            "comment_body": "Flow \"Example1\" is not active. Consider removing.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/flows/Example1.flow-meta.xml#L79",
            "details_url": "https://app.clayton.io/preview/issue-details/2e02dc30-5995-488d-be62-98331fe2fe68",
            "problem_name_singular": "Inactive flow",
            "severity": "ERROR",
            "rationale": "As a best practice, teams should remove any logic that is no longer required to keep the application cleaner, more efficient and easier to understand and maintain.",
            "name": "Inactive flow",
            "remediation_effort": 300000,
            "source": "GitHub"
        },
        {
            "problem_id": "de131514-7649-46e7-8b6d-17ce9ffac4d5",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController3.cls",
            "blame":
            {
                "sha": "59447ce882604196fd91239cf89ef572c796d96b",
                "short_sha": "59447ce",
                "commit_comment": "more problems",
                "contributor":
                {
                    "email": "gianc",
                    "avatar": "https://www.gravatar.com/avatar/78ec6a338950ae5c299555d33afbc440?s=60"
                },
                "line": 72,
                "date": "2021-09-28 07:23:51.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade5\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController3.cls#L72",
            "details_url": "https://app.clayton.io/preview/issue-details/de131514-7649-46e7-8b6d-17ce9ffac4d5",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "bf6ec208-aae7-493b-8d39-c8c8764327eb",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController3.cls",
            "blame":
            {
                "sha": "59447ce882604196fd91239cf89ef572c796d96b",
                "short_sha": "59447ce",
                "commit_comment": "more problems",
                "contributor":
                {
                    "email": "gianc",
                    "avatar": "https://www.gravatar.com/avatar/78ec6a338950ae5c299555d33afbc440?s=60"
                },
                "line": 44,
                "date": "2021-09-28 07:23:51.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade5\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController3.cls#L44",
            "details_url": "https://app.clayton.io/preview/issue-details/bf6ec208-aae7-493b-8d39-c8c8764327eb",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "7b87490f-fd82-43a7-90c7-0c83872b141d",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController3.cls",
            "blame":
            {
                "sha": "59447ce882604196fd91239cf89ef572c796d96b",
                "short_sha": "59447ce",
                "commit_comment": "more problems",
                "contributor":
                {
                    "email": "gianc",
                    "avatar": "https://www.gravatar.com/avatar/78ec6a338950ae5c299555d33afbc440?s=60"
                },
                "line": 40,
                "date": "2021-09-28 07:23:51.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade4\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController3.cls#L40",
            "details_url": "https://app.clayton.io/preview/issue-details/7b87490f-fd82-43a7-90c7-0c83872b141d",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "70ec7d72-53cd-45d6-b6f7-61d5fb811ce2",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController3.cls",
            "blame":
            {
                "sha": "59447ce882604196fd91239cf89ef572c796d96b",
                "short_sha": "59447ce",
                "commit_comment": "more problems",
                "contributor":
                {
                    "email": "gianc",
                    "avatar": "https://www.gravatar.com/avatar/78ec6a338950ae5c299555d33afbc440?s=60"
                },
                "line": 2,
                "date": "2021-09-28 07:23:51.000+0000"
            },
            "comment_body": "Class \"CandidateGradeController3\" does not enforce sharing correctly. Please change to ``Inherited Sharing``.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController3.cls#L2",
            "details_url": "https://app.clayton.io/preview/issue-details/70ec7d72-53cd-45d6-b6f7-61d5fb811ce2",
            "problem_name_singular": "Missing or incorrect sharing clause",
            "severity": "ERROR",
            "rationale": "Because Apex generally runs in system context, permissions, field-level security, and sharing rules aren't taken into account during code execution. This might put applications at risk of inadvertently exposing sensitive data.",
            "name": "Sharing violation",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1745f66a-58be-4fd9-89e2-4d418d466ee8",
                        "title": "Violation of Secure Design Principles",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product violates well-established principles for secure design.",
                        "url": "https://cwe.mitre.org/data/definitions/657.html"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3abdc8c0-a65e-4f23-8544-ae0a34a6c085",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "fd0d3f24-2df5-4f1a-8fc8-d70b9ce04fe2",
                        "title": "Using the with sharing, without sharing, and inherited sharing Keywords",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Use the with sharing or without sharing keywords on a class to specify whether sharing rules must be enforced. Use the inherited sharing keyword on a class to run the class in the sharing mode of the class that called it.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_keywords_sharing.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5afd27ad-748d-45b3-b508-2f32af75b24b",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "17d00ca6-44cd-4f43-8401-608976dc6a15",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController3.cls",
            "blame":
            {
                "sha": "59447ce882604196fd91239cf89ef572c796d96b",
                "short_sha": "59447ce",
                "commit_comment": "more problems",
                "contributor":
                {
                    "email": "gianc",
                    "avatar": "https://www.gravatar.com/avatar/78ec6a338950ae5c299555d33afbc440?s=60"
                },
                "line": 7,
                "date": "2021-09-28 07:23:51.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade4\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController3.cls#L7",
            "details_url": "https://app.clayton.io/preview/issue-details/17d00ca6-44cd-4f43-8401-608976dc6a15",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "fc03cade-ed5b-4c5c-a6c8-665e19232264",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController2.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 30,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController2.cls#L30",
            "details_url": "https://app.clayton.io/preview/issue-details/fc03cade-ed5b-4c5c-a6c8-665e19232264",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "edb4533e-2d97-4565-9fba-8611bbcee027",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 64,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isUpdateable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L64",
            "details_url": "https://app.clayton.io/preview/issue-details/edb4533e-2d97-4565-9fba-8611bbcee027",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "d549b37e-3f4a-4321-8f92-55b1ebf729a6",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 111,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isCreateable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L111",
            "details_url": "https://app.clayton.io/preview/issue-details/d549b37e-3f4a-4321-8f92-55b1ebf729a6",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "ccad5d36-dfb5-4317-ad57-44ae97a2e0ea",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController2.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 30,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController2.cls#L30",
            "details_url": "https://app.clayton.io/preview/issue-details/ccad5d36-dfb5-4317-ad57-44ae97a2e0ea",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "c8930b2d-013c-4112-b121-35b6953c6015",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 119,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isCreateable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L119",
            "details_url": "https://app.clayton.io/preview/issue-details/c8930b2d-013c-4112-b121-35b6953c6015",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "c3e11064-550f-4bd8-811d-ed7ffcc659dc",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 90,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isAccessible\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L90",
            "details_url": "https://app.clayton.io/preview/issue-details/c3e11064-550f-4bd8-811d-ed7ffcc659dc",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "bf7e5734-0ee0-4b41-96e0-154aeff80415",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController4.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 4,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController4.cls#L4",
            "details_url": "https://app.clayton.io/preview/issue-details/bf7e5734-0ee0-4b41-96e0-154aeff80415",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "a7ba98ad-d221-4f71-8e70-ffcb4818405e",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 5,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"updateAsUser\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L5",
            "details_url": "https://app.clayton.io/preview/issue-details/a7ba98ad-d221-4f71-8e70-ffcb4818405e",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "a2ed8830-1a19-41a1-90ee-edfc3177b6ad",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController3.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 4,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController3.cls#L4",
            "details_url": "https://app.clayton.io/preview/issue-details/a2ed8830-1a19-41a1-90ee-edfc3177b6ad",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "a0e01fa4-89a4-4938-8a4e-999f47586dbc",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 40,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"deleteAsUser\" is not necessary. Consider removing it.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L40",
            "details_url": "https://app.clayton.io/preview/issue-details/a0e01fa4-89a4-4938-8a4e-999f47586dbc",
            "problem_name_singular": "Unnecessary code",
            "severity": "ERROR",
            "rationale": "Removing unnecessary code makes your app cleaner, more efficient and easier to understand.",
            "name": "Unused Apex method",
            "remediation_effort": 300000,
            "source": "GitHub"
        },
        {
            "problem_id": "99283ea7-a832-4f4c-b883-dd9f6d373e9c",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 115,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isCreateable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L115",
            "details_url": "https://app.clayton.io/preview/issue-details/99283ea7-a832-4f4c-b883-dd9f6d373e9c",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "91b9e95d-aa9b-49be-86f8-4b0bb36ee7a3",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 31,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController.cls#L31",
            "details_url": "https://app.clayton.io/preview/issue-details/91b9e95d-aa9b-49be-86f8-4b0bb36ee7a3",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": null,
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "8e27099a-3591-4b8b-a64d-2b06e0917cb2",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 31,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController.cls#L31",
            "details_url": "https://app.clayton.io/preview/issue-details/8e27099a-3591-4b8b-a64d-2b06e0917cb2",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "8b377877-e6ec-4e02-ace0-4cc3c9ee016c",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 111,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isCreateable\" is not necessary. Consider removing it.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L111",
            "details_url": "https://app.clayton.io/preview/issue-details/8b377877-e6ec-4e02-ace0-4cc3c9ee016c",
            "problem_name_singular": "Unnecessary code",
            "severity": "ERROR",
            "rationale": "Removing unnecessary code makes your app cleaner, more efficient and easier to understand.",
            "name": "Unused Apex method",
            "remediation_effort": 300000,
            "source": "GitHub"
        },
        {
            "problem_id": "86d60d82-ea4c-4566-bd21-94146c5c2289",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 82,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isAccessible\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L82",
            "details_url": "https://app.clayton.io/preview/issue-details/86d60d82-ea4c-4566-bd21-94146c5c2289",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "7a023fa3-3366-48eb-815d-3f86a8cac79e",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 8,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"insertAsUser\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L8",
            "details_url": "https://app.clayton.io/preview/issue-details/7a023fa3-3366-48eb-815d-3f86a8cac79e",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "777cd728-e3e5-4c09-8486-47a25d44b1ca",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 7,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController.cls#L7",
            "details_url": "https://app.clayton.io/preview/issue-details/777cd728-e3e5-4c09-8486-47a25d44b1ca",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "6911a417-0a6b-4e22-a12c-5c3824c69350",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController4.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 28,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController4.cls#L28",
            "details_url": "https://app.clayton.io/preview/issue-details/6911a417-0a6b-4e22-a12c-5c3824c69350",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "62a234b7-4322-4eaa-8484-9b7388280b0c",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 68,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isUpdateable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L68",
            "details_url": "https://app.clayton.io/preview/issue-details/62a234b7-4322-4eaa-8484-9b7388280b0c",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "5bb9d62f-2cc7-4905-a942-627385884a5c",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController4.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 28,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController4.cls#L28",
            "details_url": "https://app.clayton.io/preview/issue-details/5bb9d62f-2cc7-4905-a942-627385884a5c",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "515e2f11-de95-456f-b66c-c734751f050d",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 5,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"updateAsUser\" is not necessary. Consider removing it.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L5",
            "details_url": "https://app.clayton.io/preview/issue-details/515e2f11-de95-456f-b66c-c734751f050d",
            "problem_name_singular": "Unnecessary code",
            "severity": "ERROR",
            "rationale": "Removing unnecessary code makes your app cleaner, more efficient and easier to understand.",
            "name": "Unused Apex method",
            "remediation_effort": 300000,
            "source": "GitHub"
        },
        {
            "problem_id": "4d7f8f53-6a39-4ef8-8398-20cb40f1b55d",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 43,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"deleteAsUser\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L43",
            "details_url": "https://app.clayton.io/preview/issue-details/4d7f8f53-6a39-4ef8-8398-20cb40f1b55d",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "4508b751-8078-4dd8-aa6a-f54c8fc2af4c",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController2.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 4,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController2.cls#L4",
            "details_url": "https://app.clayton.io/preview/issue-details/4508b751-8078-4dd8-aa6a-f54c8fc2af4c",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "3e10a3fa-9a92-418d-9d39-5c82cde4e858",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 2,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"insertAsUser\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L2",
            "details_url": "https://app.clayton.io/preview/issue-details/3e10a3fa-9a92-418d-9d39-5c82cde4e858",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "3bb1418b-68f5-46bf-bd9f-f1927dbeafe2",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 60,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isUpdateable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L60",
            "details_url": "https://app.clayton.io/preview/issue-details/3bb1418b-68f5-46bf-bd9f-f1927dbeafe2",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "397e0fad-d3cc-4ea8-9ceb-fb0ddcd29cf4",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 40,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"deleteAsUser\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L40",
            "details_url": "https://app.clayton.io/preview/issue-details/397e0fad-d3cc-4ea8-9ceb-fb0ddcd29cf4",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "3682e241-a04f-41e7-a931-ff6c707d42eb",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 86,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isAccessible\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L86",
            "details_url": "https://app.clayton.io/preview/issue-details/3682e241-a04f-41e7-a931-ff6c707d42eb",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "339cb828-ea86-4366-9964-028ee131ad0b",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController3.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 28,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController3.cls#L28",
            "details_url": "https://app.clayton.io/preview/issue-details/339cb828-ea86-4366-9964-028ee131ad0b",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "317a3845-1a7a-4f99-a7fc-68b2d010bc66",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 24,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"updateAsUser\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L24",
            "details_url": "https://app.clayton.io/preview/issue-details/317a3845-1a7a-4f99-a7fc-68b2d010bc66",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "1b8a4c0b-3701-49f1-8c4b-77a69884e3dd",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/LookupController3.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 28,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"findRecords\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/LookupController3.cls#L28",
            "details_url": "https://app.clayton.io/preview/issue-details/1b8a4c0b-3701-49f1-8c4b-77a69884e3dd",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "090e6160-8029-4ce9-b49a-7678802e115a",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/utility/classes/DMLHelper.cls",
            "blame":
            {
                "sha": "79400647b64b4ea2d2116984774232732beb2c5a",
                "short_sha": "7940064",
                "commit_comment": "Add files via upload",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 133,
                "date": "2021-06-21 14:11:12.000+0000"
            },
            "comment_body": "Method \"isDeletable\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/utility/classes/DMLHelper.cls#L133",
            "details_url": "https://app.clayton.io/preview/issue-details/090e6160-8029-4ce9-b49a-7678802e115a",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "78f902f2-0764-4bb1-af68-25301af58399",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "1602d64795fc0757765711277bb21405978cc2a9",
                "short_sha": "1602d64",
                "commit_comment": "Update CandidateGradeController.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 1,
                "date": "2021-03-01 09:22:55.000+0000"
            },
            "comment_body": "Class \"CandidateGradeController\" does not enforce sharing correctly. Please change to ``Inherited Sharing``.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L1",
            "details_url": "https://app.clayton.io/preview/issue-details/78f902f2-0764-4bb1-af68-25301af58399",
            "problem_name_singular": "Missing or incorrect sharing clause",
            "severity": "ERROR",
            "rationale": "Because Apex generally runs in system context, permissions, field-level security, and sharing rules aren't taken into account during code execution. This might put applications at risk of inadvertently exposing sensitive data.",
            "name": "Sharing violation",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1745f66a-58be-4fd9-89e2-4d418d466ee8",
                        "title": "Violation of Secure Design Principles",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product violates well-established principles for secure design.",
                        "url": "https://cwe.mitre.org/data/definitions/657.html"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3abdc8c0-a65e-4f23-8544-ae0a34a6c085",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "fd0d3f24-2df5-4f1a-8fc8-d70b9ce04fe2",
                        "title": "Using the with sharing, without sharing, and inherited sharing Keywords",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Use the with sharing or without sharing keywords on a class to specify whether sharing rules must be enforced. Use the inherited sharing keyword on a class to run the class in the sharing mode of the class that called it.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_keywords_sharing.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5afd27ad-748d-45b3-b508-2f32af75b24b",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "373e4c28-3f64-4a1a-917c-1a3a650d6761",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "cde0fe6b52574848a6af6a24923e6dbd39503878",
                "short_sha": "cde0fe6",
                "commit_comment": "Update CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Andrea Pellegatta",
                    "avatar": "https://www.gravatar.com/avatar/2d718cdef2e7a602e5e1855907d8682f?s=60"
                },
                "line": 2,
                "date": "2021-02-22 10:54:22.000+0000"
            },
            "comment_body": "Class \"CandidateGradeController2\" does not enforce sharing correctly. Please change to ``Inherited Sharing``.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L2",
            "details_url": "https://app.clayton.io/preview/issue-details/373e4c28-3f64-4a1a-917c-1a3a650d6761",
            "problem_name_singular": "Missing or incorrect sharing clause",
            "severity": "ERROR",
            "rationale": "Because Apex generally runs in system context, permissions, field-level security, and sharing rules aren't taken into account during code execution. This might put applications at risk of inadvertently exposing sensitive data.",
            "name": "Sharing violation",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1745f66a-58be-4fd9-89e2-4d418d466ee8",
                        "title": "Violation of Secure Design Principles",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product violates well-established principles for secure design.",
                        "url": "https://cwe.mitre.org/data/definitions/657.html"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3abdc8c0-a65e-4f23-8544-ae0a34a6c085",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "fd0d3f24-2df5-4f1a-8fc8-d70b9ce04fe2",
                        "title": "Using the with sharing, without sharing, and inherited sharing Keywords",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Use the with sharing or without sharing keywords on a class to specify whether sharing rules must be enforced. Use the inherited sharing keyword on a class to run the class in the sharing mode of the class that called it.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_keywords_sharing.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5afd27ad-748d-45b3-b508-2f32af75b24b",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "fb9dee60-b6e0-4828-b560-6871c9c638e9",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "04ac40cf02eef9d3531dddb66534af2fd26016a7",
                "short_sha": "04ac40c",
                "commit_comment": "Create CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 72,
                "date": "2020-10-16 14:41:21.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade5\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L72",
            "details_url": "https://app.clayton.io/preview/issue-details/fb9dee60-b6e0-4828-b560-6871c9c638e9",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "e8308ec8-c8bc-45cb-af5d-07d35326caa2",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "04ac40cf02eef9d3531dddb66534af2fd26016a7",
                "short_sha": "04ac40c",
                "commit_comment": "Create CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 44,
                "date": "2020-10-16 14:41:21.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade5\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L44",
            "details_url": "https://app.clayton.io/preview/issue-details/e8308ec8-c8bc-45cb-af5d-07d35326caa2",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "b277caf7-2a4a-4505-b314-868dae9db6a2",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "04ac40cf02eef9d3531dddb66534af2fd26016a7",
                "short_sha": "04ac40c",
                "commit_comment": "Create CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 7,
                "date": "2020-10-16 14:41:21.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade4\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L7",
            "details_url": "https://app.clayton.io/preview/issue-details/b277caf7-2a4a-4505-b314-868dae9db6a2",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "594c9f3f-9563-494d-b38a-31b12024e1ea",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "04ac40cf02eef9d3531dddb66534af2fd26016a7",
                "short_sha": "04ac40c",
                "commit_comment": "Create CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 72,
                "date": "2020-10-16 14:41:21.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade5\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L72",
            "details_url": "https://app.clayton.io/preview/issue-details/594c9f3f-9563-494d-b38a-31b12024e1ea",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "3b2ce373-61fb-4184-9ceb-5a2df7fc90ea",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "04ac40cf02eef9d3531dddb66534af2fd26016a7",
                "short_sha": "04ac40c",
                "commit_comment": "Create CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 40,
                "date": "2020-10-16 14:41:21.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade4\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L40",
            "details_url": "https://app.clayton.io/preview/issue-details/3b2ce373-61fb-4184-9ceb-5a2df7fc90ea",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "24bab100-9f38-4b85-9993-64693a2f67fd",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController2.cls",
            "blame":
            {
                "sha": "04ac40cf02eef9d3531dddb66534af2fd26016a7",
                "short_sha": "04ac40c",
                "commit_comment": "Create CandidateGradeController2.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 40,
                "date": "2020-10-16 14:41:21.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade4\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController2.cls#L40",
            "details_url": "https://app.clayton.io/preview/issue-details/24bab100-9f38-4b85-9993-64693a2f67fd",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "e37a2f47-c793-45d6-b273-5c3061f16337",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "409c21109bb01cedaafb6bcb34316f1335b231fb",
                "short_sha": "409c211",
                "commit_comment": "Update CandidateGradeController.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 40,
                "date": "2020-10-16 14:39:53.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade2\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L40",
            "details_url": "https://app.clayton.io/preview/issue-details/e37a2f47-c793-45d6-b273-5c3061f16337",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        },
        {
            "problem_id": "9dc92961-0fed-4546-89ae-2e158b288969",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "823afba333ad654a13447691e0f88d0b8e4ccf8b",
                "short_sha": "823afba",
                "commit_comment": "Update CandidateGradeController.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 36,
                "date": "2020-10-16 14:38:22.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L36",
            "details_url": "https://app.clayton.io/preview/issue-details/9dc92961-0fed-4546-89ae-2e158b288969",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "09c96e95-a19f-4a35-b8d8-77ca0277a2ec",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "823afba333ad654a13447691e0f88d0b8e4ccf8b",
                "short_sha": "823afba",
                "commit_comment": "Update CandidateGradeController.cls",
                "contributor":
                {
                    "email": "Gabriele Gallo Stampino",
                    "avatar": "https://www.gravatar.com/avatar/7a03bd7c3834a54c667975052c812297?s=60"
                },
                "line": 36,
                "date": "2020-10-16 14:38:22.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L36",
            "details_url": "https://app.clayton.io/preview/issue-details/09c96e95-a19f-4a35-b8d8-77ca0277a2ec",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "ad800e7d-7d1f-4dd4-97e3-89724c39542f",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "6b9b63814da9b7d84ce3424d3f520cbe3609f6f6",
                "short_sha": "6b9b638",
                "commit_comment": "first commit",
                "contributor":
                {
                    "email": "Lorenzo Frattini",
                    "avatar": "https://www.gravatar.com/avatar/bcc107cc23c2558f0bfe0a9ff91d7dda?s=60"
                },
                "line": 68,
                "date": "2020-07-21 16:01:07.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade2\" can bypass CRUD (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L68",
            "details_url": "https://app.clayton.io/preview/issue-details/ad800e7d-7d1f-4dd4-97e3-89724c39542f",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "6d361888-1f50-4379-b25e-4a07571bf532",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "6b9b63814da9b7d84ce3424d3f520cbe3609f6f6",
                "short_sha": "6b9b638",
                "commit_comment": "first commit",
                "contributor":
                {
                    "email": "Lorenzo Frattini",
                    "avatar": "https://www.gravatar.com/avatar/bcc107cc23c2558f0bfe0a9ff91d7dda?s=60"
                },
                "line": 68,
                "date": "2020-07-21 16:01:07.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade2\" can bypass Field Level Security (on Read) permission. Please make sure all proper checks are performed before accessing or updating data.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L68",
            "details_url": "https://app.clayton.io/preview/issue-details/6d361888-1f50-4379-b25e-4a07571bf532",
            "problem_name_singular": "CRUD/FLS violation",
            "severity": "CRITICAL",
            "rationale": "CRUD and FLS are authorization settings that let Admins specify which objects and which fields on an object a user can access and modify. There are cases where developers use Visualforce or Lightning to display data derived from an SObject field in an indirect or processed form. In such scenarios CRUD and FLS should be manually enforced.",
            "name": "CRUD and FLS violation",
            "remediation_effort": 3600000,
            "source": "GitHub",
            "resources":
            {
                "CWE":
                [
                    {
                        "id": "1e53c923-0f33-4347-9357-eb0210aa8c41",
                        "title": "Improper Authorization",
                        "authority": "CWE",
                        "authority_id": "CWE",
                        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                        "url": "https://cwe.mitre.org/data/definitions/285.html"
                    }
                ],
                "Trailhead":
                [
                    {
                        "id": "5ac078fc-1b71-4543-9bde-32ca16ab4d00",
                        "title": "Data Security",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Control access to data using point-and-click security tools.Add to FavoritesAdd to TrailmixTags",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/data_security?trailmix_creator_id=strailhead&trailmix_slug=data-analytics-lead-data-architect"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "3389e42d-db64-4e34-a410-9a6d592da888",
                        "title": "CRUD and Field-Level Security (FLS)",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "You must manually enforce CRUD and FLS in your Apex controllers.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.220.0.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "d570a22a-69a2-49c6-a89a-ac372bd1d789",
                        "title": "Securing Data in Apex Controllers",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "By default, Apex runs in system mode, which means that it runs with substantially elevated permissions, acting as if the user had most permissions and all field- and object-level access granted. Because these security layers aren’t enforced like they are in the Salesforce UI, you must write code to enforce them.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/apex_crud_fls.htm"
                    },
                    {
                        "id": "2d228b88-7375-4756-8a23-b66ac8db8275",
                        "title": "Field-Level Security",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Field-level security settings let you restrict users’ access to view and edit specific fields.",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.securityImplGuide.meta/securityImplGuide/admin_fls.htm"
                    }
                ],
                "OWASP":
                [
                    {
                        "id": "5093b2a2-223d-4ede-997a-bd40d7eee0c6",
                        "title": "Broken Access Control",
                        "authority": "OWASP",
                        "authority_id": "OWASP",
                        "description": "OWASP Top 10 2021",
                        "url": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
                    }
                ]
            }
        },
        {
            "problem_id": "61b85e94-74bb-46fb-bf95-bffec337f6a8",
            "type": "NEW_DEVELOPMENTS",
            "relative_path": "force-app/main/default/classes/CandidateGradeController.cls",
            "blame":
            {
                "sha": "6b9b63814da9b7d84ce3424d3f520cbe3609f6f6",
                "short_sha": "6b9b638",
                "commit_comment": "first commit",
                "contributor":
                {
                    "email": "Lorenzo Frattini",
                    "avatar": "https://www.gravatar.com/avatar/bcc107cc23c2558f0bfe0a9ff91d7dda?s=60"
                },
                "line": 7,
                "date": "2020-07-21 16:01:07.000+0000"
            },
            "comment_body": "Method \"getCandidateGrade\" is not tested. Please consider adding a test method to ensure it works as expected.",
            "external_url": "https://github.com:443/Linish2020/sfdx-devsecops-demo/blob/e2422249bcc9ec92d186c9215115486435c47bd6/force-app/main/default/classes/CandidateGradeController.cls#L7",
            "details_url": "https://app.clayton.io/preview/issue-details/61b85e94-74bb-46fb-bf95-bffec337f6a8",
            "problem_name_singular": "Untested method",
            "severity": "WARNING",
            "rationale": "Unit tests ensure that all code meets quality standards before it's deployed. Testing all your code is essential not only to meet Salesforce test coverage requirements but, more importantly, to make sure your logic keeps working as expected as your application evolves.",
            "name": "Untested Apex method",
            "remediation_effort": 900000,
            "source": "GitHub",
            "resources":
            {
                "Trailhead":
                [
                    {
                        "id": "22a31133-f123-4f42-90d2-45ee7f098e74",
                        "title": "Apex Testing",
                        "authority": "Trailhead",
                        "authority_id": "TRAILHEAD",
                        "description": "Apex Testing Trailhead Module",
                        "url": "https://trailhead.salesforce.com/content/learn/modules/apex_testing"
                    }
                ],
                "Developer Documentation":
                [
                    {
                        "id": "1eb99ea0-04a7-46c8-b6bf-78fdd515d587",
                        "title": "Testing Apex",
                        "authority": "Developer Documentation",
                        "authority_id": "DEVELOPER_DOCUMENTATION",
                        "description": "Apex Developer Guide",
                        "url": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing.htm"
                    }
                ]
            }
        }
    ]
}